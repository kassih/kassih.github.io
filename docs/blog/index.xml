<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Blog on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/blog/</link>
    <description>Recent content in Blog on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 18 Aug 2022 00:39:04 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EHLO world pt.2: I&#39;m back!</title>
      <link>https://fahmifj.github.io/blog/i-am-back/</link>
      <pubDate>Thu, 18 Aug 2022 00:39:04 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/i-am-back/</guid>
      <description>Not quitting the blog yet!</description>
      <content:encoded><![CDATA[<p>Hello readers, it&rsquo;s been a while, hasn&rsquo;t it?</p>
<p>Setelah sekian lamanya, saya akan mulai aktif nge-blog lagi !</p>
<p>Well, memang awalnya gak ada niatan untuk menon-aktifkan blog ini alias <em>quit</em> sih. Malah sebenarnya hal yang mau ditulis pun semakin banyak karna sekarang dapet kerjaan baru dengan intensitas kerja yang lumayan tinggi.</p>
<p>Jadi saking banyaknya ketemu hal baru, belum selesai dengan draft yang satu, saya sudah buat draft lain. Akhirnya draft-draft tadi menggunung selama 9 bulan ðŸ˜….</p>
<p>Nah, karena sekarang intensitas kerjanya sudah lumayan turun, maka saya putuskan untuk kembali ngurus blog ini.</p>
<h2 id="tinjauan-blog-dan-upcoming-plan">Tinjauan blog dan upcoming plan</h2>
<p>Oh ya, karena blog ini sudah berjalan selama lebih dari 1 tahun, ini juga adalah waktu yang tepat untuk meninjau kembali tulisan-tulisan saya disini, dan ternyata ada banyak hal yang perlu diperbarui terutama konten berbahasa inggris ðŸ˜….</p>
<p>Bicara soal bahasa, ada sebuah feedback dari seorang teman yang &ldquo;katanya&rdquo; kesulitan menterjemahkan writeup CTF berbahasa ke-&ldquo;Inggris&rdquo;-an yang saya buat, sehingga dia meminta saya untuk membuatnya dalam bahasa Indonesia. Sayangnya saya gak bisa menyanggupi hal ini karena saya sendiri pun menggunakan bahasa ke-&ldquo;Inggris&rdquo;-an agar terbiasa ðŸ˜¥. Tapi, sebagai gantinya akan saya perbanyak konten tentang IT daily yang berbahasa Indonesia!</p>
<p>Selanjutnya dari bagian tampilan, desain dari blog ini pun sudah tidak lagi unik karena ada beberapa readers yang meminta izin untuk meng-copy desain sekarang, so I feel like I have to create another one with different looks ðŸ˜„.</p>
<p>Jadi ya sebelum benar-benar mulai aktif, ada beberapa hal yang akan saya perbarui dan perbaiki terlebih dahulu.</p>
<p>Baiklah, that&rsquo;s all, see you in the next post</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Tplmap Install</title>
      <link>https://fahmifj.github.io/blog/tplmap-install/</link>
      <pubDate>Fri, 05 Nov 2021 20:40:16 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/tplmap-install/</guid>
      <description>Python pip so weirrd</description>
      <content:encoded><![CDATA[<p>This is a quick note to get <code>tplmap</code> working again!</p>
<p>Previously on <a href="https://fahmifj.github.io/hackthebox/doctor/">HTB: Doctor</a>, this tool was worked fine with python2, but when I tried to use it again on <a href="https://fahmifj.github.io/hackthebox/nunchucks/">HTB: Nunchucks</a>, it threw these error messages.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">â†’ kali@kali Â«tplmapÂ» Â«192.168.1.55Â» git:<span class="o">(</span>master<span class="o">)</span> âœ— 
</span></span><span class="line"><span class="cl">$ python tplmap.py 
</span></span><span class="line"><span class="cl">Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
</span></span><span class="line"><span class="cl">  File <span class="s2">&#34;/opt/tplmap-venv/tplmap/./tplmap.py&#34;</span>, line 2, in &lt;module&gt;
</span></span><span class="line"><span class="cl">    from utils import cliparser
</span></span><span class="line"><span class="cl">  File <span class="s2">&#34;/opt/tplmap-venv/tplmap/utils/cliparser.py&#34;</span>, line 163, in &lt;module&gt;
</span></span><span class="line"><span class="cl">    parser.formatter.format_option_strings <span class="o">=</span> type<span class="o">(</span>parser.formatter.format_option_strings<span class="o">)(</span>_, parser, type<span class="o">(</span>parser<span class="o">))</span>
</span></span><span class="line"><span class="cl">TypeError: method expected <span class="m">2</span> arguments, got <span class="m">3</span>
</span></span></code></pre></div><p>Here&rsquo;s how I resolve it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ python2 -m pip install --upgrade setuptools
</span></span><span class="line"><span class="cl">$ python2 -m pip install virtualenv 
</span></span><span class="line"><span class="cl">$ git clone https://github.com/epinna/tplmap.git
</span></span><span class="line"><span class="cl">$ <span class="nb">cd</span> ./tplmap/
</span></span><span class="line"><span class="cl">$ python2 -m virtualenv tplmap-venv
</span></span><span class="line"><span class="cl">$ <span class="nb">source</span> ./tplmap-venv/bin/activate
</span></span><span class="line"><span class="cl"><span class="o">(</span>tplmap-venv<span class="o">)</span> $ python2 -m pip install -r requirements.txt 
</span></span></code></pre></div><p>All the requirements should be listed now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">(</span>tplmap-venv<span class="o">)</span> â†’ $ python2 -m pip list                                                      
</span></span><span class="line"><span class="cl">--<span class="o">[</span>snip annoying deprecated message<span class="o">]</span>--
</span></span><span class="line"><span class="cl">Package    Version
</span></span><span class="line"><span class="cl">---------- ----------
</span></span><span class="line"><span class="cl">certifi    2018.10.15
</span></span><span class="line"><span class="cl">chardet    3.0.4
</span></span><span class="line"><span class="cl">idna       2.8
</span></span><span class="line"><span class="cl">pip        20.3.4
</span></span><span class="line"><span class="cl">PyYAML     5.1.2
</span></span><span class="line"><span class="cl">requests   2.22.0
</span></span><span class="line"><span class="cl">setuptools 44.1.1
</span></span><span class="line"><span class="cl">urllib3    1.24.1
</span></span><span class="line"><span class="cl">wheel      0.37.0
</span></span></code></pre></div><p>It&rsquo;s working fine now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">(</span>tplmap-venv<span class="o">)</span> â†’ kali@kali Â«tplmapÂ» Â«192.168.1.55Â» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ python2 tplmap.py 
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap 0.5
</span></span><span class="line"><span class="cl">    Automatic Server-Side Template Injection Detection and Exploitation Tool
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Usage: python tplmap.py <span class="o">[</span>options<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tplmap.py: error: URL is required. Run with -h <span class="k">for</span> help.
</span></span></code></pre></div><p>I&rsquo;m not sure about this, but on my other Kali, these commands (without venv) could get <code>tplmap</code> working again.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ python2 install --upgrade setuptools
</span></span><span class="line"><span class="cl">$ python2 -m pip install -r requirements.txt 
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Hosts file, DNS over HTTPS dan SSH SOCKS Proxy [ID]</title>
      <link>https://fahmifj.github.io/blog/hosts-file-dns-over-https-and-ssh-socks-proxy/</link>
      <pubDate>Thu, 04 Nov 2021 16:40:44 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/hosts-file-dns-over-https-and-ssh-socks-proxy/</guid>
      <description>Can we use these to bypass DNS filters and conceal ourselves from ISPs? Let&amp;#39;s find out!</description>
      <content:encoded><![CDATA[<p>Saat ini sebagian besar browser-browser populer sudah memiliki fitur <a href="https://developers.cloudflare.com/1.1.1.1/encrypted-dns">DNS over HTTPS (DoH)</a>. Tapi meskipun begitu, ternyata masih banyak yang belum tahu tentang adanya fitur ini.</p>
<figure>
    <img src="imgs/image-20211104224726768.png"
         alt="Settingan DoH pada Chrome dan Firefox"/> <figcaption>
            <p>Settingan DoH pada Chrome dan Firefox
            </p>
        </figcaption>
</figure>

<p><em><strong>Loh tahu dari mana?</strong></em></p>
<p><em>Flashback</em> sedikit, jadi ada beberapa teman yang setiap kali mau mengakses reddit atahu web streaming anime <del>i</del>legal, mereka harus pakai VPN untuk bypass blokirannya ISP. Karena VPN-nya ini gratisan (baca: dipakai berjamaah dan di-limit), sudah pasti jatuhnya lemot.</p>
<p>Dan setelah mereka tahu soal fitur DoH, salah satunya memberi respon berikut:</p>
<figure>
    <img src="imgs/image-20211103210137432.png"
         alt="Sebuah testimoni"/> <figcaption>
            <p>Sebuah testimoni
            </p>
        </figcaption>
</figure>

<p>Agak risih juga sih ISP di negara ini sukanya main bloc-bloc-an.</p>
<p>Nah di postingan ini saya akan coba bahas kenapa DoH bisa dipakai untuk mem-<em>bypass</em> website yang diblokir. Selanjutnya saya juga akan menggunakan dua cara alternatif untuk melakukan bypass (tanpa VPN) dan mencari tahu apakah cara&quot; tersebut sudah cukup untuk menyembunyikan kita dari ISP.</p>
<h2 id="how-do-isps-block-websites">How do ISPs block websites?</h2>
<p>Normalnya ketika kita mengakses sebuah situs, misal <code>www.reddit.com</code>, komputer kita akan mengirimkan sebuah kueri DNS ke sebuah DNS server untuk menanyakan alamat IP dari domain <code>www.reddit.com</code> agar halaman situs tersebut bisa dimuat kemudian. Kueri DNS ini biasanya diarahkan ke DNS server milik ISP/operator seluler yang kamu pakai.</p>
<p>Nah ketika kita mengakses situs yang kebetulan terdaftar di <em>blacklist</em> DNS server ISP, maka DNS server tersebut akan memberikan alamat IP palsu yang merupakan halaman blokir milik si ISP seperti merconsuar, ipo, dll.</p>
<p>Kita bisa liat alur-nya secara detail dengan WireShark, tetapi agar lebih simple, kita juga bisa menggunakan <code>tracert</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ tracert -4 -d -h <span class="m">5</span> www.reddit.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Tracing route to blockpage.****.id <span class="o">[</span>***.215.197.131<span class="o">]</span> 
</span></span><span class="line"><span class="cl">over a maximum of <span class="m">5</span> hops:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="m">1</span>     <span class="m">2</span> ms     <span class="m">2</span> ms     <span class="m">2</span> ms  192.168.1.1 
</span></span><span class="line"><span class="cl">  <span class="m">2</span>     *        *        *     Request timed out.
</span></span><span class="line"><span class="cl">  <span class="m">3</span>    <span class="m">38</span> ms    <span class="m">32</span> ms    <span class="m">24</span> ms  10.***.44.1 
</span></span><span class="line"><span class="cl">  <span class="m">4</span>    <span class="m">26</span> ms    <span class="m">31</span> ms    <span class="m">22</span> ms  ***.215.248.78 
</span></span><span class="line"><span class="cl">  <span class="m">5</span>    <span class="m">33</span> ms    <span class="m">25</span> ms    <span class="m">27</span> ms  ***.215.248.82 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Trace complete.
</span></span></code></pre></div><blockquote>
<p>Di hop kedua saya kurang yakin apakah modem ADSL tidak punya/punya hop count seperti router yang akhirnya tracert menampilkan timeout, atahu memang pure timeout.</p>
</blockquote>
<p>Berdasarkan hasil <code>tracert</code> diatas, <code>www.reddit.com</code> di <em>resolve</em> ke <code>blockpage.sensor.id</code> yang alamat IPnya <code>***.215.248.131</code> dan kita bisa validasi ini menggunakan <a href="https://toolbox.googleapps.com/apps/dig/#A/">Google Toolbox Dig</a> yang hasilnya:</p>
<figure>
    <img src="imgs/image-20211104095424598.png"
         alt="Hasil dig www.reddit.com"/> <figcaption>
            <p>Hasil dig <a href="https://www.reddit.com">www.reddit.com</a>
            </p>
        </figcaption>
</figure>

<p>Ternyata alamat dari <code>www.reddit.com</code> adalah <code>151.101.X.140</code>, bukan <code>***.215.197.131</code>!</p>
<p>Yah komputernya kena penipuan :/</p>
<p>Anyway, alur <em>request</em>-nya bisa diilustrasikan seperti berikut.</p>
<figure>
    <img src="imgs/image-20211103163418666.png"
         alt="Ilustrasi(nya)"/> <figcaption>
            <p>Ilustrasi(nya)
            </p>
        </figcaption>
</figure>

<p><em><strong>Darimana saya tahu 10.***.44.1 itu router ISP?</strong></em></p>
<p>Nope, saya gak tahu itu router atahu bukan, tapi perangkat ini punya port SSH dan SNMP, jadi kemungkinan perangkat ini di monitor.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ nc -vn 10.***.44.1 <span class="m">22</span>
</span></span><span class="line"><span class="cl">Ncat: Version 5.59BETA1 <span class="o">(</span> http://nmap.org/ncat <span class="o">)</span>
</span></span><span class="line"><span class="cl">Ncat: Connected to 10.***.44.1:22.
</span></span><span class="line"><span class="cl">SSH-2.0-OpenSSH_7.5
</span></span><span class="line"><span class="cl">$ nc -u -vn 10.***.44.1 <span class="m">161</span>
</span></span><span class="line"><span class="cl">Ncat: Version 5.59BETA1 <span class="o">(</span> http://nmap.org/ncat <span class="o">)</span>
</span></span><span class="line"><span class="cl">Ncat: Connected to 10.***.44.1:161
</span></span></code></pre></div><p><em><strong>Tapi kan HTTPS?</strong></em></p>
<p>Enkripsi HTTPS/TLS itu ada di bagian kontennya<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>, sedangkan paket-paket DNS kueri yang dikirimkan untuk me-<em>resolve</em> nama domain ke sebuah alamat IP tidak masuk ke dalam enkripsi tersebut.</p>
<blockquote>
<p>Kueri DNS itu mendahului trafik HTTP/S</p>
</blockquote>
<p>Jadi misalnya ketika kita melakukan login di suatu HTTPS website, ISP gak akan tahu username dan password yang kita masukkan, bentukan login page tersebut, dan bahkan sampai ke <em>endpoint</em> URLnya (<code>website.com/api/v1/login/?username=admin&amp;password=admin123</code>).</p>
<figure>
    <img src="imgs/image-20211104092043412.png"
         alt="Contoh konten yang dienkripsi"/> <figcaption>
            <p>Contoh konten yang dienkripsi
            </p>
        </figcaption>
</figure>

<p>Dengan kata lain, ISP hanya tahu tujuan kita mau kemana, tapi dia (seharusnya) gak bisa lihat apa yang kita lakukan di tempat tujuan itu.</p>
<p>Sampai disini, tentunya kita bisa menyimpulkan sendiri kenapa DoH bisa membuat komputer kita menghindari &ldquo;penipuan&rdquo; yang dilakukan DNS server ISP tersebut.</p>
<p>Yap, karena kueri DNSnya dibungkus HTTPS.</p>
<p>Awalnya DNS kueri dikirimkan tanpa enkripsi ke DNS server ISP melalui port 53, tapi dengan DoH, DNS kueri ini sekarang di <em>deliver</em> melalui HTTPS ke <em>endpoint</em> DoH yang juga HTTPS, misalnya Cloudflare: <a href="https://cloudflare-dns.com/dns-query">https://cloudflare-dns.com/dns-query</a>.</p>
<p><em><strong>Terus cloudflare-dns.com di resolve siapa?</strong></em></p>
<p>DNSnya ISP wkwkw. Yah ketahuan kan pakai DoH.</p>
<p>Tenang, kita bisa pakai versi IP 1^4-nya.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ curl -H <span class="s1">&#39;accept: application/dns-json&#39;</span> <span class="s2">&#34;https://1.1.1.1/dns-query?name=www.reddit.com&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;Status&#34;</span>:0,<span class="s2">&#34;TC&#34;</span>:false,<span class="s2">&#34;RD&#34;</span>:true,<span class="s2">&#34;RA&#34;</span>:true,<span class="s2">&#34;AD&#34;</span>:false,<span class="s2">&#34;CD&#34;</span>:false,<span class="s2">&#34;Question&#34;</span>:<span class="o">[{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;www.reddit.com&#34;</span>,<span class="s2">&#34;type&#34;</span>:1<span class="o">}]</span>,<span class="s2">&#34;Answer&#34;</span>:<span class="o">[{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;www.reddit.com&#34;</span>,<span class="s2">&#34;type&#34;</span>:5,<span class="s2">&#34;TTL&#34;</span>:288,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net.&#34;</span><span class="o">}</span>,<span class="o">{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net&#34;</span>,<span class="s2">&#34;type&#34;</span>:1,<span class="s2">&#34;TTL&#34;</span>:18,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;151.101.65.140&#34;</span><span class="o">}</span>,<span class="o">{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net&#34;</span>,<span class="s2">&#34;type&#34;</span>:1,<span class="s2">&#34;TTL&#34;</span>:18,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;151.101.129.140&#34;</span><span class="o">}</span>,<span class="o">{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net&#34;</span>,<span class="s2">&#34;type&#34;</span>:1,<span class="s2">&#34;TTL&#34;</span>:18,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;151.101.193.140&#34;</span><span class="o">}</span>,<span class="o">{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net&#34;</span>,<span class="s2">&#34;type&#34;</span>:1,<span class="s2">&#34;TTL&#34;</span>:18,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;151.101.1.140&#34;</span><span class="o">}]}</span>
</span></span></code></pre></div><h2 id="thou-shalt-bypass">Thou Shalt (By)Pass</h2>
<h3 id="hosts-file-the-primivite-dns">Hosts file: The Primivite DNS</h3>
<p>Tanpa DoH, sebenarnya kita bisa menghindari &ldquo;penipuan&rdquo; alamat IP tersebut di level <em>cache</em>.</p>
<p>Kita tahu bahwa alasan komputer kita membuat DNS kueri terlebih dahulu ke DNS server saat akan mengakses sebuah website adalah karena si komputer belum tahu alamat IP dari website/domain yang kita maksud. Setelah si komputer tahu, alamat IP dan domain web ini akan di simpan pada DNS Resolver cache. Di <em>request</em> selanjutnya, si komputer akan mengandalkan daftar cache yang ada (selama belum <em>expired</em>).</p>
<p>Pada Windows, kita bisa melihat daftar IP dan nama domain yang sudah di cache dengan menjalankan perintah berikut.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\&gt;</span>ifconfig /displaydns
</span></span></code></pre></div><p>DNS server sendiri pada dasarnya hanyalah sekumpulan entry yang me-<em>mapping</em> alamat IP dengan nama domain secara dinamik. Pada level OS, terdapat sebuah file yang merupakan bentukan primivite dari DNS bersifat statik, yaitu file <code>hosts</code>.</p>
<p>File <code>hosts</code> Windows bisa ditemukan di <code>C:\Windows\System32\drivers\etc\hosts</code> sedangkan untuk Unix-like, file <code>hosts</code> terdapat di <code>/etc/hosts</code>. Karena saya pengguna Windows, yang akan di bahas disini adalah <code>hosts</code> file Windows saja (pengguna Linux rata-rata sudah suhu soalnya).</p>
<figure>
    <img src="imgs/image-20211104123812239.png"
         alt="Windows hosts file"/> <figcaption>
            <p>Windows hosts file
            </p>
        </figcaption>
</figure>

<p>Pada Windows, file <code>hosts</code> ini akan selalu di-<em>load</em> ke dalam DNS Resolve cache, dan kita bisa memanfaatkan ini untuk memberi tahu komputer secara langsung bahwa alamat IP, misalnya <code>www.reddit.com</code>, adalah <code>151.101.129.140</code>. Caranya memberi tahunya adalah dengan menambahkan sebuah entry ke dalam file <code>hosts</code> dengan format berikut.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl"># [Alamat IP] [domain name 1] [domain name 2] [domain name N]
</span></span><span class="line"><span class="cl">151.101.129.140 reddit.com www.reddit.com
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20211104131236469.png" alt="image-20211104131236469"  /></div>
</p>
<p>Sekarang kita bisa jalankan kembali perintah yang sama untuk menampilkan DNS cache, tapi sebelum itu ada baiknya DNS cache ini di-<em>flush</em> terlebih dulu.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\&gt;</span>ipconfig /flushdns <span class="c1"># clear cache dulu untuk menghilangkan brainwash dari DNS server ISP</span>
</span></span><span class="line"><span class="cl">C:<span class="se">\&gt;</span>ipconfig /displaydns
</span></span></code></pre></div><p>Seharusnya saat ini <code>www.reddit.com</code> dan <code>reddit.com</code> berada di entry paling atas.</p>
<p>Karena si komputer sudah tahu alamat IP dari <code>www.reddit.com</code>, maka dia tidak perlu lagi &ldquo;bertanya&rdquo; ke DNS server ISP.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ tracert -d www.reddit.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Tracing route to reddit.com <span class="o">[</span>151.101.129.140<span class="o">]</span>
</span></span><span class="line"><span class="cl">over a maximum of <span class="m">30</span> hops:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="m">1</span>   <span class="m">120</span> ms     <span class="m">2</span> ms     <span class="m">3</span> ms  192.168.43.1
</span></span><span class="line"><span class="cl">  <span class="m">2</span>     *        *        *     Request timed out.
</span></span><span class="line"><span class="cl">  <span class="m">3</span>   <span class="m">162</span> ms    <span class="m">26</span> ms    <span class="m">26</span> ms  10.***.44.2
</span></span><span class="line"><span class="cl">  <span class="m">4</span>   <span class="m">160</span> ms    <span class="m">25</span> ms    <span class="m">30</span> ms  ***.215.36.238 
</span></span><span class="line"><span class="cl">  <span class="m">5</span>   <span class="m">187</span> ms    <span class="m">46</span> ms    <span class="m">46</span> ms  180.87.12.233
</span></span><span class="line"><span class="cl">  <span class="m">6</span>   <span class="m">186</span> ms    <span class="m">57</span> ms    <span class="m">50</span> ms  180.87.12.232
</span></span><span class="line"><span class="cl">  <span class="m">7</span>   <span class="m">191</span> ms    <span class="m">49</span> ms    <span class="m">47</span> ms  180.87.12.250
</span></span><span class="line"><span class="cl">  <span class="m">8</span>    <span class="m">49</span> ms    <span class="m">49</span> ms    <span class="m">48</span> ms  210.57.30.38
</span></span><span class="line"><span class="cl">  <span class="m">9</span>   <span class="m">188</span> ms    <span class="m">53</span> ms    <span class="m">52</span> ms  202.84.219.174
</span></span><span class="line"><span class="cl"> <span class="m">10</span>    <span class="m">70</span> ms    <span class="m">49</span> ms    <span class="m">52</span> ms  202.84.219.174
</span></span><span class="line"><span class="cl"> <span class="m">11</span>    <span class="m">60</span> ms    <span class="m">54</span> ms    <span class="m">49</span> ms  202.84.224.197
</span></span><span class="line"><span class="cl"> <span class="m">12</span>    <span class="m">83</span> ms    <span class="m">80</span> ms    <span class="m">85</span> ms  210.57.38.171
</span></span><span class="line"><span class="cl"> <span class="m">13</span>   <span class="m">205</span> ms   <span class="m">200</span> ms   <span class="m">203</span> ms  151.101.129.140 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Trace complete.
</span></span></code></pre></div><p><em><strong>Kalau untuk website lain gimana?</strong></em></p>
<p>Google Toolbox!</p>
<p>Jadi kamu resolve dulu IPnya lewat Google Toolbox Dig.</p>
<p><div class="img-container"><img src="imgs/image-20211104142819468.png" alt="image-20211104142819468"  /></div>
</p>
<p>Maka di <code>hosts</code> filenya:</p>
<p><div class="img-container"><img src="imgs/image-20211104142858365.png" alt="image-20211104142858365"  /></div>
</p>
<h3 id="ssh-socks-proxy--doh">SSH SOCKS Proxy + DoH</h3>
<p>Penggunaan <code>host</code> file dan DoH memang bisa mem-<em>bypass</em> Website, tapi pihak ISP tetap bisa mengetahui kita mengakses situs dan domain apa.</p>
<p>Untuk menghindari itu, salah satu cara &lsquo;murah&rsquo; dan mudah yang saya gunakan selain VPN adalah menggunakan <em>private server</em> lalu memanfaatkan fitur builtin SOCKS <a href="https://en.wikipedia.org/wiki/Proxy_server">proxy</a> dari SSH (jatuhnya transparan). <em>Private server</em> ini saya deploy sendiri di Microsoft Azure.</p>
<blockquote>
<p>Jika dari pembaca ada yang masih berstatus &lsquo;student&rsquo;, silahkan cek link berikut:</p>
<ul>
<li><a href="https://azure.microsoft.com/en-us/free/students/">https://azure.microsoft.com/en-us/free/students/</a></li>
</ul>
</blockquote>
<p>Untuk memanfaatkan SSH tunnel sebagai SOCKS proxy, perintahnya cukup simple:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ssh -i az_vm.key fproxy-user@20.109.***.213 -D <span class="m">1080</span> -N
</span></span></code></pre></div><ul>
<li><code>-D 1080</code>: Buka SOCKS proxy di port 1080 (listen)</li>
<li><code>-N</code>: Tanpa interactive shell.</li>
</ul>
<p>Saat ini SOCKS Proxy via SSH sudah tersedia di <code>127.0.0.1</code> port <code>1080</code>, dan kita tinggal mengkonfigurasikan setting-an proxy pada browser seperti berikut:</p>
<figure>
    <img src="imgs/image-20211104161049841.png"
         alt="Firefox proxy settings"/> <figcaption>
            <p>Firefox proxy settings
            </p>
        </figcaption>
</figure>

<p>Mudah kan?</p>
<p>Btw, saya pakai ekstensi browser <a href="https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/">FoxyProxy</a>, supaya saat <em>switch on/off</em>-nya mudah dan gak harus buka-buka settingan browser, berikut tampilannya.</p>
<figure>
    <img src="imgs/image-20211104160902204.png"
         alt="FoxyProxy Toogle"/> <figcaption>
            <p>FoxyProxy Toogle
            </p>
        </figcaption>
</figure>

<p>Konfigurasinya? sama dengan settingan browser!</p>
<figure>
    <img src="imgs/image-20211104090204141.png"
         alt="Konfigurasi SOCKS Proxy di Foxy Proxy"/> <figcaption>
            <p>Konfigurasi SOCKS Proxy di Foxy Proxy
            </p>
        </figcaption>
</figure>

<p>Dengan mengirimkan <em>request</em> ke <code>ifconfig.co/json</code>, saat ini IP saya adalah IP dari si private server.</p>
<figure>
    <img src="imgs/image-20211104090145368.png"
         alt="Akses ifconfig.co dengan proxy"/> <figcaption>
            <p>Akses ifconfig.co dengan proxy
            </p>
        </figcaption>
</figure>

<p>Lalu ditambah dengan DoH dan di test lewat <a href="https://dnsleaktest.com/">https://dnsleaktest.com/</a>.</p>
<figure>
    <img src="imgs/image-20211104090533201.png"
         alt="Test DNS leak dengan DoH aktif"/> <figcaption>
            <p>Test DNS leak dengan DoH aktif
            </p>
        </figcaption>
</figure>

<p>Sampai sini seharusnya ISP kurang lebih hanya melihat komputer saya yang mengakses si private server dengan trafik seperti berikut.</p>
<figure>
    <img src="imgs/image-20211104152555436.png"
         alt="Web trafic yang terenkripsi melalui SSH tunnel"/> <figcaption>
            <p>Web trafic yang terenkripsi melalui SSH tunnel
            </p>
        </figcaption>
</figure>

<h2 id="conclusion">Conclusion</h2>
<p>Selain menggunakan VPN, setidaknya ada 3 solusi di postingan ini yang bisa kamu coba untuk mem-bypass DNS filter yang diterapkan oleh ISP langganan kamu:</p>
<ul>
<li>Hosts file,</li>
<li>DoH,</li>
<li>SSH SOCKS Proxy + DoH.</li>
</ul>
<p>Menggunakan <code>hosts</code> file dan DoH hanya sebatas menghindari komputer kita dari &ldquo;penipuan&rdquo; alamat palsu oleh DNS server ISP. Sedangkan untuk &ldquo;SSH SOCKS Proxy + Doh&rdquo;, selain menghindari &ldquo;penipuan&rdquo;, tunnel yang dibuat juga mengenkripsi keseluruhan trafik web kita.</p>
<p>Hasil <em>testing</em> ketiganya, bukan <em>testing</em> sih, bisa ditabelkan(?) seperti berikut.</p>
<div class="force-center">
<table>
<thead>
<tr>
<th></th>
<th>Bypass DNS filters</th>
<th>Hide the domain we visit ?</th>
</tr>
</thead>
<tbody>
<tr>
<td>Hosts file</td>
<td>Probably yes</td>
<td>No</td>
</tr>
<tr>
<td>DoH</td>
<td>Yes, mostly</td>
<td>No</td>
</tr>
<tr>
<td>DoH + SSH SOCKS Proxy</td>
<td>Yes, mostly, but it depends.</td>
<td>Yes</td>
</tr>
</tbody>
</table>
</div>
<p><em><strong>Apakah dengan ini saya sudah <del>bisa menjadi anggota</del> anonymous?</strong></em></p>
<p>Nope, karena private server yang saya pakai pun milik sesuatu yang lebih besar dari ISP dan dua-duanya mengumpulkan data juga.</p>
<p>Baiklah, sekian untuk postingan ini~</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://https.cio.gov/faq/#what-does-https-do">https://https.cio.gov/faq/#what-does-https-do</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Hugo Site Deployment With Github Actions</title>
      <link>https://fahmifj.github.io/blog/hugo-deployment-with-github-actions/</link>
      <pubDate>Mon, 01 Nov 2021 14:51:02 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/hugo-deployment-with-github-actions/</guid>
      <description>Applying a small part of Continuous Deployment to your Hugo site</description>
      <content:encoded><![CDATA[<p>This post is a continuation from my previous post about <a href="https://fahmifj.github.io/blog/hugo-setup-and-deployment/">Hugo Setup and Deployment</a>. In this post, we&rsquo;ll look into GitHub Actions.</p>
<p>First thing first, let&rsquo;s sum up what we did previously:</p>
<ul>
<li>We created a site and generated its HTML files (under <code>/public</code> folder) using Hugo.</li>
<li>We hosted these HTML files in a GitHub repository (by enabling the GitHub Pages feature).</li>
<li>And then we wrote a deployment script written in bash, which is used to automatically generate and push the HTML files to the GitHub repository in order update the contents of our site.</li>
</ul>
<p>Actually, the deployment script we wrote is not the effective way to deploy our site if you care about network bandwidth and storage. This is because there will be a bunch of new HTML files generated on our machine and we&rsquo;re going to upload all of them to the Internet each time we wish to update the site. Luckily, we can tackle this with GitHub Actions</p>
<p>GitHub Actions basically does the same thing as we did, but, instead of using our own machine to generate and push the html files, we&rsquo;ll let GitHub VM/Docker instances do it for us.</p>
<p>I know that there are a lot of similar tutorials out there, but let me finish what I&rsquo;ve started!</p>
<h4 id="goals">Goals</h4>
<p>The only goal of this post is:</p>
<ul>
<li>Automate Site Deployment using GitHub Actions (I&rsquo;ll try my best to explain about it!)</li>
</ul>
<h4 id="prerequisites">Prerequisites</h4>
<p>Prerequisites are still the same, they are:</p>
<ul>
<li>A GitHub account</li>
<li>Familiarity with CLI</li>
<li>Familiarity with Git.</li>
</ul>
<h2 id="a-little-clean-up">A Little Clean Up</h2>
<p>Let&rsquo;s start by reviewing the previous site structure, here&rsquo;s where we (I) left it:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ tree -a -L <span class="m">2</span> -I <span class="s2">&#34;\.git&#34;</span>
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">â”œâ”€â”€ .gitmodules
</span></span><span class="line"><span class="cl">â”œâ”€â”€ archetypes
</span></span><span class="line"><span class="cl">â”‚Â Â  â””â”€â”€ default.md
</span></span><span class="line"><span class="cl">â”œâ”€â”€ config.yml
</span></span><span class="line"><span class="cl">â”œâ”€â”€ content
</span></span><span class="line"><span class="cl">â”‚Â Â  â””â”€â”€ post
</span></span><span class="line"><span class="cl">â”œâ”€â”€ data
</span></span><span class="line"><span class="cl">â”œâ”€â”€ deploy.sh
</span></span><span class="line"><span class="cl">â”œâ”€â”€ layouts
</span></span><span class="line"><span class="cl">â”œâ”€â”€ public <span class="c1"># &lt;-- All files under this folder are hosted using GitHub Pages,</span>
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ 404.html
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ assets
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ categories
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ en
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ fa
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ fr
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ index.html
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ index.json
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ index.xml
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ page
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ post
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ robots.txt
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ series
</span></span><span class="line"><span class="cl">â”‚Â Â  â”œâ”€â”€ sitemap.xml
</span></span><span class="line"><span class="cl">â”‚Â Â  â””â”€â”€ tags
</span></span><span class="line"><span class="cl">â”œâ”€â”€ resources
</span></span><span class="line"><span class="cl">â”‚Â Â  â””â”€â”€ _gen
</span></span><span class="line"><span class="cl">â”œâ”€â”€ static
</span></span><span class="line"><span class="cl">â””â”€â”€ themes
</span></span><span class="line"><span class="cl">    â””â”€â”€ PaperMod
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">20</span> directories, <span class="m">10</span> files
</span></span></code></pre></div><p>We&rsquo;ll now ignore the public folder and remove all of its content including the git repository inside it because this will be handled by GitHub Actions later.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ rm ./public/* -r f
</span></span><span class="line"><span class="cl">$ rm ./public/.git -rf
</span></span></code></pre></div><p>If you happen to use the <code>public</code> folder as a submodule, remove the following lines from <code>.git/config</code> and  <code>.gitmodules</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[submodule &#34;public&#34;]
</span></span><span class="line"><span class="cl">        url = https://github.com/your-username/my-blog.git
</span></span><span class="line"><span class="cl">        active = true
</span></span></code></pre></div><p>Clean any cached content from the <code>public</code> folder.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git rm --cached ./public -f
</span></span></code></pre></div><p>Then let&rsquo;s create another GitHub repository with the format <code>your-username.github.io</code>, because we&rsquo;re going to use this repo as the remote repository of our site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git remote add origin https://github.com/your-username/your-username.github.io.git
</span></span></code></pre></div><p>For the <code>config.yaml</code>, change the baseURL value with:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">baseURL</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://your-username.github.io/&#34;</span><span class="w">
</span></span></span></code></pre></div><h2 id="add-the-theme-as-submodule">Add the Theme as Submodule</h2>
<p>If you happen to not using theme as submodule previously, this time we will.</p>
<p>Run the following command to add the PaperMod theme we cloned previously as a submodule of our site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod
</span></span></code></pre></div><p>If you don&rsquo;t use the same theme, simply replace the url and directory parts to match yours.</p>
<h2 id="add-github-actions">Add GitHub Actions</h2>
<p>On the previous post, we automated several things: site build, commit, and push our site to GitHub using a bash script. We can call the execution of this script as a <strong>workflow</strong> that runs a single <strong>job</strong>, it is to deploy our site. Each command executed within the deployment script (build, commit, push) can be referred as a <strong>step</strong>.</p>
<p>GitHub Actions are basically the advanced version of the deployment script we created. It&rsquo;s event-driven, which means we can set a specific event to trigger the workflow. In this case, we&rsquo;ll create an event that will trigger the site deployment each time we push a new commit to the main branch.</p>
<p>A workflow file for GitHub Actions must be written in YAML syntax, and it&rsquo;s placed under a special directory called <code>.github/workflows/[here].yml</code>, so let&rsquo;s create the folder first inside our site repository.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ mkdir -p ./.github/workflows
</span></span></code></pre></div><p>We&rsquo;ll save the following code under the workflow directory with a name <code>gh-pages.yml</code> (<code>./.github/workflows/gh-pages.yml</code>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">github pages</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">push</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">branches</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">main </span><span class="w"> </span><span class="c"># Set a branch to deploy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">deploy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">runs-on</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-18.04</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">submodules</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">  </span><span class="c"># Fetch Hugo themes (true OR recursive)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">fetch-depth</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">    </span><span class="c"># Fetch all history for .GitInfo and .Lastmod</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Setup Hugo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-hugo@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">hugo-version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;latest&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">extended</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Build </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="l">hugo --minify --cleanDestinationDir</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deploy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-gh-pages@v3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">github_token</span><span class="p">:</span><span class="w"> </span><span class="l">${{ secrets.GITHUB_TOKEN }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">publish_dir</span><span class="p">:</span><span class="w"> </span><span class="l">./public</span><span class="w">
</span></span></span></code></pre></div><p>You can study the code yourself, because I&rsquo;m not the one who created it ðŸ˜…. But, to make sure that the public folder always get cleaned first before build, I added <code>--cleanDestinationDir</code> option.</p>
<p>Let&rsquo;s commit this workflow and push it to GitHub.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git add ./.github/workflows/gh-pages.yml
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;Add gh-pages.yml&#34;</span>
</span></span><span class="line"><span class="cl">$ git push -u origin main
</span></span></code></pre></div><h2 id="trigger-the-workflow">Trigger the Workflow!</h2>
<p>We can create a new post, then add some text to it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ hugo new post/test-gh-actions.md
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;Test GH Action&#39;</span> &gt;&gt; content/post/test-gh-actions.md
</span></span></code></pre></div><p>Finally, commit the change and push it to your repository to trigger the workflow</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;Trigger build&#34;</span>
</span></span><span class="line"><span class="cl">$ git push -u origin main
</span></span></code></pre></div><p>To observe the deployment process/workflow, just navigate to your site repository and click on the action menu (<code>https://github.com/your-username/your-username.github.io/actions</code>).</p>
<p>That&rsquo;s it!</p>
<h2 id="my-current-deployment">My Current Deployment</h2>
<p>A bit off topic, but I&rsquo;ll show you my current deployment process.</p>
<p>My deployment process a little bit different, because I&rsquo;ve separated my blog into two: blog-core and the full static HTML site (it&rsquo;s this site). The blog-core is a private repo whereas the full static HTML is a public repository. The blog-core repo contains my draft, notes, and other (a lot of them), which is only available for me locally because of <code>.gitignore</code>.</p>
<p>When a new commit is pushed on the blog-core, GitHub Actions will be triggered to generate the static HTML files. The newly generated HTML files are then pushed to the public repo. I had to include my secret token in the blog-core so that GitHub Actions could use the token to authenticate itself to do some modification on public repo.</p>
<p><div class="img-container"><img src="imgs/image-20211102111943965.png" alt="image-20211102111943965"  /></div>
</p>
<p>Note: these are not the actual commands.</p>
<p><del>I&rsquo;ll separate this section in a dedicated post later! nevermind lol</del></p>
<p>Well, it&rsquo;s not in detail, but it should give you an idea of how it works. See you in another post.</p>
<blockquote>
<p>I found the blog post that explains about this: <a href="https://victoria.dev/blog/two-ways-to-deploy-a-public-github-pages-site-from-a-private-hugo-repository/">Deploy a Public Github Pages site from a Private Hugo Repository</a>. And here&rsquo;s the Github Actions that I use <a href="https://github.com/victoriadrake/hugo-remote">Hugo Remote</a>.</p>
</blockquote>
]]></content:encoded>
    </item>
    
    <item>
      <title>Revamp Blog</title>
      <link>https://fahmifj.github.io/blog/revamp-blog/</link>
      <pubDate>Fri, 15 Oct 2021 07:28:41 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/revamp-blog/</guid>
      <description>Mod the PaperMod</description>
      <content:encoded><![CDATA[<p>Belakangan ini saya agak telat nulis write-up, tapi kemarin sudah &ldquo;terlunaskan&rdquo;.  Alasan telatnya adalah satu minggu yang lalu saya mencoba  <del>memindahkan VHD lab pentest ke volume baru tapi akhirnya corrupt</del> sedikit me-<em>revamp</em> blog ini.</p>
<p>Sebagai catatan sendiri dan mungkin berguna untuk yang mampir, di postingan ini saya hanya akan membahas sedikit bagian yang mencolok yang saya ubah. Desain kasarnya bisa dilihat digambar berikut.</p>
<p><div class="img-container"><img src="imgs/image-20211015074555598.png" alt="image-20211015074555598"  /></div>
<small>The power of Ms. Paint</small></p>
<h2 id="r1-float-the-toc">R1: Float the ToC</h2>
<p>Tulisan yang saya posting umumnya adalah &lsquo;semacam&rsquo; <em>walkthrough</em>, tentunya <em>floating</em> ToC (Table of Content) adalah salah satu hal yang diperlukan oleh pembaca (kalau ada yang baca) untuk loncat-loncat antar <em>section</em>. Sayangnya ToC bawaan tema dasar blog ini, yaitu <a href="https://github.com/adityatelange/hugo-PaperMod/">PaperMod</a>, belum <em>floating</em>.</p>
<p>Solusi yang terpikirkan tanpa penggantian tema atau pengunaan plugin yang keduanya jelas berat di JavaScript, dan juga tanpa mengacak-ngacak tema dasar adalah dengan membagi dua area konten setelah header menjadi area ToC dan area konten teks yang rasio-nya adalah <strong>3:7</strong>. Kedua area ini dibungkus oleh satu kontainer flex.</p>
<p><div class="img-container"><img src="imgs/image-20211015105411374.png" alt="image-20211015105411374"  /></div>
</p>
<p>Supaya area konten tetap dengan lebar 100%, hal selanjutnya adalah mengeluarkan si area ToC ini dari kontainer dengan meminuskan properti <code>margin-left</code>-nya sebesar lebarnya sendiri (-1*0.3*100%).</p>
<p><div class="img-container"><img src="imgs/image-20211015111941266.png" alt="image-20211015111941266"  /></div>
</p>
<p>Sisanya hanya tinggal <em>styling</em> dan penyesuaian posisi dari ToC tersebut.</p>
<p>Desain ToC ini <del>nyolong</del> terinspirasi dari blognya <a href="https://0xdf.gitlab.io/">0xdf</a> yang pakai <a href="https://afeld.github.io/bootstrap-toc/">bootstrap toc</a>.</p>
<h2 id="r2-show-latest-posts">R2: Show Latest Posts</h2>
<p>Selanjutnya adalah &ldquo;Latests Posts&rdquo; berikut.</p>
<p><div class="img-container"><img src="imgs/image-20211015132036300.png" alt="image-20211015132036300"  /></div>
</p>
<p>Penambahan bagian &ldquo;Latests Posts&rdquo; ini sebenarnya hanya sekadar <em>copy paste</em> template halaman arsip yang dibuat ke template parsial lalu dipanggil di <code>layouts/list.html</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="p">{{</span><span class="o">-</span> <span class="k">if</span> <span class="p">(</span><span class="nx">and</span> <span class="p">.</span><span class="nx">Site</span><span class="p">.</span><span class="nx">Params</span><span class="p">.</span><span class="nx">profileMode</span><span class="p">.</span><span class="nx">enabled</span> <span class="p">.</span><span class="nx">IsHome</span><span class="p">)</span> <span class="p">}}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">{{</span><span class="o">-</span> <span class="nx">partial</span> <span class="s">&#34;c_profilemode.html&#34;</span> <span class="p">.</span> <span class="p">}}</span>
</span></span><span class="line"><span class="cl"><span class="p">{{</span><span class="o">-</span> <span class="nx">partial</span> <span class="s">&#34;c_latest_posts.html&#34;</span> <span class="p">.</span> <span class="p">}}</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>
</span></span></code></pre></div><p>Dan berikut potongan kode yang relevant dari template  <code>c_latest_posts.html</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl">  <span class="p">{{</span> <span class="k">range</span> <span class="nx">first</span> <span class="mi">5</span> <span class="p">(.</span><span class="nx">Site</span><span class="p">.</span><span class="nx">RegularPages</span><span class="p">)</span> <span class="p">}}</span> <span class="cm">/* index 0 = newest */</span>
</span></span><span class="line"><span class="cl">  <span class="p">{{</span> <span class="p">.</span><span class="nx">Title</span> <span class="p">}}</span>
</span></span><span class="line"><span class="cl">  <span class="o">...</span>
</span></span><span class="line"><span class="cl">  <span class="p">{{</span> <span class="p">.</span><span class="nx">Date</span><span class="p">.</span><span class="nx">Format</span> <span class="s">&#34;Jan 02&#34;</span> <span class="p">}}</span>
</span></span><span class="line"><span class="cl">  <span class="o">...</span>
</span></span><span class="line"><span class="cl">  <span class="p">{{</span><span class="o">-</span> <span class="nx">printf</span> <span class="s">&#34;%d min&#34;</span> <span class="p">.</span><span class="nx">ReadingTime</span> <span class="p">}}</span>
</span></span><span class="line"><span class="cl">  <span class="o">...</span>
</span></span><span class="line"><span class="cl">  <span class="p">{{</span><span class="o">-</span> <span class="nx">end</span> <span class="p">}}</span>
</span></span></code></pre></div><p>Desain untuk &ldquo;Latests Posts&rdquo;  ini <del>nyolong</del> terinspirasi dari tema <a href="https://github.com/Track3/hermit">Hermit</a>, <a href="https://faultable.dev/">faultable.dev</a>, dan <a href="https://www.taniarascia.com/">taniarascia.com</a>.</p>
<h2 id="r3-show-tags-in-a-post-entry">R3: Show Tags in a Post Entry</h2>
<p>Tujuan menampilkan tag pada <em>post entry</em> ini simplenya adalah untuk memberi gambaran tentang topik apa yang di bahas di suatu postingan tersebut.</p>
<p><div class="img-container"><img src="imgs/image-20211015144040968.png" alt="image-20211015144040968"  /></div>
</p>
<p>Untuk menampilkan tag di setiap <em>post entry</em>, saya perlu mengubah total struktur HTML untuk <em>post entry</em>. Kode yang digunakan untuk menampilkan tag beserta tautannya merupakan modifikasi dari kode yang ada pada dokumentasi Hugo ini: <a href="https://gohugo.io/templates/taxonomy-templates/#example-comma-delimit-tags-in-a-single-page-template">Taxonomy Templates | Hugo (gohugo.io)</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="p">{{</span> <span class="err">$</span><span class="nx">taxo</span> <span class="o">:=</span> <span class="s">&#34;tags&#34;</span> <span class="p">}}</span>
</span></span><span class="line"><span class="cl"><span class="p">{{</span> <span class="nx">with</span> <span class="p">.</span><span class="nx">Param</span> <span class="err">$</span><span class="nx">taxo</span> <span class="p">}}</span>
</span></span><span class="line"><span class="cl">	<span class="p">{{</span> <span class="err">$</span><span class="nx">tag_limit</span> <span class="o">:=</span> <span class="mi">7</span> <span class="p">}}</span>
</span></span><span class="line"><span class="cl">	<span class="p">{{</span> <span class="k">if</span> <span class="nf">ne</span> <span class="p">(</span><span class="nx">len</span> <span class="p">.)</span> <span class="mi">0</span> <span class="p">}}</span>
</span></span><span class="line"><span class="cl">		<span class="p">{{</span><span class="o">-</span> <span class="k">range</span> <span class="err">$</span><span class="nx">k</span><span class="p">,</span> <span class="err">$</span><span class="nx">v</span> <span class="o">:=</span> <span class="p">.</span> <span class="o">-</span><span class="p">}}</span>
</span></span><span class="line"><span class="cl">		<span class="p">{{</span> <span class="k">if</span> <span class="nf">lt</span> <span class="p">(</span><span class="nx">add</span> <span class="err">$</span><span class="nx">k</span> <span class="mi">1</span><span class="p">)</span> <span class="err">$</span><span class="nx">tag_limit</span> <span class="p">}}</span>
</span></span><span class="line"><span class="cl">			<span class="p">{{</span><span class="o">-</span> <span class="k">if</span> <span class="nf">and</span> <span class="p">(</span><span class="nx">gt</span> <span class="err">$</span><span class="nx">k</span> <span class="mi">0</span><span class="p">)</span> <span class="o">-</span><span class="p">}}</span><span class="err">Â·</span><span class="o">&amp;</span><span class="nx">nbsp</span><span class="p">;{{</span><span class="o">-</span> <span class="nx">end</span> <span class="o">-</span><span class="p">}}</span> 
</span></span><span class="line"><span class="cl">			<span class="p">{{</span><span class="o">-</span> <span class="nx">with</span> <span class="err">$</span><span class="p">.</span><span class="nx">Site</span><span class="p">.</span><span class="nf">GetPage</span> <span class="p">(</span><span class="nx">printf</span> <span class="s">&#34;/%s/%s&#34;</span> <span class="err">$</span><span class="nx">taxo</span> <span class="err">$</span><span class="nx">v</span><span class="p">)</span> <span class="o">-</span><span class="p">}}</span>
</span></span><span class="line"><span class="cl">			<span class="p">&lt;</span><span class="nx">a</span> <span class="nx">href</span><span class="p">=</span><span class="s">&#34;{{ .Permalink }}&#34;</span><span class="p">&gt;{{</span><span class="o">-</span> <span class="err">$</span><span class="nx">v</span> <span class="o">-</span><span class="p">}}&lt;</span><span class="o">/</span><span class="nx">a</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">			<span class="p">{{</span><span class="o">-</span> <span class="nx">end</span> <span class="o">-</span><span class="p">}}</span>
</span></span><span class="line"><span class="cl">			<span class="p">{{</span><span class="o">-</span> <span class="nx">end</span> <span class="o">-</span><span class="p">}}</span>
</span></span><span class="line"><span class="cl">		<span class="p">{{</span><span class="o">-</span> <span class="nx">end</span> <span class="o">-</span><span class="p">}}</span>
</span></span><span class="line"><span class="cl">	<span class="p">{{</span><span class="o">-</span> <span class="nx">end</span> <span class="o">-</span><span class="p">}}</span>
</span></span><span class="line"><span class="cl"><span class="p">{{</span> <span class="nx">end</span> <span class="p">}}</span>
</span></span></code></pre></div><h2 id="to-be-contd">To be cont&rsquo;d</h2>
<p>Selain 3 hal diatas, ada beberapa elemen/fitur bawaan yang diotak-atik seperti <em>pagination</em> dibuang, <em>search indexing</em>, navbar, atau bahkan cuma sekadar iseng <em>mainin</em> animasi CSS pseudo selector yang  <del>nyolong</del> terinspirasi dari <a href="https://yui540.design/">yui540</a> dan <a href="https://sai-chan.com/">sai-chan</a>. Tapi karena masih berantakan juga strukturnya, contohnya halaman CTF, jadi mungkin dilanjut di lain waktu.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
